
==================== FINAL INTERFACE ====================
2017-04-22 20:20:44.9822036 UTC

interface Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A:Crawler [orphan module] [family instance module] 8001
  interface hash: 0f0a419b57d7c523fdbcb6bc903de6cb
  ABI hash: 1fe7efc626c21ba332b2785f6963e921
  export-list hash: 2490b05874b2d81652f9ed3e4f62164a
  orphan hash: c85937175421e69fa765b34c1a4040af
  flag hash: 9193a1108f5073ddaa226dd5af582a94
  sig of: Nothing
  used TH splices: False
  where
exports:
  Crawler.addLookup
  Crawler.crawlContributorToUser
  Crawler.crawlEngine
  Crawler.crawlOnContributor
  Crawler.crawlOnLanguage
  Crawler.crawlOnRepo
  Crawler.crawlOnUser
  Crawler.crawlRepoToContributors
  Crawler.crawlRepoToLanguage
  Crawler.crawlUserToRepos
  Crawler.crawlerApp
  Crawler.crawlerServer
  Crawler.findCrawl
  Crawler.findLookup
  Crawler.findToken
  Crawler.initCrawler
  Crawler.killCrawler
  Crawler.logLinkAction
  Crawler.mkCrawler
  Crawler.newLookupMap
  Crawler.startCrawl
  Crawler.storeToken
  Crawler.upsertCrawl
  Crawler.upsertCrawlWhenTrue
  Crawler.Crawl{Crawler.Crawl cName cStatus}
  Crawler.CrawlInfo{Crawler.CrawlInfo cAuthToken cHops cUserName}
  Crawler.LookupMap{Crawler.LookupMap entries}
  Crawler.Token{Crawler.Token tName tValue}
module dependencies: Boltery Common CommonApi MongoDbConnector
package dependencies: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      StateVar-1.1.0.4@StateVar-1.1.0.4-CJpWsiXJdd89SnV9dZtTwc
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc
                      aeson-1.0.2.1@aeson-1.0.2.1-IWZLPncKUtsCKiJwRHsVV2
                      aeson-compat-0.3.6@aeson-compat-0.3.6-GGNwrjzrRWDAf6AKSzaJWI
                      appar-0.1.4@appar-0.1.4-1in4Ewd8JBkAYDZSWXLSe0
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.4@asn1-encoding-0.9.4-3YVEfMH4lKFFFWYCBjLHYe
                      asn1-parse-0.9.4@asn1-parse-0.9.4-472aFk4Rjki87YeAg9g5Ph
                      asn1-types-0.3.2@asn1-types-0.3.2-FQg5wDTaVh0IwfdUfCcNmt
                      async-2.1.1@async-2.1.1-xFiBzw9xoB8HPZAuxUY2o
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR
                      auto-update-0.1.4@auto-update-0.1.4-GAesfFmqoZzBz6e09kRyzb
                      base-4.9.0.0
                      base-compat-0.9.1@base-compat-0.9.1-Jorka5wAHbt82D18A4gF6b
                      base-orphans-0.5.4@base-orphans-0.5.4-5IQvrjd7gNP548VkOOyIq6
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-5dPoF8dzhwzBaEB2MvnmIS
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-In9M41tLtcS9QYt3QpGpNY
                      bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p
                      binary-0.8.3.0@binary-0.8.3.0
                      binary-orphans-0.1.5.1@binary-orphans-0.1.5.1-DPC52mntbhkG4cEV7O2TQl
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-KWDLbdBYSBoALiMW0LHIz1
                      blaze-html-0.8.1.3@blaze-html-0.8.1.3-8MBPJsFNBtBBD2gWERenva
                      blaze-markup-0.7.1.1@blaze-markup-0.7.1.1-IE161DWDHNXF9O8bBguli5
                      bson-0.3.2.3@bson-0.3.2.3-EE4NjCypFvQ16toPJxQaT3
                      bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F
                      byteable-0.1.1@byteable-0.1.1-15aIBCArSOBEnGxArzrDTM
                      byteorder-1.0.4@byteorder-1.0.4-BbL4c17EpZrL9PcZm0xys9
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.7@case-insensitive-1.2.0.7-FlqweN7AuKj9EdU2arVEt4
                      cereal-0.5.4.0@cereal-0.5.4.0-2FJYHGgtE5C3SxaZjt25xS
                      cipher-aes-0.2.11@cipher-aes-0.2.11-6IDqXzfBW6B3WK2bKJbiBh
                      comonad-5@comonad-5-2RMxpSOQ5MCHLHIelJrHD4
                      connection-0.2.6@connection-0.2.6-7Q3EnbUKiqWBOpVdhPNll1
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-KSQE31a7FruKHDlp90hIUT
                      cookie-0.4.2.1@cookie-0.4.2.1-2a2c54yIyBn79Ul3iLWclJ
                      cprng-aes-0.6.1@cprng-aes-0.6.1-FC7oaZWVuSwGLsSRmNtnfS
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-Iwzx9devSK6HQoOjujg46u
                      crypto-random-0.0.9@crypto-random-0.0.9-AGKuDxkGmdkICMALIbcYDi
                      cryptohash-0.11.9@cryptohash-0.11.9-AKA83W6XJLuJ6ooDzY2r0l
                      cryptonite-0.19@cryptonite-0.19-JQTQGTq5BGQJS9F2vRxlj
                      data-binary-ieee754-0.4.4@data-binary-ieee754-0.4.4-F1HjhwdV1xx5grS0eMjeg2
                      data-default-0.7.1.1@data-default-0.7.1.1-5uix4eIzBY9IcVb4V2HbW3
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-B3LqdWnlDzL8N7WtQnkQ3T
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-7EnnOuRxBMR4O5lm1rpRqD
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-LPOHPEJCJUa53W1ZYaHB84
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-ESBROgKchbm3QXcQv2e7oG
                      directory-1.2.6.2@directory-1.2.6.2
                      distributive-0.5.0.2@distributive-0.5.0.2-Cdz2vLOk85j1doGXLcictT
                      dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv
                      easy-file-0.2.1@easy-file-0.2.1-7vzbDevzFvQJn2BrZeISDk
                      errors-2.1.3@errors-2.1.3-9dPYnhb3gqE7GWHRoqGMmJ
                      exceptions-0.8.3@exceptions-0.8.3-7py7fmRxowDFpHmiHGKrTb
                      fast-logger-2.4.10@fast-logger-2.4.10-6kJ2jaZaxREHZQiEeA3Z9T
                      file-embed-0.0.10@file-embed-0.0.10-IXfudWSq57y1Athysk5ifZ
                      filepath-1.4.1.0@filepath-1.4.1.0
                      free-4.12.4@free-4.12.4-Etm59Dm8iExFxAy1L49Ovd
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS
                      hasbolt-0.1.0.9@hasbolt-0.1.0.9-AJXJGY2ypvLC8K54oQUQlt
                      hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G
                      hashtables-1.2.1.0@hashtables-1.2.1.0-97BixhaJIWTIDAaThqJujl
                      hourglass-0.2.10@hourglass-0.2.10-17WCSaZB7oBF5JMwDbmBMG
                      hslogger-1.2.10@hslogger-1.2.10-sT57JmCNO02KPQ07k0Jv6
                      http-api-data-0.3.2@http-api-data-0.3.2-A22DPUhAmUlrIoBZ4qkGB
                      http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z
                      http-client-tls-0.2.4.1@http-client-tls-0.2.4.1-GLneheAkBVv2w7qgvVFtET
                      http-date-0.0.6.1@http-date-0.0.6.1-150spKQYCuoIrltdbMmYGs
                      http-link-header-1.0.3@http-link-header-1.0.3-fKy7Q0vE064cd4UDnyGGp
                      http-media-0.6.4@http-media-0.6.4-82jDVCpdN5H696EFF5l5I4
                      http-types-0.9.1@http-types-0.9.1-8WdUZL4twHzANJbxvb1Aoj
                      http2-1.6.2@http2-1.6.2-8AbNCX9FS8K1gUe78Emp1g integer-gmp-1.0.0.1
                      iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3
                      iso8601-time-0.1.4@iso8601-time-0.1.4-CQXtvTAot9eJkkRKHuVCon
                      kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr
                      keys-3.11@keys-3.11-29BLD8qqiVyGmZ87zOkaxG
                      lifted-base-0.2.3.8@lifted-base-0.2.3.8-KLkd0w1UJqu6nE8oVTTEBy
                      memory-0.13@memory-0.13-ABHR5331zHK9scHPRr7afU
                      mime-types-0.1.0.7@mime-types-0.1.0.7-AxQ64wFjikqCSdK5pSeZvh
                      mmorph-1.0.9@mmorph-1.0.9-DmSwQqk5nLj7roLAcydGz
                      monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT
                      mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      network-2.6.3.1@network-2.6.3.1-nK9qnsiJR03CWuPIGMmX
                      network-simple-0.4.0.5@network-simple-0.4.0.5-GNWN1gLrnMS3DQFJtwOijq
                      network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2
                      nonce-1.0.2@nonce-1.0.2-5AJC5Z1QNmbDHXkdC0qzs0
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      parsec-3.1.11@parsec-3.1.11-BCos4GEVCuDB8dnOCBHO6X
                      pem-0.2.2@pem-0.2.2-qPMQP6sZm3HgQEmiBojNt
                      pointed-5@pointed-5-4thBVDuswzyHT6OwPKJEnE
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-FAyB4iuuM7cHXdrLMZtdXq
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      profunctors-5.2@profunctors-5.2-2ZZOz6u59T2H8y7z3NgZkY
                      psqueues-0.2.2.3@psqueues-0.2.2.3-YN2xKllZOMJLtAgRHlkEw
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z
                      safe-0.3.10@safe-0.3.10-1VyrsjWhmjvGnGud5lgW7f
                      scientific-0.3.4.9@scientific-0.3.4.9-6oTYuCcx6H5BsTGU7D2Gk3
                      securemem-0.1.9@securemem-0.1.9-AlUbMorzPNe4lwnV15ASIa
                      semigroupoids-5.1@semigroupoids-5.1-1Gay4xNO77GHd4DGCzVuax
                      servant-0.9.1.1@servant-0.9.1.1-BMzPHFjspLnD38uAz6wSUb
                      servant-client-0.9.1.1@servant-client-0.9.1.1-53t7WdoYt3I67frsrNV7TX
                      servant-server-0.9.1.1@servant-server-0.9.1.1-DE2J1HrS99GJcT3WTSVjFf
                      socks-0.5.5@socks-0.5.5-CDtE058LGrg48HLqU60P0R
                      split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      streaming-commons-0.1.16@streaming-commons-0.1.16-1CT5SENqavw7Xg1mdSO0ef
                      string-conversions-0.4@string-conversions-0.4-8T0UFmRDEly2gsNJzmHrNQ
                      tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx
                      template-haskell-2.11.0.0
                      text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-1j5dGjxxtiTDuAsO86iSk0
                      tls-1.3.8@tls-1.3.8-8GKWLz59XFLJdmmvqVtT7b
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-25SoAegOdaF8rLEnnb5jPI
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-81lZyuOJOvsD0zyCv2TKld
                      unexceptionalio-0.3.0@unexceptionalio-0.3.0-3nDcFbDMfKl1BSaDMqCv5B
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-GfTEbzsMzf3JahCxeP2fig
                      unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW
                      uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-2T8mBCuEDlXDo8zed8Onw4
                      uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx
                      vault-0.3.0.6@vault-0.3.0.6-CA9Xj82tAPe9nD32xVMgDG
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
                      vector-binary-instances-0.2.3.3@vector-binary-instances-0.2.3.3-ITLfSosnCjgDHIm70KxMIu
                      vector-instances-3.3.1@vector-instances-3.3.1-I6TdtGyV4ig2RKtxblZRcS
                      wai-3.2.1.1@wai-3.2.1.1-GVNFJ2NUhhADT18B8nh1gg
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-DeTa1z3VEolITqmVA6CDdU
                      wai-logger-2.3.0@wai-logger-2.3.0-B1TSfcg2MSABqaGF5fd5IG
                      warp-3.2.11@warp-3.2.11-3f0GdBy4N7PBe7H9xN4yrg
                      word8-0.1.2@word8-0.1.2-2E1SgvvAV2fK8vZPDHbRan
                      x509-1.6.5@x509-1.6.5-50w9ZWnvQdrHCXUm82xnmn
                      x509-store-1.6.2@x509-store-1.6.2-9dzQvVcRZx8okbOupFLld
                      x509-system-1.6.4@x509-system-1.6.4-9A0O4xc5FxpHhIy8kqlvTd
                      x509-validation-1.6.5@x509-validation-1.6.5-4klcFQmrJewFXisIYAqrfC
                      zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV
orphans: Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A:Common
         MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Text.Internal
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         binary-orphans-0.1.5.1@binary-orphans-0.1.5.1-DPC52mntbhkG4cEV7O2TQl:Data.Binary.Orphans
         bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-B3LqdWnlDzL8N7WtQnkQ3T:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-7EnnOuRxBMR4O5lm1rpRqD:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-LPOHPEJCJUa53W1ZYaHB84:Data.Default.Instances.OldLocale
         hasbolt-0.1.0.9@hasbolt-0.1.0.9-AJXJGY2ypvLC8K54oQUQlt:Database.Bolt.Connection.Instances
         hasbolt-0.1.0.9@hasbolt-0.1.0.9-AJXJGY2ypvLC8K54oQUQlt:Database.Bolt.Value.Instances
         hasbolt-0.1.0.9@hasbolt-0.1.0.9-AJXJGY2ypvLC8K54oQUQlt:Database.Bolt.Value.Structure
         hashable-1.2.4.0@hashable-1.2.4.0-EMu4H7FB10MAl6hwKw992G:Data.Hashable.Generic
         http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client.Request
         mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Internal.Util
         network-2.6.3.1@network-2.6.3.1-nK9qnsiJR03CWuPIGMmX:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
         vector-binary-instances-0.2.3.3@vector-binary-instances-0.2.3.3-ITLfSosnCjgDHIm70KxMIu:Data.Vector.Binary
         vector-instances-3.3.1@vector-instances-3.3.1-I6TdtGyV4ig2RKtxblZRcS:Data.Vector.Instances
family instance modules: Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A:Common
                         adjunctions-4.3@adjunctions-4.3-3ol9sWZt3In19pwXwPv3Xc:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-5Olk1S76r1CDYzFS6V3sZR:Data.Attoparsec.Internal.Types
                         base-4.9.0.0:Control.Applicative base-4.9.0.0:Data.Complex
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Compose
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.Functor.Product base-4.9.0.0:Data.Functor.Sum
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-8Xk5Wsnk1fr6rBLkW9MO8p:Data.Bifunctor.Wrapped
                         bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-GWAMmbX9rLg3tqrbOizHGv:Data.DList
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Auth
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Activities
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Comments
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Content
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Definitions
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.DeployKeys
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Events
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Gists
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.GitData
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Id
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Issues
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Milestone
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Name
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Options
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.PullRequests
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Repos
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Request
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Search
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Teams
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.URL
                         github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Webhooks
                         http-api-data-0.3.2@http-api-data-0.3.2-A22DPUhAmUlrIoBZ4qkGB:Web.Internal.FormUrlEncoded
                         http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EsJa15Wmnfj5pBTvNuT9V3:Data.IP.Range
                         kan-extensions-5.0.1@kan-extensions-5.0.1-Asa0tkk9PuPLZ2eXuJ10Gr:Data.Functor.Day
                         keys-3.11@keys-3.11-29BLD8qqiVyGmZ87zOkaxG:Data.Key
                         monad-control-1.0.1.0@monad-control-1.0.1.0-HoNEBoNfniX3vjSfkI7WTT:Control.Monad.Trans.Control
                         network-uri-2.6.1.0@network-uri-2.6.1.0-DDHh2FNiPirBRgkuU9DEt2:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource.Internal
                         servant-0.9.1.1@servant-0.9.1.1-BMzPHFjspLnD38uAz6wSUb:Servant.API.ContentTypes
                         servant-0.9.1.1@servant-0.9.1.1-BMzPHFjspLnD38uAz6wSUb:Servant.API.IsSecure
                         servant-0.9.1.1@servant-0.9.1.1-BMzPHFjspLnD38uAz6wSUb:Servant.API.Verbs
                         servant-0.9.1.1@servant-0.9.1.1-BMzPHFjspLnD38uAz6wSUb:Servant.Utils.Links
                         servant-client-0.9.1.1@servant-client-0.9.1.1-53t7WdoYt3I67frsrNV7TX:Servant.Client
                         servant-client-0.9.1.1@servant-client-0.9.1.1-53t7WdoYt3I67frsrNV7TX:Servant.Common.BaseUrl
                         servant-client-0.9.1.1@servant-client-0.9.1.1-53t7WdoYt3I67frsrNV7TX:Servant.Common.Req
                         servant-server-0.9.1.1@servant-server-0.9.1.1-DE2J1HrS99GJcT3WTSVjFf:Servant.Server.Internal
                         servant-server-0.9.1.1@servant-server-0.9.1.1-DE2J1HrS99GJcT3WTSVjFf:Servant.Server.Internal.BasicAuth
                         tagged-0.8.5@tagged-0.8.5-CtgV6EcN0do8F92i1S6iYx:Data.Tagged
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text
                         text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Lazy
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashMap.Base
                         unordered-containers-0.2.7.1@unordered-containers-0.2.7.1-Eo9jd5DMz45DhBLCG8skzW:Data.HashSet
                         uri-bytestring-0.2.2.1@uri-bytestring-0.2.2.1-LMJUdG9s1QpIQ10mPWMO6d:URI.ByteString.Types
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-1qmdgBeDGlbCUibOmxVGqx:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
                         vector-instances-3.3.1@vector-instances-3.3.1-I6TdtGyV4ig2RKtxblZRcS:Data.Vector.Instances
                         zlib-0.6.1.2@zlib-0.6.1.2-4CWLN1T27kOJhNvXgy46ZV:Codec.Compression.Zlib.Stream
import  -/  Boltery b4e4b7e5e4a822f86c85bafda8e11964
  exports: 75cfb27af13efe38590490b891daae9a
  boltStoreLanguage 7ac8144cc0b5460eff9caaa5af844e9a
  boltStoreRepo 7f5e26fce513ca63f6daefd7b206ad8c
  boltStoreRepoLanguageLink 918fecb246f4d3762bf8af878301fc30
  boltStoreUser 5e7893118108d362a89f931027ab6b87
  boltStoreUserLanguageLink 60e74c499af2187c08450cd305a0ef8c
  boltStoreUserRepoCollabLink 0630235e7d32e1bc7a299a86a78aa06a
  boltStoreUserRepoOwnerLink dec0363c0571c95f77cbf3b22f73f54d
import  -/  Common db12178cf8b410a143fef4b88a0834e1
  exports: 996ffc95886585b014f0a144183f2937
  Response 53a3c2c569bc67288247d006b5f1620b
  Response 7c1fc867cefe8f1e9c06794d2b3a73cc
  User b83341e7c4b5c72f1c07a766393623a8
  User 827d9ba5cd68dc8a0c948e3e20ed1569
  getIdentityPort 44a34b94371d2b592f7f717ed05d8591
  getIdentitySafeString ea09af472a2a69571b7792b20389284d
  logAction 7436ab6cc532b9a7679c548aecc41656
  logBoolAction fe100a1fc5b072434138e0dbf67fb495
  logDatabase 4f6e488e6a113e78cdd86210edb58992
  logError ee123b701ab8c52bc64f5924b5cefc91
  logHeading 886f4564c726e3795a8f1b97e383b068
  logTrailing 4c34eb99ded2ff932cfacbf7ed829d92
  uAuthToken 773712e2cf96851aa2d911c60d4d8dbf
  uHops 0193eb59f774f1927b740a3eb4dc7a61
  uName eb6ba511d40f0187009699757e88ade0
import  -/  CommonApi 082aa63996eccc68206f94d85e2f26b6
  exports: cb3d6a90af46faff89350049b62c3515
  ApiHandler 4bd010d30599a5943dd922bc38ea2405
  CrawlerApi 0ad1e7b06063d5d5a218aa574141c514
  crawlerApi ebb1085a4394621b733722b26c75a72d
  crawlerIdentity adb902d35ea7b24206839d06c092cbdd
import  -/  MongoDbConnector 8d1e871639d63cfd4f78b6628df2747f
  exports: 033e49394de21dd6bd52e3c3a6334cca
  connectToDatabase 349d0dae3b7a54f16036b1fe19057674
  drainCursor 02596f73c23c4b05acfa0a51212c90e1
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-IWZLPncKUtsCKiJwRHsVV2:Data.Aeson 0482e5c3d1fd2c40596720d9051f3add
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-IWZLPncKUtsCKiJwRHsVV2:Data.Aeson.TH e7b6717245456405132fbb8906a8a19f
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-IWZLPncKUtsCKiJwRHsVV2:Data.Aeson.Types.FromJSON c00d3a36c181ea4bcbc78272c3df88dc
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-IWZLPncKUtsCKiJwRHsVV2:Data.Aeson.Types.ToJSON b4107f2b392a945d45e13dd87ef1f999
import  -/  base-4.9.0.0:Control.Concurrent c3bd1c151fa27857a3c9d1db4bfc9ff7
import  -/  base-4.9.0.0:Control.Monad b6b2f076948b5e8acd6d95beb4d22bfc
import  -/  base-4.9.0.0:Control.Monad.IO.Class 6093ce5ace985d5ea81901bb51e28805
import  -/  base-4.9.0.0:Data.Either 4cef602ce360a0155ac0dd580a5b4863
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.Functor 67cebb006c069ea73adcd2d468cdb0dc
import  -/  base-4.9.0.0:Data.List d711f98b49ef5d33e5b3d404631ed073
import  -/  base-4.9.0.0:Data.Maybe 086a84053ef7f7810663b5f03b7ec3f7
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.Conc.Sync a1292c872414656fef080815d5d8e73c
import  -/  base-4.9.0.0:GHC.Generics cdf72cc575895201800451f77c6e6810
import  -/  base-4.9.0.0:GHC.List 47d436dfb7454bb1883fb4d943e3f389
import  -/  base-4.9.0.0:GHC.Num f0aed3315b3ed1b330b71fc4148a5581
import  -/  base-4.9.0.0:GHC.Show 0b5845243cb2ec62b57dd6963d276ec6
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  base-4.9.0.0:System.IO c1068c4f4231e3198e330f99a58145b0
import  -/  bson-0.3.2.3@bson-0.3.2.3-EE4NjCypFvQ16toPJxQaT3:Data.Bson 9dcb4fcd7c61220f1f6ae15ef9a1c054
import  -/  bson-generic-0.0.8@bson-generic-0.0.8-HCUlC9mFzScEiZ90dYsZ4F:Data.Bson.Generic 4ab95dcee9ff70a284f7b097542ed4a3
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Char8 a2511fea6a7f1128ae0cdf2a249a3588
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 59ba4f128d7d19046010538c416f3875
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d6db6ac95571c976686f97c64548b060
import  -/  directory-1.2.6.2@directory-1.2.6.2:System.Directory 6ab32ada667d61db0e6e44603c58043c
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub 17debb1427f3e69d8bcd080cccf518ae
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Auth 468cdfcfc6fd758a22c9b139fab6a853
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data d194d53e37c4ecc16d3fbb995e6b77bd
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Definitions ed8fcf50cc57ba0c0443299a163fe3ce
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Name b13da9dd3eb269a819e95f685caa1002
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.Repos 126bc2958ca465b6ca752e6ea1e8b917
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Data.URL 890361568371d394c181cc1e0ee6c609
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Endpoints.Repos f02aa842636c327cd308ac392a02a71f
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Endpoints.Users c56b9dd4729d1a871545078f8dd0d422
import  -/  github-0.15.0@github-0.15.0-5NmHJJJjiHK3Xno1Auc5DS:GitHub.Internal.Prelude 99678ef942738b1e06b92b3ead375a36
import  -/  http-client-0.4.31.2@http-client-0.4.31.2-6gyf7twhhmv8yfbRVNkl4Z:Network.HTTP.Client 7efdeaf13b646bc90b9c711f77bcc9f3
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB 1e4125e4412f09f4fc240a6f540ad3a8
import  -/  mongoDB-2.1.1.1@mongoDB-2.1.1.1-8pQlEjBJ8J0LRyS8YhkcGi:Database.MongoDB.Query b4ba7e1d7397a420856343870367af87
import  -/  random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe:System.Random 8483439f8ec14d68196250b2c4a4fa4e
import  -/  resourcet-1.1.8.1@resourcet-1.1.8.1-1XWaZ7RmVde330DM5PRI3Z:Control.Monad.Trans.Resource 43ad99d9dc3f44283ad3f4dab0f4ed29
import  -/  servant-0.9.1.1@servant-0.9.1.1-BMzPHFjspLnD38uAz6wSUb:Servant.API 58034960611853d9b300556fe318efde
import  -/  servant-0.9.1.1@servant-0.9.1.1-BMzPHFjspLnD38uAz6wSUb:Servant.API.Alternative 0c34682dd52d819d832ebaecb39da1f4
import  -/  servant-client-0.9.1.1@servant-client-0.9.1.1-53t7WdoYt3I67frsrNV7TX:Servant.Client dedc155ae7f7e2f1d081ccb343eee630
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-DE2J1HrS99GJcT3WTSVjFf:Servant 78e5ee4b643e12eca1b4e69e5e633fbc
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-DE2J1HrS99GJcT3WTSVjFf:Servant.Server f57b01a490d7726a49b940eb9ca6286f
import  -/  servant-server-0.9.1.1@servant-server-0.9.1.1-DE2J1HrS99GJcT3WTSVjFf:Servant.Server.Internal 3d9690609d8ba0035abe00add59da12a
import  -/  split-0.2.3.1@split-0.2.3.1-IJKK4pOCYGKud0jZImZke:Data.List.Split 46e8ab9554123893f27696c65d88e63d
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM 674516fe7a455ad46572e426b17538fa
import  -/  stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Concurrent.STM.TVar 57d4fe632b1543f5043339f6d61cfab7
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text 8dbacab9fc008bc20f8ced1c7c1f4b82
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Internal 80110b2fecada91347ca30963f299ad2
import  -/  text-1.2.2.1@text-1.2.2.1-5QpmrLQApEZ4Ly9nMHWY0s:Data.Text.Show 42ce7a01f7291031a7f48c4ecfab5e43
import  -/  time-1.6.0.1@time-1.6.0.1:Data.Time.Clock 23d666c4496b6f7bf555419424731ccb
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Except 7818a7c6346c90815c8b961a98146fb3
import  -/  wai-3.2.1.1@wai-3.2.1.1-GVNFJ2NUhhADT18B8nh1gg:Network.Wai 6802161fda2a254e932e92defc21d045
import  -/  wai-logger-2.3.0@wai-logger-2.3.0-B1TSfcg2MSABqaGF5fd5IG:Network.Wai.Logger 56469c170e7597786e90d99c58cc10cd
import  -/  warp-3.2.11@warp-3.2.11-3f0GdBy4N7PBe7H9xN4yrg:Network.Wai.Handler.Warp f948cbb820285834bfca6dd50d8dff9a
import  -/  warp-3.2.11@warp-3.2.11-3f0GdBy4N7PBe7H9xN4yrg:Network.Wai.Handler.Warp.Run ba42fc9e658f134f16724de028f00dcb
58f184683337a19d4e67d90c09d2cda5
  $fEqCrawl :: GHC.Classes.Eq Crawler.Crawl
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Crawl Crawler.$fEqCrawl_$c== Crawler.$fEqCrawl_$c/= -}
58f184683337a19d4e67d90c09d2cda5
  $fEqCrawl_$c/= :: Crawler.Crawl -> Crawler.Crawl -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Crawler.Crawl) (w1 :: Crawler.Crawl) ->
                 case w of ww { Crawler.Crawl ww1 ww2 ->
                 case w1 of ww3 { Crawler.Crawl ww4 ww5 ->
                 Crawler.$w$c/= ww1 ww2 ww4 ww5 } }) -}
58f184683337a19d4e67d90c09d2cda5
  $fEqCrawl_$c== :: Crawler.Crawl -> Crawler.Crawl -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Crawler.Crawl) (w1 :: Crawler.Crawl) ->
                 case w of ww { Crawler.Crawl ww1 ww2 ->
                 case w1 of ww3 { Crawler.Crawl ww4 ww5 ->
                 Crawler.$w$c== ww1 ww2 ww4 ww5 } }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fEqToken :: GHC.Classes.Eq Crawler.Token
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Token Crawler.$fEqToken_$c== Crawler.$fEqToken_$c/= -}
f9a5e05ec141028f3fc91a7fa106892f
  $fEqToken_$c/= :: Crawler.Token -> Crawler.Token -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Crawler.Token) (w1 :: Crawler.Token) ->
                 case w of ww { Crawler.Token ww1 ww2 ->
                 case w1 of ww3 { Crawler.Token ww4 ww5 ->
                 Crawler.$w$c/=1 ww1 ww2 ww4 ww5 } }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fEqToken_$c== :: Crawler.Token -> Crawler.Token -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Crawler.Token) (w1 :: Crawler.Token) ->
                 case w of ww { Crawler.Token ww1 ww2 ->
                 case w1 of ww3 { Crawler.Token ww4 ww5 ->
                 Crawler.$w$c==1 ww1 ww2 ww4 ww5 } }) -}
9b19b611d9094a86a49dabc5da75e873
  $fFromBSONBool :: Data.Bson.Generic.FromBSON GHC.Types.Bool
  DFunId
  {- Arity: 1, Strictness: <L,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Crawler.$fFromBSONBool_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0] <GHC.Types.Bool>_N)) -}
ab7136a72b5ddf07e937418b1b8b0557
  $fFromBSONBool1 ::
    GHC.Types.Int
    -> Data.Bson.Document
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            a1)
  {- Arity: 2, Strictness: <S(S),1*U(1*U)><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1 (w :: GHC.Types.Int) (w1 :: Data.Bson.Document) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Crawler.$w$dGFromBSON @ a1 ww1 w1 }) -}
acc3adc387c2901b3c01513f13e6f819
  $fFromBSONBool2 ::
    GHC.Base.Maybe
      ((GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         a1)
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Base.Just
                   @ ((GHC.Generics.:+:)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        a1)
                   (Crawler.$fFromBSONBool3 @ a1)) -}
6a3e417be2a24f08fa1f63ebb4a391bc
  $fFromBSONBool3 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      a1
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Generics.L1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ a1
                   (GHC.Generics.U1 @ a1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "False" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <a1>_N)) -}
e55b6b1ba799411f0ba3c47c9fd71026
  $fFromBSONBool4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "False"#) -}
509dfc5484278ce539d2feaf1a10d6fd
  $fFromBSONBool5 ::
    GHC.Base.Maybe
      ((GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         a1)
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Base.Just
                   @ ((GHC.Generics.:+:)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        (GHC.Generics.M1
                           GHC.Generics.C
                           ('GHC.Generics.MetaCons
                              "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                           GHC.Generics.U1)
                        a1)
                   (Crawler.$fFromBSONBool6 @ a1)) -}
cac81501747c25dcfe521c35198d17c5
  $fFromBSONBool6 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      a1
  {- HasNoCafRefs,
     Unfolding: (\ @ a1 ->
                 GHC.Generics.R1
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ (GHC.Generics.M1
                        GHC.Generics.C
                        ('GHC.Generics.MetaCons
                           "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        GHC.Generics.U1)
                   @ a1
                   (GHC.Generics.U1 @ a1)
                     `cast`
                   (Sym (GHC.Generics.N:M1[0]
                             <GHC.Generics.C>_P
                             <'GHC.Generics.MetaCons
                                "True" 'GHC.Generics.PrefixI 'GHC.Types.False>_P
                             <GHC.Generics.U1>_R) <a1>_N)) -}
84e2fb3cf035714d3e59eaa49d79938d
  $fFromBSONBool7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "True"#) -}
41718690a3ab4e47bbeec75cfbe66d14
  $fFromBSONBool_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (doc :: Data.Bson.Document) ->
                 case Crawler.$fFromBSONBool1
                        @ GHC.Prim.Any
                        Crawler.$fFromBSONBool_lvl47
                        doc of wild {
                   GHC.Base.Nothing -> GHC.Base.Nothing @ GHC.Types.Bool
                   GHC.Base.Just x
                   -> GHC.Base.Just
                        @ GHC.Types.Bool
                        (GHC.Generics.$fGenericBool_$cto
                           @ GHC.Prim.Any
                           x `cast`
                           (Trans
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.D>_P
                                          <'GHC.Generics.MetaData
                                             "Bool" "GHC.Types" "ghc-prim" 'GHC.Types.False>_P
                                          <GHC.Generics.C1
                                             ('GHC.Generics.MetaCons
                                                "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                             GHC.Generics.U1
                                           GHC.Generics.:+: GHC.Generics.C1
                                                              ('GHC.Generics.MetaCons
                                                                 "True"
                                                                 'GHC.Generics.PrefixI
                                                                 'GHC.Types.False)
                                                              GHC.Generics.U1>_R))
                                (Sub (Sym (GHC.Generics.Rep_Bool[0]))) <GHC.Prim.Any>_N)) }) -}
1fd3cdcc3e78bf350c4adf2bae886838
  $fFromBSONBool_lvl47 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
58f184683337a19d4e67d90c09d2cda5
  $fFromBSONCrawl :: Data.Bson.Generic.FromBSON Crawler.Crawl
  DFunId
  {- Arity: 1, Strictness: <S,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Crawler.$fFromBSONCrawl_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0] <Crawler.Crawl>_N)) -}
ca229ee30afdaeeb706c858b36634c68
  $fFromBSONCrawl1 :: GHC.Generics.SingI ('GHC.Base.Just "cStatus")
  {- Unfolding: InlineRule (0, True, True)
                Crawler.$fFromBSONCrawl2
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "cStatus">_N) -}
1bb34d9995a9660879979e36700341de
  $fFromBSONCrawl2 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "cStatus")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "cStatus")
                   @ "cStatus"
                   @~ <'GHC.Base.Just "cStatus">_N
                   Crawler.$fFromBSONCrawl3
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"cStatus">_N)) -}
06ab9e7e7e7ddd3b548a4062e61b1b77
  $fFromBSONCrawl3 :: GHC.Generics.R:SingSymbols "cStatus"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "cStatus"
                   Crawler.$fFromBSONCrawl4
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"cStatus">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"cStatus">_N))) -}
8721eab83f35d546c10c52377000930f
  $fFromBSONCrawl4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cStatus"#) -}
89742755f199da4bbe3a8c3f18acf256
  $fFromBSONCrawl5 :: GHC.Generics.SingI ('GHC.Base.Just "cName")
  {- Unfolding: InlineRule (0, True, True)
                Crawler.$fFromBSONCrawl6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "cName">_N) -}
300b165ef3b17f44b244ee052a174802
  $fFromBSONCrawl6 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "cName")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "cName")
                   @ "cName"
                   @~ <'GHC.Base.Just "cName">_N
                   Crawler.$fFromBSONCrawl7
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"cName">_N)) -}
580f191a43ce7f5a9648656deeccd57a
  $fFromBSONCrawl7 :: GHC.Generics.R:SingSymbols "cName"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "cName"
                   Crawler.$fFromBSONCrawl8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"cName">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"cName">_N))) -}
b12449d517085723d277c0d369c20d32
  $fFromBSONCrawl8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cName"#) -}
58f184683337a19d4e67d90c09d2cda5
  $fFromBSONCrawl_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe Crawler.Crawl
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (doc :: Data.Bson.Document) ->
                 case Data.Bson.Generic.$w$cgenericFromBSON
                        @ [GHC.Types.Char]
                        @ ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "cName")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                        @ GHC.Generics.R
                        Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                        Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel1
                        @ GHC.Prim.Any
                        doc of wild {
                   GHC.Base.Nothing -> GHC.Base.Nothing @ Crawler.Crawl
                   GHC.Base.Just x
                   -> case Data.Bson.Generic.$w$cgenericFromBSON
                             @ GHC.Types.Bool
                             @ ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "cStatus")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                             @ GHC.Generics.R
                             Data.Bson.$fValBool
                             Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel
                             @ GHC.Prim.Any
                             doc of wild1 {
                        GHC.Base.Nothing -> GHC.Base.Nothing @ Crawler.Crawl
                        GHC.Base.Just x1
                        -> GHC.Base.Just
                             @ Crawler.Crawl
                             (Crawler.Crawl
                                x `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "cName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                x1
                                  `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "cStatus")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Bool>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <GHC.Types.Bool>_R
                                          <GHC.Prim.Any>_P))) } }) -}
cc80feb0eccbb82644183678a23a3915
  $fFromBSONCrawl_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "cStatus")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "cStatus")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "cStatus")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONCrawl1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "cStatus")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONCrawl1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "cStatus")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONCrawl1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
4cd2f1ee6f4cd86c74557a4fae72e968
  $fFromBSONCrawl_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "cName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "cName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "cName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONCrawl5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "cName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONCrawl5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "cName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONCrawl5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
10a0d4d3b50f00faf8b3d66fbf38035a
  $fFromBSONCrawl_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "cStatus")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "cStatus")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Crawler.$fFromBSONCrawl4) -}
eeae6b584e7451a29c6e187ea9f0d0e3
  $fFromBSONCrawl_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "cName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "cName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Crawler.$fFromBSONCrawl8) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fFromBSONToken :: Data.Bson.Generic.FromBSON Crawler.Token
  DFunId
  {- Arity: 1, Strictness: <S,U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Crawler.$fFromBSONToken_$cfromBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:FromBSON[0] <Crawler.Token>_N)) -}
c595928ec4b0f26f36d23ab5fce41646
  $fFromBSONToken1 :: GHC.Generics.SingI ('GHC.Base.Just "tValue")
  {- Unfolding: InlineRule (0, True, True)
                Crawler.$fFromBSONToken2
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "tValue">_N) -}
f320f259882646c257af6662ac47efee
  $fFromBSONToken2 ::
    GHC.Generics.R:SingMaybeb
      GHC.Types.Symbol ('GHC.Base.Just "tValue")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "tValue")
                   @ "tValue"
                   @~ <'GHC.Base.Just "tValue">_N
                   Crawler.$fFromBSONToken3
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"tValue">_N)) -}
b1dc8d6e1bfb985699af5cd915e2526e
  $fFromBSONToken3 :: GHC.Generics.R:SingSymbols "tValue"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "tValue"
                   Crawler.$fFromBSONToken4
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"tValue">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"tValue">_N))) -}
0c52d7976cae60facfc514b5bd92d3ca
  $fFromBSONToken4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tValue"#) -}
23acf4af76979c5b31ca34245be5d4c6
  $fFromBSONToken5 :: GHC.Generics.SingI ('GHC.Base.Just "tName")
  {- Unfolding: InlineRule (0, True, True)
                Crawler.$fFromBSONToken6
                  `cast`
                (Trans
                     (Sym (GHC.Generics.D:R:SingMaybeb0[0] <GHC.Types.Symbol>_N))
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Base.Maybe
                                                       GHC.Types.Symbol>_N) <'GHC.Base.Just
                                                                               "tName">_N) -}
44a4fe2dc153c7ce3291175337124d64
  $fFromBSONToken6 ::
    GHC.Generics.R:SingMaybeb GHC.Types.Symbol ('GHC.Base.Just "tName")
  {- Unfolding: (GHC.Generics.SJust
                   @ GHC.Types.Symbol
                   @ ('GHC.Base.Just "tName")
                   @ "tName"
                   @~ <'GHC.Base.Just "tName">_N
                   Crawler.$fFromBSONToken7
                     `cast`
                   (Sym (GHC.Generics.D:R:SingSymbols0[0]) <"tName">_N)) -}
dbbb3f1e05a14a04d98aef05ebf3876a
  $fFromBSONToken7 :: GHC.Generics.R:SingSymbols "tName"
  {- Strictness: m,
     Unfolding: (GHC.Generics.SSym
                   @ "tName"
                   Crawler.$fFromBSONToken8
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SSymbol[0] <"tName">_P))
                        (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"tName">_N))) -}
075e7d8ad693f1e414c0efc4c9d7c58e
  $fFromBSONToken8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tName"#) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fFromBSONToken_$cfromBSON ::
    Data.Bson.Document -> GHC.Base.Maybe Crawler.Token
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (doc :: Data.Bson.Document) ->
                 case Data.Bson.Generic.$w$cgenericFromBSON
                        @ [GHC.Types.Char]
                        @ ('GHC.Generics.MetaSel
                             ('GHC.Base.Just "tName")
                             'GHC.Generics.NoSourceUnpackedness
                             'GHC.Generics.NoSourceStrictness
                             'GHC.Generics.DecidedLazy)
                        @ GHC.Generics.R
                        Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                        Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel1
                        @ GHC.Prim.Any
                        doc of wild {
                   GHC.Base.Nothing -> GHC.Base.Nothing @ Crawler.Token
                   GHC.Base.Just x
                   -> case Data.Bson.Generic.$w$cgenericFromBSON
                             @ [GHC.Types.Char]
                             @ ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tValue")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                             @ GHC.Generics.R
                             Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                             Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel
                             @ GHC.Prim.Any
                             doc of wild1 {
                        GHC.Base.Nothing -> GHC.Base.Nothing @ Crawler.Token
                        GHC.Base.Just x1
                        -> GHC.Base.Just
                             @ Crawler.Token
                             (Crawler.Token
                                x `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "tName")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                                x1
                                  `cast`
                                (Trans
                                     (GHC.Generics.N:M1[0]
                                          <GHC.Generics.S>_P
                                          <'GHC.Generics.MetaSel
                                             ('GHC.Base.Just "tValue")
                                             'GHC.Generics.NoSourceUnpackedness
                                             'GHC.Generics.NoSourceStrictness
                                             'GHC.Generics.DecidedLazy>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                     (GHC.Generics.N:K1[0]
                                          <GHC.Generics.R>_P
                                          <GHC.Base.String>_R
                                          <GHC.Prim.Any>_P))) } }) -}
43b7e8d47ce4c76bbf77bfc2cddac20a
  $fFromBSONToken_$s$fSelectorMetaMetaSel ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "tValue")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "tValue")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel_$cselName
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "tValue")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONToken1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "tValue")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONToken1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "tValue")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONToken1
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
15a6a4fa888e0256d60cd3e43ed3a240
  $fFromBSONToken_$s$fSelectorMetaMetaSel1 ::
    GHC.Generics.Selector
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "tName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaSel
                       ('GHC.Base.Just "tName")
                       'GHC.Generics.NoSourceUnpackedness
                       'GHC.Generics.NoSourceStrictness
                       'GHC.Generics.DecidedLazy)
                  Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel_$cselName1
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceUnpackedness
                     @ ('GHC.Base.Just "tName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONToken5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselSourceStrictness
                     @ ('GHC.Base.Just "tName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONToken5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N))
                  (GHC.Generics.$fSelectorMetaMetaSel_$cselDecidedStrictness
                     @ ('GHC.Base.Just "tName")
                     @ 'GHC.Generics.NoSourceUnpackedness
                     @ 'GHC.Generics.NoSourceStrictness
                     @ 'GHC.Generics.DecidedLazy
                     Crawler.$fFromBSONToken5
                     GHC.Generics.$WSNoSourceUnpackedness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceUnpackedness>_N <'GHC.Generics.NoSourceUnpackedness>_N)
                     GHC.Generics.$WSNoSourceStrictness
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.SourceStrictness>_N <'GHC.Generics.NoSourceStrictness>_N)
                     GHC.Generics.$WSDecidedLazy
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.DecidedStrictness>_N <'GHC.Generics.DecidedLazy>_N)) -}
1b83022690cf48ce4252a93bf5b2565d
  $fFromBSONToken_$s$fSelectorMetaMetaSel_$cselName ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "tValue")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Crawler.$fFromBSONToken4) -}
a7bb810c801e3ce78946190549c30582
  $fFromBSONToken_$s$fSelectorMetaMetaSel_$cselName1 ::
    forall k (t :: GHC.Generics.Meta
                   -> (GHC.Types.* -> GHC.Types.*) -> k -> *) (f :: GHC.Types.*
                                                                    -> GHC.Types.*) (a :: k).
    t ('GHC.Generics.MetaSel
         ('GHC.Base.Just "tName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy) f a
    -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ k
                   @ (t :: GHC.Generics.Meta
                           -> (GHC.Types.* -> GHC.Types.*) -> k -> *)
                   @ (f :: GHC.Types.* -> GHC.Types.*)
                   @ (a :: k)
                   (ds1 :: t ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy) f a) ->
                 Crawler.$fFromBSONToken8) -}
58f184683337a19d4e67d90c09d2cda5
  $fFromJSONCrawl :: Data.Aeson.Types.FromJSON.FromJSON Crawler.Crawl
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Crawl
                  Crawler.$fFromJSONCrawl_$cparseJSON
                  Crawler.$fFromJSONCrawl_$cparseJSONList -}
58f184683337a19d4e67d90c09d2cda5
  $fFromJSONCrawl1 ::
    [Data.Aeson.Types.Internal.Parser Crawler.Crawl]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Crawler.Crawl] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
7fd123aad040275a2d0dd9acd1242a68
  $fFromJSONCrawl2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
5a3f48582870431e0f51347f6945c662
  $fFromJSONCrawl3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "cName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "cStatus")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Bool))
               a))
  {- Arity: 4, Strictness: <L,U(U,U,U,U,U,U)><L,U><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Crawler.$w$dConsFromJSON' @ a w w1 w3) -}
d954b8a2c0935b738f19ebf5fea4f4ed
  $fFromJSONCrawl4 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 Crawler.$w$dGFromJSON @ a1 w2) -}
f94667559361bbe4a61dffd03dbf8629
  $fFromJSONCrawl5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "String"#) -}
21a5059bbff258e15693f1a86ec36210
  $fFromJSONCrawl6 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 Crawler.$w$dGFromJSON1 @ a1 w2) -}
7c465cb58505bd1546b8b269326617e9
  $fFromJSONCrawl7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Bool"#) -}
cb662882274495965078e25af38c1486
  $fFromJSONCrawl8 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "cName")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "cStatus")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Types.Bool))
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: (GHC.Generics.:*:)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "cName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "cStatus")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Bool))
                             a) ->
                 GHC.Types.False) -}
58f184683337a19d4e67d90c09d2cda5
  $fFromJSONCrawl_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Crawler.Crawl
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "cName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "cStatus")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Types.Bool))
                             GHC.Prim.Any)
                   = Data.Aeson.Types.FromJSON.$fConsFromJSONarityf_$cconsParseJSON
                       @ (GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "cName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Base.String)
                          GHC.Generics.:*: GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "cStatus")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Types.Bool))
                       @ Data.Aeson.Types.Generic.True
                       @ Data.Aeson.Types.Generic.Zero
                       Crawler.$fFromJSONCrawl8
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "cName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "cStatus")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Bool)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       Crawler.$fFromJSONCrawl3
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON'[0]
                                 <*>_N
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "cName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "cStatus")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Types.Bool)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success Crawler.Crawl f4 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "cName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "cStatus")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Bool))
                          GHC.Prim.Any>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "cName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "cStatus")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Bool))
                                GHC.Prim.Any) ->
                     ks
                       (case a2 of wild { GHC.Generics.:*: ds ds1 ->
                        Crawler.Crawl
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "cName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "cStatus")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Types.Bool>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Types.Bool>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Crawler.Crawl>_R))) -}
58f184683337a19d4e67d90c09d2cda5
  $fFromJSONCrawl_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Crawler.Crawl]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Crawler.Crawl]
                        Crawler.$fFromJSONCrawl2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Crawler.$fFromJSONCrawl1
                         (letrec {
                            $wgo1 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo1 (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Crawler.$fFromJSONCrawl_go 0# ($wgo1 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Crawler.Crawl]>_R)) } }) -}
58f184683337a19d4e67d90c09d2cda5
  $fFromJSONCrawl_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Crawler.Crawl]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
f9a5e05ec141028f3fc91a7fa106892f
  $fFromJSONToken :: Data.Aeson.Types.FromJSON.FromJSON Crawler.Token
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Token
                  Crawler.$fFromJSONToken_$cparseJSON
                  Crawler.$fFromJSONToken_$cparseJSONList -}
f9a5e05ec141028f3fc91a7fa106892f
  $fFromJSONToken1 ::
    [Data.Aeson.Types.Internal.Parser Crawler.Token]
    -> forall (f :: * -> *) r.
       Data.Aeson.Types.Internal.JSONPath
       -> Data.Aeson.Types.Internal.Failure f r
       -> Data.Aeson.Types.Internal.Success [Crawler.Token] f r
       -> f r
  {- Arity: 4, HasNoCafRefs, Strictness: <S,1*U><L,U><L,U><L,C(U)> -}
b0034afca6149ffe5aadd4ffcbce1c74
  $fFromJSONToken2 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> GHC.Base.Maybe Data.Text.Internal.Text
    -> Data.Aeson.Types.Internal.Value
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "tName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "tValue")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 4, Strictness: <L,U(U,U,U,U,U,U)><L,U><L,A><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: GHC.Base.Maybe Data.Text.Internal.Text)
                   (w3 :: Data.Aeson.Types.Internal.Value) ->
                 Crawler.$w$dConsFromJSON'1 @ a w w1 w3) -}
8643519f15f670825a0b8f9b1e93ddcc
  $fFromJSONToken3 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a1
    -> Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 3, Strictness: <L,A><L,A><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ a1
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a1)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 Crawler.$w$dGFromJSON2 @ a1 w2) -}
654e583c37dac660b2976e7aba558d9c
  $fFromJSONToken4 ::
    (GHC.Generics.:*:)
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "tName")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      (GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "tValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String))
      a
    -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta :: (GHC.Generics.:*:)
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tValue")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             a) ->
                 GHC.Types.False) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fFromJSONToken_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Crawler.Token
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser
                          ((GHC.Generics.:*:)
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             (GHC.Generics.S1
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tValue")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String))
                             GHC.Prim.Any)
                   = Data.Aeson.Types.FromJSON.$fConsFromJSONarityf_$cconsParseJSON
                       @ (GHC.Generics.S1
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "tName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Base.String)
                          GHC.Generics.:*: GHC.Generics.S1
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tValue")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String))
                       @ Data.Aeson.Types.Generic.True
                       @ Data.Aeson.Types.Generic.Zero
                       Crawler.$fFromJSONToken4
                         `cast`
                       (Sym (Data.Aeson.Types.Generic.N:IsRecord[0]
                                 <GHC.Generics.M1
                                    GHC.Generics.S
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "tName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.M1
                                                     GHC.Generics.S
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "tValue")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       Crawler.$fFromJSONToken2
                         `cast`
                       (Sym (Data.Aeson.Types.FromJSON.N:ConsFromJSON'[0]
                                 <*>_N
                                 <Data.Aeson.Types.Generic.Zero>_N
                                 <GHC.Generics.S1
                                    ('GHC.Generics.MetaSel
                                       ('GHC.Base.Just "tName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy)
                                    (GHC.Generics.Rec0 GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     ('GHC.Generics.MetaSel
                                                        ('GHC.Base.Just "tValue")
                                                        'GHC.Generics.NoSourceUnpackedness
                                                        'GHC.Generics.NoSourceStrictness
                                                        'GHC.Generics.DecidedLazy)
                                                     (GHC.Generics.Rec0 GHC.Base.String)>_N
                                 <Data.Aeson.Types.Generic.True>_N))
                       @ GHC.Prim.Any
                       Data.Aeson.Types.Internal.defaultOptions
                       (Data.Aeson.Types.FromJSON.$WNoFromArgs @ GHC.Prim.Any)
                       x
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success Crawler.Token f4 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0]
                       <(GHC.Generics.:*:)
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          (GHC.Generics.S1
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String))
                          GHC.Prim.Any>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: (GHC.Generics.:*:)
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                (GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tValue")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String))
                                GHC.Prim.Any) ->
                     ks
                       (case a2 of wild { GHC.Generics.:*: ds ds1 ->
                        Crawler.Token
                          ds
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "tName")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                          ds1
                            `cast`
                          (Trans
                               (GHC.Generics.N:M1[0]
                                    <GHC.Generics.S>_P
                                    <'GHC.Generics.MetaSel
                                       ('GHC.Base.Just "tValue")
                                       'GHC.Generics.NoSourceUnpackedness
                                       'GHC.Generics.NoSourceStrictness
                                       'GHC.Generics.DecidedLazy>_P
                                    <GHC.Generics.K1
                                       GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                               (GHC.Generics.N:K1[0]
                                    <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P)) })))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0] <Crawler.Token>_R))) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fFromJSONToken_$cparseJSONList ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Crawler.Token]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Data.Aeson.Types.Internal.Value) ->
                 case ds of wild {
                   DEFAULT
                   -> Data.Aeson.Types.FromJSON.typeMismatch
                        @ [Crawler.Token]
                        Crawler.$fFromJSONCrawl2
                        wild
                   Data.Aeson.Types.Internal.Array a1
                   -> case a1 of wild1 { Data.Vector.Vector dt dt1 dt2 ->
                      (Crawler.$fFromJSONToken1
                         (letrec {
                            $wgo1 :: GHC.Prim.Int# -> [Data.Aeson.Types.Internal.Value]
                              {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                            = \ (ww :: GHC.Prim.Int#) ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww dt1) of wild2 {
                                GHC.Types.False
                                -> case GHC.Prim.indexArray#
                                          @ Data.Aeson.Types.Internal.Value
                                          dt2
                                          (GHC.Prim.+# dt ww) of ds2 { Unit# ipv ->
                                   GHC.Types.:
                                     @ Data.Aeson.Types.Internal.Value
                                     ipv
                                     ($wgo1 (GHC.Prim.+# ww 1#)) }
                                GHC.Types.True -> GHC.Types.[] @ Data.Aeson.Types.Internal.Value }
                          } in
                          Crawler.$fFromJSONToken_go 0# ($wgo1 0#)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                <[Crawler.Token]>_R)) } }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fFromJSONToken_go ::
    GHC.Prim.Int#
    -> [Data.Aeson.Types.Internal.Value]
    -> [Data.Aeson.Types.Internal.Parser Crawler.Token]
  {- Arity: 2, Strictness: <L,U><S,1*U> -}
58f184683337a19d4e67d90c09d2cda5
  $fGenericCrawl :: GHC.Generics.Generic Crawler.Crawl
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Crawl
                  Crawler.$fGenericCrawl_$cfrom
                  Crawler.$fGenericCrawl_$cto -}
58f184683337a19d4e67d90c09d2cda5
  $fGenericCrawl_$cfrom ::
    Crawler.Crawl -> GHC.Generics.Rep Crawler.Crawl x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: Crawler.Crawl) ->
                 case ds of wild { Crawler.Crawl g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "cName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "cStatus")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "cName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "cStatus")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R) <x>_N)))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:M1[0]
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "cName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "cStatus")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Types.Bool)>_R))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Crawl"
                                        "Crawler"
                                        "Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "cName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "cStatus")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Bool))>_R))
                           (Sub (Sym (Crawler.Rep_Crawl[0])))) <x>_N) }) -}
58f184683337a19d4e67d90c09d2cda5
  $fGenericCrawl_$cto ::
    GHC.Generics.Rep Crawler.Crawl x -> Crawler.Crawl
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Crawler.Crawl x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Crawler.Rep_Crawl[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Crawl"
                                        "Crawler"
                                        "Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "cName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "cStatus")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Types.Bool))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "cName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "cStatus")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Types.Bool)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Crawler.Crawl
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "cStatus")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Bool>_R <x>_P)) }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fGenericToken :: GHC.Generics.Generic Crawler.Token
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Token
                  Crawler.$fGenericToken_$cfrom
                  Crawler.$fGenericToken_$cto -}
f9a5e05ec141028f3fc91a7fa106892f
  $fGenericToken_$cfrom ::
    Crawler.Token -> GHC.Generics.Rep Crawler.Token x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: Crawler.Token) ->
                 case ds of wild { Crawler.Token g1 g2 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "tName")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         ('GHC.Generics.MetaSel
                            ('GHC.Base.Just "tValue")
                            'GHC.Generics.NoSourceUnpackedness
                            'GHC.Generics.NoSourceStrictness
                            'GHC.Generics.DecidedLazy)
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                    g2
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.N:K1[0]
                                   <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                         (Sym (GHC.Generics.N:M1[0]
                                   <GHC.Generics.S>_P
                                   <'GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tValue")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.N:M1[0]
                                <GHC.Generics.C>_P
                                <'GHC.Generics.MetaCons
                                   "Token" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tName")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                 GHC.Generics.:*: GHC.Generics.M1
                                                    GHC.Generics.S
                                                    ('GHC.Generics.MetaSel
                                                       ('GHC.Base.Just "tValue")
                                                       'GHC.Generics.NoSourceUnpackedness
                                                       'GHC.Generics.NoSourceStrictness
                                                       'GHC.Generics.DecidedLazy)
                                                    (GHC.Generics.K1
                                                       GHC.Generics.R GHC.Base.String)>_R))
                      (Trans
                           (Sym (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Token"
                                        "Crawler"
                                        "Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Token" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "tName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "tValue")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R))
                           (Sub (Sym (Crawler.Rep_Token[0])))) <x>_N) }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fGenericToken_$cto ::
    GHC.Generics.Rep Crawler.Token x -> Crawler.Token
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x (ds :: GHC.Generics.Rep Crawler.Token x) ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Crawler.Rep_Token[0]))
                           (Trans
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.D>_P
                                     <'GHC.Generics.MetaData
                                        "Token"
                                        "Crawler"
                                        "Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A"
                                        'GHC.Types.False>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        ('GHC.Generics.MetaCons
                                           "Token" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "tName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                         GHC.Generics.:*: GHC.Generics.M1
                                                            GHC.Generics.S
                                                            ('GHC.Generics.MetaSel
                                                               ('GHC.Base.Just "tValue")
                                                               'GHC.Generics.NoSourceUnpackedness
                                                               'GHC.Generics.NoSourceStrictness
                                                               'GHC.Generics.DecidedLazy)
                                                            (GHC.Generics.K1
                                                               GHC.Generics.R GHC.Base.String))>_R)
                                (GHC.Generics.N:M1[0]
                                     <GHC.Generics.C>_P
                                     <'GHC.Generics.MetaCons
                                        "Token" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "tName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                      GHC.Generics.:*: GHC.Generics.M1
                                                         GHC.Generics.S
                                                         ('GHC.Generics.MetaSel
                                                            ('GHC.Base.Just "tValue")
                                                            'GHC.Generics.NoSourceUnpackedness
                                                            'GHC.Generics.NoSourceStrictness
                                                            'GHC.Generics.DecidedLazy)
                                                         (GHC.Generics.K1
                                                            GHC.Generics.R
                                                            GHC.Base.String)>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 Crawler.Token
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tName")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds2
                     `cast`
                   (Trans
                        (GHC.Generics.N:M1[0]
                             <GHC.Generics.S>_P
                             <'GHC.Generics.MetaSel
                                ('GHC.Base.Just "tValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.N:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P)) }) -}
58f184683337a19d4e67d90c09d2cda5
  $fShowCrawl :: GHC.Show.Show Crawler.Crawl
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Crawl
                  Crawler.$fShowCrawl_$cshowsPrec
                  Crawler.$fShowCrawl_$cshow
                  Crawler.$fShowCrawl_$cshowList -}
58f184683337a19d4e67d90c09d2cda5
  $fShowCrawl1 :: Crawler.Crawl -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Crawler.Crawl) (w1 :: GHC.Base.String) ->
                 case w of ww { Crawler.Crawl ww1 ww2 ->
                 Crawler.$w$cshowsPrec 0# ww1 ww2 w1 }) -}
4aebe689fdf6d981aaabe236f719aa27
  $fShowCrawl2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
66b91e37ca1364f1cd4e74b1554b22ef
  $fShowCrawl3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cStatus = "#) -}
f1e528674f2d2f8490ac3acb014de92d
  $fShowCrawl4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
4185f6f2de602b4c0656e370eefee4e6
  $fShowCrawl5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cName = "#) -}
478d617b5393df73ef1cef4094090e49
  $fShowCrawl6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Crawl {"#) -}
58f184683337a19d4e67d90c09d2cda5
  $fShowCrawl_$cshow :: Crawler.Crawl -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Crawler.Crawl) ->
                 Crawler.$fShowCrawl_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
58f184683337a19d4e67d90c09d2cda5
  $fShowCrawl_$cshowList :: [Crawler.Crawl] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Crawler.Crawl
                   Crawler.$fShowCrawl1) -}
58f184683337a19d4e67d90c09d2cda5
  $fShowCrawl_$cshowsPrec ::
    GHC.Types.Int -> Crawler.Crawl -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Crawler.Crawl)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Crawler.Crawl ww3 ww4 ->
                 Crawler.$w$cshowsPrec ww1 ww3 ww4 w2 } }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fShowToken :: GHC.Show.Show Crawler.Token
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Token
                  Crawler.$fShowToken_$cshowsPrec
                  Crawler.$fShowToken_$cshow
                  Crawler.$fShowToken_$cshowList -}
f9a5e05ec141028f3fc91a7fa106892f
  $fShowToken1 :: Crawler.Token -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: Crawler.Token) (w1 :: GHC.Base.String) ->
                 case w of ww { Crawler.Token ww1 ww2 ->
                 Crawler.$w$cshowsPrec1 0# ww1 ww2 w1 }) -}
6c9a617678b22ef6b3d0ba5a2a84b735
  $fShowToken2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tValue = "#) -}
24e2e35cee0073c4a4a581643ab771f1
  $fShowToken3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tName = "#) -}
42089a0d19f782c8305d71305c956c81
  $fShowToken4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Token {"#) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fShowToken_$cshow :: Crawler.Token -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Crawler.Token) ->
                 Crawler.$fShowToken_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fShowToken_$cshowList :: [Crawler.Token] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Crawler.Token
                   Crawler.$fShowToken1) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fShowToken_$cshowsPrec ::
    GHC.Types.Int -> Crawler.Token -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Crawler.Token)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Crawler.Token ww3 ww4 ->
                 Crawler.$w$cshowsPrec1 ww1 ww3 ww4 w2 } }) -}
2f8f4701ed6418f232f1e03576d4aba8
  $fToBSONBool :: Data.Bson.Generic.ToBSON GHC.Types.Bool
  DFunId
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Crawler.$fToBSONBool_$s$dmtoBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:ToBSON[0] <GHC.Types.Bool>_N)) -}
9a2e75161cd71a08a444e32b199d925b
  $fToBSONBool1 ::
    Data.Bson.Generic.GConstructorCount
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "Bool" "GHC.Types" "ghc-prim" 'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1))
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (0, True, True)
                Crawler.$fToBSONBool2
                  `cast`
                (Trans
                     (forall (a1 :: <*>_N).
                      Sym (GHC.Generics.N:M1[0]
                               <GHC.Generics.D>_P
                               <'GHC.Generics.MetaData
                                  "Bool" "GHC.Types" "ghc-prim" 'GHC.Types.False>_P
                               <GHC.Generics.C1
                                  ('GHC.Generics.MetaCons
                                     "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                  GHC.Generics.U1
                                GHC.Generics.:+: GHC.Generics.C1
                                                   ('GHC.Generics.MetaCons
                                                      "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1>_R) <a1>_N
                      ->_R <GHC.Types.Int>_R)
                     (Sym (Data.Bson.Generic.N:GConstructorCount[0]
                               <GHC.Generics.D1
                                  ('GHC.Generics.MetaData
                                     "Bool" "GHC.Types" "ghc-prim" 'GHC.Types.False)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "True"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)>_N))) -}
b260a6da799451e0203c2149af3a3e28
  $fToBSONBool2 ::
    (GHC.Generics.:+:)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      (GHC.Generics.M1
         GHC.Generics.C
         ('GHC.Generics.MetaCons
            "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
         GHC.Generics.U1)
      a1
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ @ a1
                   (ds :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            a1) ->
                 Crawler.$fFromBSONBool_lvl47) -}
de451a04ba2d9cc1ca7d6f6fc976d8a6
  $fToBSONBool3 ::
    Data.Bson.Generic.GToBSON
      (GHC.Generics.D1
         ('GHC.Generics.MetaData
            "Bool" "GHC.Types" "ghc-prim" 'GHC.Types.False)
         (GHC.Generics.C1
            ('GHC.Generics.MetaCons
               "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             ('GHC.Generics.MetaCons
                                "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                             GHC.Generics.U1))
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.$fToBSONBool4
                  `cast`
                (Trans
                     (forall (a1 :: <*>_N).
                      <GHC.Types.Int>_R
                      ->_R Sym (GHC.Generics.N:M1[0]
                                    <GHC.Generics.D>_P
                                    <'GHC.Generics.MetaData
                                       "Bool" "GHC.Types" "ghc-prim" 'GHC.Types.False>_P
                                    <GHC.Generics.C1
                                       ('GHC.Generics.MetaCons
                                          "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                       GHC.Generics.U1
                                     GHC.Generics.:+: GHC.Generics.C1
                                                        ('GHC.Generics.MetaCons
                                                           "True"
                                                           'GHC.Generics.PrefixI
                                                           'GHC.Types.False)
                                                        GHC.Generics.U1>_R) <a1>_N
                      ->_R <Data.Bson.Document>_R)
                     (Sym (Data.Bson.Generic.N:GToBSON[0]
                               <GHC.Generics.D1
                                  ('GHC.Generics.MetaData
                                     "Bool" "GHC.Types" "ghc-prim" 'GHC.Types.False)
                                  (GHC.Generics.C1
                                     ('GHC.Generics.MetaCons
                                        "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                     GHC.Generics.U1
                                   GHC.Generics.:+: GHC.Generics.C1
                                                      ('GHC.Generics.MetaCons
                                                         "True"
                                                         'GHC.Generics.PrefixI
                                                         'GHC.Types.False)
                                                      GHC.Generics.U1)>_N))) -}
2a2dec43f7c70f8d3b763aa7e27aa6e0
  $fToBSONBool4 ::
    GHC.Types.Int
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         a1
    -> Data.Bson.Document
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:+:)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            (GHC.Generics.M1
                               GHC.Generics.C
                               ('GHC.Generics.MetaCons
                                  "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                               GHC.Generics.U1)
                            a1) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Crawler.$w$dGToBSON @ a1 ww1 w1 }) -}
a20301a13d5d43e8f70221f3a9ffdc19
  $fToBSONBool_$s$dmtoBSON :: GHC.Types.Bool -> Data.Bson.Document
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (-4, True, False)
                (\ (a1 :: GHC.Types.Bool) ->
                 Crawler.$fToBSONBool3
                   `cast`
                 (Data.Bson.Generic.N:GToBSON[0] (Sym (GHC.Generics.Rep_Bool[0])))
                   @ GHC.Prim.Any
                   (Crawler.$fToBSONBool_$sconstructorCount a1)
                   (GHC.Generics.$fGenericBool_$cfrom @ GHC.Prim.Any a1)) -}
287faf188950098ab69e15370227e22e
  $fToBSONBool_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "True"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Crawler.$fFromBSONBool7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"True">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"True">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "True"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Crawler.$fFromBSONBool7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"True">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"True">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "True"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Crawler.$fFromBSONBool7
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"True">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"True">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
bd58fd8b85fea930260639af584f48cd
  $fToBSONBool_$s$fConstructorMetaMetaCons1 ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "False"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Crawler.$fFromBSONBool4
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"False">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"False">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "False"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Crawler.$fFromBSONBool4
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"False">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"False">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "False"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.False
                     Crawler.$fFromBSONBool4
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"False">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"False">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSFalse
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.False>_N)) -}
f808d23334f0fb88d4e75a0be8895865
  $fToBSONBool_$sconstructorCount :: GHC.Types.Bool -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Types.Bool) ->
                 Crawler.$fToBSONBool1
                   `cast`
                 (Data.Bson.Generic.N:GConstructorCount[0]
                      (Sym (GHC.Generics.Rep_Bool[0])))
                   @ GHC.Prim.Any
                   (GHC.Generics.$fGenericBool_$cfrom @ GHC.Prim.Any x)) -}
58f184683337a19d4e67d90c09d2cda5
  $fToBSONCrawl :: Data.Bson.Generic.ToBSON Crawler.Crawl
  DFunId
  {- Arity: 1, Strictness: <L,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Crawler.$fToBSONCrawl_$ctoBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:ToBSON[0] <Crawler.Crawl>_N)) -}
282d0b71053d6abac532e1673badf028
  $fToBSONCrawl1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Crawl"#) -}
3944c3a3cc93886290a7b517cf60e7ab
  $fToBSONCrawl2 ::
    GHC.Types.Int
    -> (GHC.Generics.:*:)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "cName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "cStatus")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Types.Bool))
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,A><S,1*U(1*U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:*:)
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "cName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String))
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "cStatus")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Types.Bool))
                            a1) ->
                 case w1 of ww { GHC.Generics.:*: ww1 ww2 ->
                 Crawler.$w$dGToBSON1 @ a1 ww1 ww2 }) -}
c239b2e06f3076e3ccf08c54c7d7cc02
  $fToBSONCrawl3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   Crawler.$fFromBSONCrawl4
                   0#
                   ipv }) -}
40106ca0c2a7fe65d7ac8131430ace46
  $fToBSONCrawl4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   Crawler.$fFromBSONCrawl8
                   0#
                   ipv }) -}
58f184683337a19d4e67d90c09d2cda5
  $fToBSONCrawl_$ctoBSON :: Crawler.Crawl -> Data.Bson.Document
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a1 :: Crawler.Crawl) ->
                 Data.Bson.Generic.$w$cgenericToBSON1
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "cName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 GHC.Base.String)
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "cStatus")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Bool))
                   @ ('GHC.Generics.MetaCons
                        "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   Crawler.$fToBSONCrawl2
                     `cast`
                   (Sym (Data.Bson.Generic.N:GToBSON[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "cName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "cStatus")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Types.Bool)>_N))
                   Crawler.$fToBSONCrawl_$s$fConstructorMetaMetaCons
                   @ GHC.Prim.Any
                   1#
                   (case a1 of wild { Crawler.Crawl g1 g2 ->
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "cName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "cStatus")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                       @ GHC.Prim.Any
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "cName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Bool>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "cStatus")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Types.Bool>_R) <GHC.Prim.Any>_N)))
                      `cast`
                    (Sym (GHC.Generics.N:M1[0]
                              <GHC.Generics.C>_P
                              <'GHC.Generics.MetaCons
                                 "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "cName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "cStatus")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.Types.Bool)>_R) <GHC.Prim.Any>_N) })) -}
c039ad1d9a5ee1b7f5f7603cb6472266
  $fToBSONCrawl_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Crawl"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     Crawler.$fToBSONCrawl1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Crawl">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Crawl">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Crawl"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     Crawler.$fToBSONCrawl1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Crawl">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Crawl">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Crawl"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     Crawler.$fToBSONCrawl1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Crawl">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Crawl">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N)) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fToBSONToken :: Data.Bson.Generic.ToBSON Crawler.Token
  DFunId
  {- Arity: 1, Strictness: <L,1*U(U,U)>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Crawler.$fToBSONToken_$ctoBSON
                  `cast`
                (Sym (Data.Bson.Generic.N:ToBSON[0] <Crawler.Token>_N)) -}
e96facd55c1b196641e338dbecc8e178
  $fToBSONToken1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Token"#) -}
56a75c6a86626715f3220a278c77df66
  $fToBSONToken2 ::
    GHC.Types.Int
    -> (GHC.Generics.:*:)
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "tName")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         (GHC.Generics.M1
            GHC.Generics.S
            ('GHC.Generics.MetaSel
               ('GHC.Base.Just "tValue")
               'GHC.Generics.NoSourceUnpackedness
               'GHC.Generics.NoSourceStrictness
               'GHC.Generics.DecidedLazy)
            (GHC.Generics.Rec0 GHC.Base.String))
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,A><S,1*U(1*U,1*U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1
                   (w :: GHC.Types.Int)
                   (w1 :: (GHC.Generics.:*:)
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String))
                            (GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tValue")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String))
                            a1) ->
                 case w1 of ww { GHC.Generics.:*: ww1 ww2 ->
                 Crawler.$w$dGToBSON2 @ a1 ww1 ww2 }) -}
4a11b2b0a82dd410fc2e9a1acdeaeae6
  $fToBSONToken3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   Crawler.$fFromBSONToken4
                   0#
                   ipv }) -}
4712376afea13ffaddbc2c94aaa8d6c0
  $fToBSONToken4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Data.Bson.Generic.$wouter2
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Bson.Generic.$fFromBSONObjectKey5
                   Crawler.$fFromBSONToken8
                   0#
                   ipv }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fToBSONToken_$ctoBSON :: Crawler.Token -> Data.Bson.Document
  {- Arity: 1, Strictness: <L,1*U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (a1 :: Crawler.Token) ->
                 Data.Bson.Generic.$w$cgenericToBSON1
                   @ (GHC.Generics.S1
                        ('GHC.Generics.MetaSel
                           ('GHC.Base.Just "tName")
                           'GHC.Generics.NoSourceUnpackedness
                           'GHC.Generics.NoSourceStrictness
                           'GHC.Generics.DecidedLazy)
                        (GHC.Generics.Rec0 GHC.Base.String)
                      GHC.Generics.:*: GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tValue")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                   @ ('GHC.Generics.MetaCons
                        "Token" 'GHC.Generics.PrefixI 'GHC.Types.True)
                   Crawler.$fToBSONToken2
                     `cast`
                   (Sym (Data.Bson.Generic.N:GToBSON[0]
                             <GHC.Generics.M1
                                GHC.Generics.S
                                ('GHC.Generics.MetaSel
                                   ('GHC.Base.Just "tName")
                                   'GHC.Generics.NoSourceUnpackedness
                                   'GHC.Generics.NoSourceStrictness
                                   'GHC.Generics.DecidedLazy)
                                (GHC.Generics.Rec0 GHC.Base.String)
                              GHC.Generics.:*: GHC.Generics.M1
                                                 GHC.Generics.S
                                                 ('GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tValue")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy)
                                                 (GHC.Generics.Rec0 GHC.Base.String)>_N))
                   Crawler.$fToBSONToken_$s$fConstructorMetaMetaCons
                   @ GHC.Prim.Any
                   1#
                   (case a1 of wild { Crawler.Token g1 g2 ->
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "tName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "tValue")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ GHC.Prim.Any
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tName")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <GHC.Prim.Any>_P))
                            (Sym (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "tValue")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R GHC.Base.String>_R) <GHC.Prim.Any>_N)))
                      `cast`
                    (Sym (GHC.Generics.N:M1[0]
                              <GHC.Generics.C>_P
                              <'GHC.Generics.MetaCons
                                 "Token" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                              <GHC.Generics.M1
                                 GHC.Generics.S
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "tName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                               GHC.Generics.:*: GHC.Generics.M1
                                                  GHC.Generics.S
                                                  ('GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "tValue")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy)
                                                  (GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.Base.String)>_R) <GHC.Prim.Any>_N) })) -}
3dad4413fd2c61d5b506db8cac4c075d
  $fToBSONToken_$s$fConstructorMetaMetaCons ::
    GHC.Generics.Constructor
      ('GHC.Generics.MetaCons
         "Token" 'GHC.Generics.PrefixI 'GHC.Types.True)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Generics.Meta
                  @ ('GHC.Generics.MetaCons
                       "Token" 'GHC.Generics.PrefixI 'GHC.Types.True)
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconName
                     @ "Token"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     Crawler.$fToBSONToken1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Token">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Token">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconFixity
                     @ "Token"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     Crawler.$fToBSONToken1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Token">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Token">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N))
                  (GHC.Generics.$fConstructorMetaMetaCons_$cconIsRecord
                     @ "Token"
                     @ 'GHC.Generics.PrefixI
                     @ 'GHC.Types.True
                     Crawler.$fToBSONToken1
                       `cast`
                     (Trans
                          (Sym (GHC.TypeLits.N:SSymbol[0] <"Token">_P))
                          (Sym (GHC.TypeLits.N:KnownSymbol[0]) <"Token">_N))
                     GHC.Generics.$WSPrefix
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Generics.FixityI>_N <'GHC.Generics.PrefixI>_N)
                     GHC.Generics.$WSTrue
                       `cast`
                     (Sym (GHC.Generics.N:SingI[0]) <GHC.Types.Bool>_N <'GHC.Types.True>_N)) -}
58f184683337a19d4e67d90c09d2cda5
  $fToJSONCrawl :: Data.Aeson.Types.ToJSON.ToJSON Crawler.Crawl
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Crawl
                  Crawler.$fToJSONCrawl_$ctoJSON
                  Crawler.$fToJSONCrawl_$ctoEncoding
                  Crawler.$fToJSONCrawl_$ctoJSONList
                  Crawler.$fToJSONCrawl_$ctoEncodingList -}
58f184683337a19d4e67d90c09d2cda5
  $fToJSONCrawl1 ::
    Crawler.Crawl
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Crawler.Crawl) ->
                 case w of ww { Crawler.Crawl ww1 ww2 ->
                 case Crawler.$w$ctoJSON ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
3f46320d77e1b8f4b4501077221986e8
  $fToJSONCrawl2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Crawler.$fToJSONCrawl3 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
0e003a85c3833683519be3cf9ba1db78
  $fToJSONCrawl3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter4
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.ToJSON.$fObjectWithSingleFieldEncarityM2
                   Crawler.$fFromBSONCrawl4
                   0#
                   ipv }) -}
9c9b68df0469c808b8088f899e1f3f77
  $fToJSONCrawl4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
6d2bff3cd26d4624552c8c70f79ac7b0
  $fToJSONCrawl5 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Crawler.$fToJSONCrawl6 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
efc21a9d9aacdb2b30a3f410c2af95f6
  $fToJSONCrawl6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter4
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.ToJSON.$fObjectWithSingleFieldEncarityM2
                   Crawler.$fFromBSONCrawl8
                   0#
                   ipv }) -}
58f184683337a19d4e67d90c09d2cda5
  $fToJSONCrawl_$ctoEncoding ::
    Crawler.Crawl -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Crawler.Crawl) ->
                 Data.Aeson.Encoding.Internal.value
                   (Crawler.$fToJSONCrawl_$ctoJSON eta)) -}
58f184683337a19d4e67d90c09d2cda5
  $fToJSONCrawl_$ctoEncodingList ::
    [Crawler.Crawl] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Crawler.Crawl]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Crawler.$fToJSONCrawl_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Crawler.Crawl
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Crawler.Crawl)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Crawler.$fToJSONCrawl_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Crawler.Crawl>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
58f184683337a19d4e67d90c09d2cda5
  $fToJSONCrawl_$ctoJSON ::
    Crawler.Crawl -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,U)>m1,
     Unfolding: InlineRule (0, True, True)
                Crawler.$fToJSONCrawl1
                  `cast`
                (<Crawler.Crawl>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
58f184683337a19d4e67d90c09d2cda5
  $fToJSONCrawl_$ctoJSONList ::
    [Crawler.Crawl] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Crawler.Crawl]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Crawler.Crawl
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Crawler.Crawl
                                       c
                                       Crawler.$fToJSONCrawl_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fToJSONToken :: Data.Aeson.Types.ToJSON.ToJSON Crawler.Token
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Crawler.Token
                  Crawler.$fToJSONToken_$ctoJSON
                  Crawler.$fToJSONToken_$ctoEncoding
                  Crawler.$fToJSONToken_$ctoJSONList
                  Crawler.$fToJSONToken_$ctoEncodingList -}
f9a5e05ec141028f3fc91a7fa106892f
  $fToJSONToken1 ::
    Crawler.Token
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Crawler.Token) ->
                 case w of ww { Crawler.Token ww1 ww2 ->
                 case Crawler.$w$ctoJSON1 ww1 ww2 of ww3 { Unit# ww4 ->
                 (Data.Aeson.Types.Internal.Object ww4)
                   `cast`
                 (Sym (Data.Tagged.N:Tagged[0]
                           <*>_N
                           <Data.Aeson.Types.Generic.True>_P
                           <Data.Aeson.Types.Internal.Value>_R)) } }) -}
9202b91c4dffa985f2ab3d63a9442166
  $fToJSONToken2 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Crawler.$fToJSONToken3 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
61a552654a952e9dcac87cf4a02aa67b
  $fToJSONToken3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter4
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.ToJSON.$fObjectWithSingleFieldEncarityM2
                   Crawler.$fFromBSONToken4
                   0#
                   ipv }) -}
5c0cd0b304d296cdf5d06be4aec52733
  $fToJSONToken4 :: Data.Text.Internal.Text
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Crawler.$fToJSONToken5 of ds7 { (#,#) ipv ipv1 ->
                 ipv1 }) -}
655aa3d0de435bf3533de4b67baf9f21
  $fToJSONToken5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds7 { (#,#) ipv ipv1 ->
                 Data.Aeson.Types.ToJSON.$wouter4
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Data.Aeson.Types.ToJSON.$fObjectWithSingleFieldEncarityM2
                   Crawler.$fFromBSONToken8
                   0#
                   ipv }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fToJSONToken_$ctoEncoding ::
    Crawler.Token -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: Crawler.Token) ->
                 Data.Aeson.Encoding.Internal.value
                   (Crawler.$fToJSONToken_$ctoJSON eta)) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fToJSONToken_$ctoEncodingList ::
    [Crawler.Token] -> Data.Aeson.Encoding.Internal.Encoding
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Crawler.Token]) ->
                 case eta of wild {
                   [] -> Data.Aeson.Encoding.Internal.emptyArray_
                   : x xs
                   -> (Data.ByteString.Builder.Internal.append
                         (Data.Aeson.Encoding.Internal.openBracket
                            @ Data.Aeson.Types.Internal.Value)
                           `cast`
                         (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                              <Data.Aeson.Types.Internal.Value>_P)
                         (Data.ByteString.Builder.Internal.append
                            (Data.Aeson.Encoding.Internal.value
                               (Crawler.$fToJSONToken_$ctoJSON x))
                              `cast`
                            (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                 <Data.Aeson.Types.Internal.Value>_P)
                            (Data.ByteString.Builder.Internal.append
                               (GHC.Base.foldr
                                  @ Crawler.Token
                                  @ (Data.Aeson.Encoding.Internal.Encoding'
                                       Data.Aeson.Types.Internal.Value)
                                  (\ (v :: Crawler.Token)
                                     (vs :: Data.Aeson.Encoding.Internal.Encoding'
                                              Data.Aeson.Types.Internal.Value)[OneShot] ->
                                   Data.ByteString.Builder.Internal.append
                                     (Data.Aeson.Encoding.Internal.comma
                                        @ Data.Aeson.Types.Internal.Value)
                                       `cast`
                                     (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                          <Data.Aeson.Types.Internal.Value>_P)
                                     (Data.ByteString.Builder.Internal.append
                                        (Data.Aeson.Encoding.Internal.value
                                           (Crawler.$fToJSONToken_$ctoJSON v))
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)
                                        vs
                                          `cast`
                                        (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                             <Data.Aeson.Types.Internal.Value>_P)))
                                    `cast`
                                  (<Crawler.Token>_R
                                   ->_R <Data.Aeson.Encoding.Internal.Encoding'
                                           Data.Aeson.Types.Internal.Value>_R
                                   ->_R Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                                 <Data.Aeson.Types.Internal.Value>_P))
                                  (Data.Aeson.Encoding.Internal.empty
                                     @ Data.Aeson.Types.Internal.Value)
                                  xs)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P)
                               (Data.Aeson.Encoding.Internal.closeBracket
                                  @ Data.Aeson.Types.Internal.Value)
                                 `cast`
                               (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                    <Data.Aeson.Types.Internal.Value>_P))))
                        `cast`
                      (Sym (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                                <Data.Aeson.Types.Internal.Value>_P)) }) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fToJSONToken_$ctoJSON ::
    Crawler.Token -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>m1,
     Unfolding: InlineRule (0, True, True)
                Crawler.$fToJSONToken1
                  `cast`
                (<Crawler.Token>_R
                 ->_R Data.Tagged.N:Tagged[0]
                          <*>_N
                          <Data.Aeson.Types.Generic.True>_P
                          <Data.Aeson.Types.Internal.Value>_R) -}
f9a5e05ec141028f3fc91a7fa106892f
  $fToJSONToken_$ctoJSONList ::
    [Crawler.Token] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ (eta :: [Crawler.Token]) ->
                 case Data.Vector.Generic.new
                        @ Data.Vector.Vector
                        @ Data.Aeson.Types.Internal.Value
                        (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                        (Data.Vector.Generic.New.unstream
                           @ Data.Vector.Vector
                           @ Data.Aeson.Types.Internal.Value
                           (Data.Vector.$fVectorVectora @ Data.Aeson.Types.Internal.Value)
                           (Data.Vector.Fusion.Bundle.Monadic.unsafeFromList
                              @ Data.Vector.Fusion.Util.Id
                              @ Data.Aeson.Types.Internal.Value
                              @ Data.Vector.Vector
                              Data.Vector.Fusion.Util.$fMonadId
                              Data.Vector.Fusion.Bundle.Size.Unknown
                              (GHC.Base.build
                                 @ Data.Aeson.Types.Internal.Value
                                 (\ @ b1
                                    (c :: Data.Aeson.Types.Internal.Value -> b1 -> b1)[OneShot]
                                    (n :: b1)[OneShot] ->
                                  GHC.Base.foldr
                                    @ Crawler.Token
                                    @ b1
                                    (GHC.Base.mapFB
                                       @ Data.Aeson.Types.Internal.Value
                                       @ b1
                                       @ Crawler.Token
                                       c
                                       Crawler.$fToJSONToken_$ctoJSON)
                                    n
                                    eta)))) of dt1 { Data.Vector.Vector ipv ipv1 ipv2 ->
                 Data.Aeson.Types.Internal.Array dt1 }) -}
9eea5b750ea23babc0eb39e3f397933b
  $s$fAllCTRender:a ::
    Servant.API.ContentTypes.AllCTRender
      '[Servant.API.ContentTypes.JSON] Common.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ Common.Response
                  (Servant.API.ContentTypes.$fAllCTRender:a_$cp1AllCTRender
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ Common.Response
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Crawler.$s$fAllCTRender:a1)
                  (Servant.API.ContentTypes.$fAllCTRender:a_$chandleAcceptH
                     @ Servant.API.ContentTypes.JSON
                     @ '[]
                     @ Common.Response
                     Servant.API.ContentTypes.$fAcceptTYPEJSON_$ccontentType
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:Accept[0]
                               <*>_N <Servant.API.ContentTypes.JSON>_N))
                     Servant.API.ContentTypes.$fAllMimeUnrender[]a_$callMime
                       `cast`
                     (Sym (Servant.API.ContentTypes.N:AllMime[0] <'[]>_N))
                     Crawler.$s$fAllCTRender:a1) -}
128cf857f779e28840da2434de77cbfa
  $s$fAllCTRender:a1 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] Common.Response
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Crawler.$s$fAllCTRender:a_$s$fAllMimeRender:a0 -}
acdf620fa7139436fe79a231eb4fbe8f
  $s$fAllCTRender:a2 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Common.Response
    -> [(Network.HTTP.Media.MediaType.Internal.MediaType,
         Data.ByteString.Lazy.Internal.ByteString)]
  {- Arity: 2, Strictness: <L,A><L,1*U(1*U)>m2,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (eta1 :: Common.Response) ->
                 GHC.Types.:
                   @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                      Data.ByteString.Lazy.Internal.ByteString)
                   (Servant.API.ContentTypes.$fAcceptTYPEJSON1,
                    Crawler.$s$fAllCTRender:a_$sencode eta1)
                   (GHC.Types.[]
                      @ (Network.HTTP.Media.MediaType.Internal.MediaType,
                         Data.ByteString.Lazy.Internal.ByteString))) -}
9d216a86750f350788b7b9cec43cf053
  $s$fAllCTRender:a3 ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON Common.Response
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Crawler.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa -}
7446d0504ab8a11e0ee05e7d74fcc065
  $s$fAllCTRender:a_$s$fAllMimeRender:a0 ::
    Servant.API.ContentTypes.AllMimeRender
      '[Servant.API.ContentTypes.JSON] Common.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ Common.Response
                  (Servant.API.ContentTypes.$fAllMimeRender:a0_$cp1AllMimeRender
                     @ Servant.API.ContentTypes.JSON
                     @ Common.Response
                     Crawler.$s$fAllCTRender:a3)
                  Crawler.$s$fAllCTRender:a2 -}
b3e3076b6662eee129b761bee65b3256
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeRender
      Servant.API.ContentTypes.JSON Common.Response
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ Common.Response
                  (Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cp1MimeRender
                     @ Common.Response
                     Common.$fToJSONResponse)
                  Crawler.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender -}
5d298bd1c2bf02bf7a739573507cbda7
  $s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Common.Response -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 2, Strictness: <L,A><L,1*U(1*U)>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Common.Response) ->
                 Crawler.$s$fAllCTRender:a_$sencode eta) -}
f43a51260db1117f1c6f5717518bb55c
  $s$fAllCTRender:a_$sencode ::
    Common.Response -> Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 1, Strictness: <L,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Common.Response) ->
                 Data.ByteString.Builder.toLazyByteString
                   (Data.Aeson.Encoding.Internal.value
                      (Common.$fToJSONResponse_$ctoJSON eta))
                     `cast`
                   (Data.Aeson.Encoding.Internal.N:Encoding'[0]
                        <Data.Aeson.Types.Internal.Value>_P)) -}
f74c0e0838aa5286a19d3313059087e8
  $s$fAllMimeUnrender:a ::
    Servant.API.ContentTypes.AllMimeUnrender
      '[Servant.API.ContentTypes.JSON] Common.User
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ '[Servant.API.ContentTypes.JSON]
                  @ Common.User
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$cp1AllMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ Common.User
                     @ '[]
                     Crawler.$s$fAllMimeUnrender:a1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a @ Common.User))
                  (Servant.API.ContentTypes.$fAllMimeUnrender:a_$callMimeUnrender
                     @ Servant.API.ContentTypes.JSON
                     @ Common.User
                     @ '[]
                     Crawler.$s$fAllMimeUnrender:a1
                     (Servant.API.ContentTypes.$fAllMimeUnrender[]a @ Common.User)) -}
a53104def33644e4dc81ff4f2e969462
  $s$fAllMimeUnrender:a1 ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON Common.User
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Crawler.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa -}
1d1a494b11e7112c93516f4e70e252d4
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa ::
    Servant.API.ContentTypes.MimeUnrender
      Servant.API.ContentTypes.JSON Common.User
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ *
                  @ Servant.API.ContentTypes.JSON
                  @ Common.User
                  (Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cp1MimeUnrender
                     @ Common.User
                     Common.$fFromJSONUser)
                  Crawler.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender -}
a9b6f5f0bf5094846e6b6eda7cc1fc2d
  $s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender ::
    Data.Proxy.Proxy Servant.API.ContentTypes.JSON
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.Either.Either GHC.Base.String Common.User
  {- Arity: 2, Strictness: <L,A><S,1*U>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Data.Proxy.Proxy Servant.API.ContentTypes.JSON)
                   (eta :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.eitherDecodeLenient
                   @ Common.User
                   Common.$fFromJSONUser
                   eta) -}
729384a0544cace94c9c099b88a887b2
  $sinsert_$sgo10 ::
    Data.Text.Internal.Text
    -> a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 3, Strictness: <S,1*U(U,U,U)><L,U><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a1
                   (w :: Data.Text.Internal.Text)
                   (w1 :: a1)
                   (w2 :: Data.Map.Base.Map Data.Text.Internal.Text a1) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Crawler.$w$sgo10 @ a1 ww1 ww2 ww3 w1 w2 }) -}
ddc56a1c30a5d9738efe7907787336a5
  $slookup1 ::
    Data.Text.Internal.Text
    -> Data.Map.Base.Map Data.Text.Internal.Text a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U,U)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Data.Text.Internal.Text)
                   (w1 :: Data.Map.Base.Map Data.Text.Internal.Text a) ->
                 case w of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Crawler.$wpoly_go10 @ a ww1 ww2 ww3 w1 }) -}
53f2bab02b47b74ee322a0fc80151d76
  $tc'Crawl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17147707417300733455##
                   3003080442777415029##
                   Crawler.$trModule
                   Crawler.$tc'Crawl1) -}
45e5cb56a96aa9441ab77e9fa15a82f6
  $tc'Crawl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Crawl"#) -}
247c2b9fdeaa5a30d432d620fe5b73d3
  $tc'CrawlInfo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4157626174469475914##
                   17974275766973634224##
                   Crawler.$trModule
                   Crawler.$tc'CrawlInfo1) -}
061b8710570b5c0827aa548ba091441e
  $tc'CrawlInfo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CrawlInfo"#) -}
f82d7852023cb430e0132fa5d01c55b9
  $tc'LookupMap :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2488951751810377834##
                   2170261491749881499##
                   Crawler.$trModule
                   Crawler.$tc'LookupMap1) -}
f4ebdee335e24bb217bb99c5d2ca9fa0
  $tc'LookupMap1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LookupMap"#) -}
c8c299106bd6e0cf78408e6f301538f7
  $tc'Token :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3793511255897134409##
                   4698265452757916456##
                   Crawler.$trModule
                   Crawler.$tc'Token1) -}
3ee8726be7dd56fc412774b94e04eda0
  $tc'Token1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Token"#) -}
54282fd7a48bc9fb5bb1e077ab56624a
  $tcCrawl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4057962277071385428##
                   2111641228877052083##
                   Crawler.$trModule
                   Crawler.$tcCrawl1) -}
ea044c9c694db0abe3e5a38e65a42c7c
  $tcCrawl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Crawl"#) -}
30bfe923673b98a64f450c6db334fd42
  $tcCrawlInfo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6202546715498034783##
                   12292160167298103738##
                   Crawler.$trModule
                   Crawler.$tcCrawlInfo1) -}
a99753fbeace8ef9c9b716c54007cf26
  $tcCrawlInfo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "CrawlInfo"#) -}
3361c2a80080fc8c40d27fa358c434b3
  $tcLookupMap :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17995620024255620379##
                   12171127700614120019##
                   Crawler.$trModule
                   Crawler.$tcLookupMap1) -}
55d3a0f4fe96f920d565a625bab9e63a
  $tcLookupMap1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "LookupMap"#) -}
70bf64f664bf980e92732902b6a8dab0
  $tcToken :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2231888554990383176##
                   841233301232429575##
                   Crawler.$trModule
                   Crawler.$tcToken1) -}
6c209dc9439d284b1be81d13a5a3930b
  $tcToken1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Token"#) -}
9a79114a763086727b59906512177fac
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Crawler.$trModule2
                   Crawler.$trModule1) -}
881b4896e54c85f276b6a80741fc8644
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Crawler"#) -}
d065f4e9d4a94149a1f78f244fc02df6
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A"#) -}
32f2a4a896c06bf0db14ad4a9c000c01
  $w$c/= ::
    GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Types.Bool) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case ww1 of wild1 {
                        GHC.Types.False -> ww3
                        GHC.Types.True
                        -> case ww3 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
c345cd3b54c623404516bbce3b2aff50
  $w$c/=1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Base.eqString ww1 ww3 of wild1 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } }) -}
3231e36c9b539ae43d787b3d77151b23
  $w$c== ::
    GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Bool)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Types.Bool) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Classes.$fEqBool_$c== ww1 ww3 }) -}
6f95e8d6b4eb1097c43c072b8e9432c9
  $w$c==1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.String) ->
                 case GHC.Base.eqString ww ww2 of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True -> GHC.Base.eqString ww1 ww3 }) -}
21579d8ca1ead7914e3d62de131e545d
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Types.Bool)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Crawler.$fShowCrawl6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Crawler.$fShowCrawl5
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Crawler.$fShowCrawl4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Crawler.$fShowCrawl3
                                         (case ww2 of wild {
                                            GHC.Types.False
                                            -> GHC.Base.++
                                                 @ GHC.Types.Char
                                                 GHC.Show.shows21
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    Crawler.$fShowCrawl2
                                                    x)
                                            GHC.Types.True
                                            -> GHC.Base.++
                                                 @ GHC.Types.Char
                                                 GHC.Show.shows20
                                                 (GHC.Base.++
                                                    @ GHC.Types.Char
                                                    Crawler.$fShowCrawl2
                                                    x) })))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
18470daae21487f0a52eb3b8cd5e76eb
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <S,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (w :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Crawler.$fShowToken4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Crawler.$fShowToken3
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows8
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows8
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Crawler.$fShowCrawl4
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Crawler.$fShowToken2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows8
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Crawler.$fShowCrawl2
                                                     x))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows6 w)) }) -}
220591a92c6c80b57cdcd588770f65c3
  $w$ctoJSON ::
    GHC.Base.String
    -> GHC.Types.Bool -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) (ww1 :: GHC.Types.Bool) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           (Crawler.$fToJSONCrawl5,
                            case Crawler.$w$dGToJSON
                                   @ GHC.Prim.Any
                                   ww
                                     `cast`
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                            Data.Aeson.Types.Internal.String ww3 })
                           (GHC.Types.:
                              @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                              (Crawler.$fToJSONCrawl2, Data.Aeson.Types.Internal.$WBool ww1)
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
383a6f3bb472b07422771b9b3956bd76
  $w$ctoJSON1 ::
    GHC.Base.String
    -> GHC.Base.String -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String) (ww1 :: GHC.Base.String) ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                           (Crawler.$fToJSONToken4,
                            case Crawler.$w$dGToJSON1
                                   @ GHC.Prim.Any
                                   ww
                                     `cast`
                                   (Sym (GHC.Generics.N:K1[0]
                                             <GHC.Generics.R>_P
                                             <GHC.Base.String>_R
                                             <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                            Data.Aeson.Types.Internal.String ww3 })
                           (GHC.Types.:
                              @ (Data.Text.Internal.Text, Data.Aeson.Types.Internal.Value)
                              (Crawler.$fToJSONToken2,
                               case Crawler.$w$dGToJSON1
                                      @ GHC.Prim.Any
                                      ww1
                                        `cast`
                                      (Sym (GHC.Generics.N:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Base.String>_R
                                                <GHC.Prim.Any>_P)) of ww2 { Unit# ww3 ->
                               Data.Aeson.Types.Internal.String ww3 })
                              (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt1 { DEFAULT ->
                 (# dt1 #) }) -}
57ee3e4887c0b6f8ae47c74962688349
  $w$dConsFromJSON' ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "cName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "cStatus")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Types.Bool))
               a))
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 case w2 of wild {
                   DEFAULT
                   -> (Data.Aeson.Types.FromJSON.typeMismatch
                         @ ((GHC.Generics.:*:)
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "cName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "cStatus")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Types.Bool))
                              a)
                         Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                         wild)
                        `cast`
                      (Sym (Data.Tagged.N:Tagged[0]
                                <*>_N
                                <Data.Aeson.Types.Generic.True>_P
                                <Data.Aeson.Types.Internal.Parser
                                   ((GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "cName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "cStatus")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Types.Bool))
                                      a)>_R))
                   Data.Aeson.Types.Internal.Object obj
                   -> let {
                        e :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "cStatus")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Bool)
                                  a)
                        = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "cStatus")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool)
                            Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel
                            Crawler.$fFromJSONCrawl6
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_N))
                            @ a
                            w
                            w1
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        m :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "cName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "cName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel1
                            Crawler.$fFromJSONCrawl4
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            w1
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  ((GHC.Generics.:*:)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "cName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "cStatus")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Types.Bool))
                                     a)
                                  f
                                  r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "cName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String)
                               a>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a2 :: GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                     a) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "cStatus")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Types.Bool)
                                  a>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a3 :: GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "cStatus")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Types.Bool)
                                        a) ->
                             ks
                               (GHC.Generics.:*:
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "cName")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "cStatus")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Types.Bool))
                                  @ a
                                  a2
                                  a3))))
                        `cast`
                      (Trans
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(GHC.Generics.:*:)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "cName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "cStatus")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Types.Bool))
                                        a>_R))
                           (Sym (Data.Tagged.N:Tagged[0]
                                     <*>_N
                                     <Data.Aeson.Types.Generic.True>_P
                                     <Data.Aeson.Types.Internal.Parser
                                        ((GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "cName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "cStatus")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Types.Bool))
                                           a)>_R))) }) -}
e58dd9e037a8dec696bc94254687321c
  $w$dConsFromJSON'1 ::
    Data.Aeson.Types.Internal.Options
    -> Data.Aeson.Types.FromJSON.FromArgs
         Data.Aeson.Types.Generic.Zero a
    -> Data.Aeson.Types.Internal.Value
    -> Data.Tagged.Tagged
         Data.Aeson.Types.Generic.True
         (Data.Aeson.Types.Internal.Parser
            ((GHC.Generics.:*:)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "tName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "tValue")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String))
               a))
  {- Arity: 3, Strictness: <L,U(U,U,U,U,U,U)><L,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.Aeson.Types.Internal.Options)
                   (w1 :: Data.Aeson.Types.FromJSON.FromArgs
                            Data.Aeson.Types.Generic.Zero a)
                   (w2 :: Data.Aeson.Types.Internal.Value) ->
                 case w2 of wild {
                   DEFAULT
                   -> (Data.Aeson.Types.FromJSON.typeMismatch
                         @ ((GHC.Generics.:*:)
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "tName")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              (GHC.Generics.S1
                                 ('GHC.Generics.MetaSel
                                    ('GHC.Base.Just "tValue")
                                    'GHC.Generics.NoSourceUnpackedness
                                    'GHC.Generics.NoSourceStrictness
                                    'GHC.Generics.DecidedLazy)
                                 (GHC.Generics.Rec0 GHC.Base.String))
                              a)
                         Data.Aeson.Types.FromJSON.$fConsFromJSON'TYPEarityfTrue1
                         wild)
                        `cast`
                      (Sym (Data.Tagged.N:Tagged[0]
                                <*>_N
                                <Data.Aeson.Types.Generic.True>_P
                                <Data.Aeson.Types.Internal.Parser
                                   ((GHC.Generics.:*:)
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tName")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                                      (GHC.Generics.S1
                                         ('GHC.Generics.MetaSel
                                            ('GHC.Base.Just "tValue")
                                            'GHC.Generics.NoSourceUnpackedness
                                            'GHC.Generics.NoSourceStrictness
                                            'GHC.Generics.DecidedLazy)
                                         (GHC.Generics.Rec0 GHC.Base.String))
                                      a)>_R))
                   Data.Aeson.Types.Internal.Object obj
                   -> let {
                        e :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tValue")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "tValue")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel
                            Crawler.$fFromJSONToken3
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            w1
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      let {
                        m :: Data.Aeson.Types.Internal.Parser
                               (GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tName")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a)
                        = Data.Aeson.Types.FromJSON.$fFromRecordarityM10_$cparseRecord
                            @ ('GHC.Generics.MetaSel
                                 ('GHC.Base.Just "tName")
                                 'GHC.Generics.NoSourceUnpackedness
                                 'GHC.Generics.NoSourceStrictness
                                 'GHC.Generics.DecidedLazy)
                            @ Data.Aeson.Types.Generic.Zero
                            @ (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                            Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel1
                            Crawler.$fFromJSONToken3
                              `cast`
                            (Sym (Data.Aeson.Types.FromJSON.N:GFromJSON[0]
                                      <Data.Aeson.Types.Generic.Zero>_N
                                      <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char]>_N))
                            @ a
                            w
                            w1
                            (GHC.Base.Nothing @ Data.Text.Internal.Text)
                            obj
                      } in
                      (\ @ (f :: * -> *)
                         @ r
                         (path :: Data.Aeson.Types.Internal.JSONPath)
                         (kf :: Data.Aeson.Types.Internal.Failure f r)
                         (ks :: Data.Aeson.Types.Internal.Success
                                  ((GHC.Generics.:*:)
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "tName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "tValue")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String))
                                     a)
                                  f
                                  r) ->
                       m `cast`
                       (Data.Aeson.Types.Internal.N:Parser[0]
                            <GHC.Generics.M1
                               GHC.Generics.S
                               ('GHC.Generics.MetaSel
                                  ('GHC.Base.Just "tName")
                                  'GHC.Generics.NoSourceUnpackedness
                                  'GHC.Generics.NoSourceStrictness
                                  'GHC.Generics.DecidedLazy)
                               (GHC.Generics.Rec0 GHC.Base.String)
                               a>_R)
                         @ f
                         @ r
                         path
                         kf
                         (\ (a2 :: GHC.Generics.M1
                                     GHC.Generics.S
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                     a) ->
                          e `cast`
                          (Data.Aeson.Types.Internal.N:Parser[0]
                               <GHC.Generics.M1
                                  GHC.Generics.S
                                  ('GHC.Generics.MetaSel
                                     ('GHC.Base.Just "tValue")
                                     'GHC.Generics.NoSourceUnpackedness
                                     'GHC.Generics.NoSourceStrictness
                                     'GHC.Generics.DecidedLazy)
                                  (GHC.Generics.Rec0 GHC.Base.String)
                                  a>_R)
                            @ f
                            @ r
                            path
                            kf
                            (\ (a3 :: GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "tValue")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.Rec0 GHC.Base.String)
                                        a) ->
                             ks
                               (GHC.Generics.:*:
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "tName")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ (GHC.Generics.M1
                                       GHC.Generics.S
                                       ('GHC.Generics.MetaSel
                                          ('GHC.Base.Just "tValue")
                                          'GHC.Generics.NoSourceUnpackedness
                                          'GHC.Generics.NoSourceStrictness
                                          'GHC.Generics.DecidedLazy)
                                       (GHC.Generics.Rec0 GHC.Base.String))
                                  @ a
                                  a2
                                  a3))))
                        `cast`
                      (Trans
                           (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                     <(GHC.Generics.:*:)
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "tName")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           ('GHC.Generics.MetaSel
                                              ('GHC.Base.Just "tValue")
                                              'GHC.Generics.NoSourceUnpackedness
                                              'GHC.Generics.NoSourceStrictness
                                              'GHC.Generics.DecidedLazy)
                                           (GHC.Generics.Rec0 GHC.Base.String))
                                        a>_R))
                           (Sym (Data.Tagged.N:Tagged[0]
                                     <*>_N
                                     <Data.Aeson.Types.Generic.True>_P
                                     <Data.Aeson.Types.Internal.Parser
                                        ((GHC.Generics.:*:)
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "tName")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           (GHC.Generics.S1
                                              ('GHC.Generics.MetaSel
                                                 ('GHC.Base.Just "tValue")
                                                 'GHC.Generics.NoSourceUnpackedness
                                                 'GHC.Generics.NoSourceStrictness
                                                 'GHC.Generics.DecidedLazy)
                                              (GHC.Generics.Rec0 GHC.Base.String))
                                           a)>_R))) }) -}
f9bf2060012b390d9b507e4a0278ea71
  $w$dGFromBSON ::
    GHC.Prim.Int#
    -> Data.Bson.Document
    -> GHC.Base.Maybe
         ((GHC.Generics.:+:)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            (GHC.Generics.M1
               GHC.Generics.C
               ('GHC.Generics.MetaCons
                  "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
               GHC.Generics.U1)
            a1)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (w :: Data.Bson.Document) ->
                 case ww of ds {
                   DEFAULT
                   -> let {
                        $j :: GHC.Prim.Void#
                              -> GHC.Base.Maybe
                                   ((GHC.Generics.:+:)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      a1)
                          {- Arity: 1, Strictness: <L,A> -}
                        = \ (w1 :: GHC.Prim.Void#)[OneShot] ->
                          case Data.Bson.!?_$slook
                                 Data.Bson.Generic.constructorLabel
                                 w of wild {
                            GHC.Base.Nothing
                            -> GHC.Base.Nothing
                                 @ ((GHC.Generics.:+:)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      (GHC.Generics.M1
                                         GHC.Generics.C
                                         ('GHC.Generics.MetaCons
                                            "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                         GHC.Generics.U1)
                                      a1)
                            GHC.Base.Just x
                            -> case Data.Bson.cast
                                      @ [GHC.Types.Char]
                                      @ GHC.Base.Maybe
                                      Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                                      GHC.Base.$fMonadMaybe
                                      x of wild1 {
                                 GHC.Base.Nothing
                                 -> GHC.Base.Nothing
                                      @ ((GHC.Generics.:+:)
                                           (GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1)
                                           (GHC.Generics.M1
                                              GHC.Generics.C
                                              ('GHC.Generics.MetaCons
                                                 "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                              GHC.Generics.U1)
                                           a1)
                                 GHC.Base.Just x1
                                 -> case GHC.Base.eqString x1 Crawler.$fFromBSONBool7 of wild2 {
                                      GHC.Types.False
                                      -> GHC.Base.Nothing
                                           @ ((GHC.Generics.:+:)
                                                (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "False"
                                                      'GHC.Generics.PrefixI
                                                      'GHC.Types.False)
                                                   GHC.Generics.U1)
                                                (GHC.Generics.M1
                                                   GHC.Generics.C
                                                   ('GHC.Generics.MetaCons
                                                      "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                                                   GHC.Generics.U1)
                                                a1)
                                      GHC.Types.True -> Crawler.$fFromBSONBool5 @ a1 } } }
                      } in
                      case Data.Bson.!?_$slook
                             Data.Bson.Generic.constructorLabel
                             w of wild {
                        GHC.Base.Nothing -> $j GHC.Prim.void#
                        GHC.Base.Just x
                        -> case Data.Bson.cast
                                  @ [GHC.Types.Char]
                                  @ GHC.Base.Maybe
                                  Data.Bson.Generic.$fGFromBSONM12_$s$fVal[]
                                  GHC.Base.$fMonadMaybe
                                  x of wild1 {
                             GHC.Base.Nothing -> $j GHC.Prim.void#
                             GHC.Base.Just x1
                             -> case GHC.Base.eqString x1 Crawler.$fFromBSONBool4 of wild2 {
                                  GHC.Types.False -> $j GHC.Prim.void#
                                  GHC.Types.True -> Crawler.$fFromBSONBool2 @ a1 } } }
                   0# -> Crawler.$fFromBSONBool2 @ a1
                   1# -> Crawler.$fFromBSONBool2 @ a1 }) -}
55926a305ab950e75a0c5d46fc560aa3
  $w$dGFromJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case w of wild {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ [GHC.Types.Char]
                            Crawler.$fFromJSONCrawl5
                            wild
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                          let {
                            a2 :: [GHC.Types.Char]
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f r) ->
                           ks a2)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Char]>_R)) } }
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) f4 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: [GHC.Types.Char]) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1>_R))) -}
8f81280bab4ee37abe283ecdb88e4951
  $w$dGFromJSON1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser GHC.Types.Bool
                   = case w of wild {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ GHC.Types.Bool
                            Crawler.$fFromJSONCrawl7
                            wild
                       Data.Aeson.Types.Internal.Bool arr
                       -> (\ @ (f :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success GHC.Types.Bool f r) ->
                           ks arr)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Types.Bool>_R)) }
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool a1) f4 r) ->
                  m `cast` (Data.Aeson.Types.Internal.N:Parser[0] <GHC.Types.Bool>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: GHC.Types.Bool) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <GHC.Types.Bool>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool a1>_R))) -}
eef4bc46e9a8febafde6d50e39254882
  $w$dGFromJSON2 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ @ a1 (w :: Data.Aeson.Types.Internal.Value) ->
                 let {
                   m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                   = case w of wild {
                       DEFAULT
                       -> Data.Aeson.Types.FromJSON.typeMismatch
                            @ [GHC.Types.Char]
                            Crawler.$fFromJSONCrawl5
                            wild
                       Data.Aeson.Types.Internal.String txt
                       -> case txt of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                          let {
                            a2 :: [GHC.Types.Char]
                            = let {
                                end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                              } in
                              letrec {
                                $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                  {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                = \ (ww :: GHC.Prim.Int#) ->
                                  case GHC.Prim.tagToEnum#
                                         @ GHC.Types.Bool
                                         (GHC.Prim.>=# ww end) of wild2 {
                                    GHC.Types.False
                                    -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                                       case GHC.Prim.tagToEnum#
                                              @ GHC.Types.Bool
                                              (GHC.Prim.geWord# r# 55296##) of wild3 {
                                         GHC.Types.False
                                         -> GHC.Types.:
                                              @ GHC.Types.Char
                                              (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                              ($wunfold (GHC.Prim.+# ww 1#))
                                         GHC.Types.True
                                         -> case GHC.Prim.tagToEnum#
                                                   @ GHC.Types.Bool
                                                   (GHC.Prim.leWord# r# 56319##) of wild4 {
                                              GHC.Types.False
                                              -> GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                   ($wunfold (GHC.Prim.+# ww 1#))
                                              GHC.Types.True
                                              -> case GHC.Prim.indexWord16Array#
                                                        dt
                                                        (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                                 GHC.Types.:
                                                   @ GHC.Types.Char
                                                   (GHC.Types.C#
                                                      (GHC.Prim.chr#
                                                         (GHC.Prim.+#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.uncheckedIShiftL#
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#)
                                                                     55296#)
                                                                  10#)
                                                               (GHC.Prim.-#
                                                                  (GHC.Prim.word2Int# r#1)
                                                                  56320#))
                                                            65536#)))
                                                   ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                                    GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                              } in
                              $wunfold dt1
                          } in
                          (\ @ (f :: * -> *)
                             @ r
                             (_path :: Data.Aeson.Types.Internal.JSONPath)
                             (_kf :: Data.Aeson.Types.Internal.Failure f r)
                             (ks :: Data.Aeson.Types.Internal.Success [GHC.Types.Char] f r) ->
                           ks a2)
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                                    <[GHC.Types.Char]>_R)) } }
                 } in
                 (\ @ (f4 :: * -> *)
                    @ r
                    (path :: Data.Aeson.Types.Internal.JSONPath)
                    (kf :: Data.Aeson.Types.Internal.Failure f4 r)
                    (ks :: Data.Aeson.Types.Internal.Success
                             (GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) f4 r) ->
                  m `cast`
                  (Data.Aeson.Types.Internal.N:Parser[0] <[GHC.Types.Char]>_R)
                    @ f4
                    @ r
                    path
                    kf
                    (\ (a2 :: [GHC.Types.Char]) ->
                     ks
                       a2
                         `cast`
                       (Sym (GHC.Generics.N:K1[0]
                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.N:Parser[0]
                           <GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1>_R))) -}
2db9e8db8eefffd52d57595af601a4c6
  $w$dGToBSON ::
    GHC.Prim.Int#
    -> (GHC.Generics.:+:)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         (GHC.Generics.M1
            GHC.Generics.C
            ('GHC.Generics.MetaCons
               "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
            GHC.Generics.U1)
         a1
    -> Data.Bson.Document
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Prim.Int#)
                   (w :: (GHC.Generics.:+:)
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
                           (GHC.Generics.M1
                              GHC.Generics.C
                              ('GHC.Generics.MetaCons
                                 "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                              GHC.Generics.U1)
                           a1) ->
                 case w of wild {
                   GHC.Generics.L1 x
                   -> Data.Bson.Generic.$w$cgenericToBSON1
                        @ GHC.Generics.U1
                        @ ('GHC.Generics.MetaCons
                             "False" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                          `cast`
                        (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                        Crawler.$fToBSONBool_$s$fConstructorMetaMetaCons1
                        @ a1
                        ww
                        x
                   GHC.Generics.R1 x
                   -> Data.Bson.Generic.$w$cgenericToBSON1
                        @ GHC.Generics.U1
                        @ ('GHC.Generics.MetaCons
                             "True" 'GHC.Generics.PrefixI 'GHC.Types.False)
                        Data.Bson.Generic.$fGToBSONU1_$cgenericToBSON
                          `cast`
                        (Sym (Data.Bson.Generic.N:GToBSON[0] <GHC.Generics.U1>_N))
                        Crawler.$fToBSONBool_$s$fConstructorMetaMetaCons
                        @ a1
                        ww
                        x }) -}
cb253cad06ed49cbb9b6ee8370000d2d
  $w$dGToBSON1 ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "cName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 GHC.Base.String)
      a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "cStatus")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Types.Bool)
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,1*U><L,U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "cName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Base.String)
                            a1)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "cStatus")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Types.Bool)
                             a1) ->
                 GHC.Base.++
                   @ Data.Bson.Field
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              Crawler.$fToBSONCrawl4 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (case GHC.Magic.runRW#
                                    @ 'GHC.Types.PtrRepLifted
                                    @ Data.Text.Internal.Text
                                    (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case GHC.Prim.newByteArray#
                                            @ GHC.Prim.RealWorld
                                            8#
                                            s1 of ds2 { (#,#) ipv7 ipv8 ->
                                     Data.Bson.$wouter
                                       (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv8)
                                       Data.Bson.$fValChar2
                                       ww
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "cName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                                       0#
                                       ipv7 }) of ds2 { (#,#) ipv7 ipv8 ->
                             ipv8 })) } })
                      (GHC.Types.[] @ Data.Bson.Field))
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              Crawler.$fToBSONCrawl3 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.Bool
                            ww1
                              `cast`
                            (Trans
                                 (GHC.Generics.N:M1[0]
                                      <GHC.Generics.S>_P
                                      <'GHC.Generics.MetaSel
                                         ('GHC.Base.Just "cStatus")
                                         'GHC.Generics.NoSourceUnpackedness
                                         'GHC.Generics.NoSourceStrictness
                                         'GHC.Generics.DecidedLazy>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool>_R <a1>_N)
                                 (GHC.Generics.N:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Bool>_R <a1>_P))) } })
                      (GHC.Types.[] @ Data.Bson.Field))) -}
aade2494ee9ec0936d649638dc68a33d
  $w$dGToBSON2 ::
    GHC.Generics.M1
      GHC.Generics.S
      ('GHC.Generics.MetaSel
         ('GHC.Base.Just "tName")
         'GHC.Generics.NoSourceUnpackedness
         'GHC.Generics.NoSourceStrictness
         'GHC.Generics.DecidedLazy)
      (GHC.Generics.Rec0 GHC.Base.String)
      a1
    -> GHC.Generics.M1
         GHC.Generics.S
         ('GHC.Generics.MetaSel
            ('GHC.Base.Just "tValue")
            'GHC.Generics.NoSourceUnpackedness
            'GHC.Generics.NoSourceStrictness
            'GHC.Generics.DecidedLazy)
         (GHC.Generics.Rec0 GHC.Base.String)
         a1
    -> [Data.Bson.Field]
  {- Arity: 2, Strictness: <L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (ww :: GHC.Generics.M1
                            GHC.Generics.S
                            ('GHC.Generics.MetaSel
                               ('GHC.Base.Just "tName")
                               'GHC.Generics.NoSourceUnpackedness
                               'GHC.Generics.NoSourceStrictness
                               'GHC.Generics.DecidedLazy)
                            (GHC.Generics.Rec0 GHC.Base.String)
                            a1)
                   (ww1 :: GHC.Generics.M1
                             GHC.Generics.S
                             ('GHC.Generics.MetaSel
                                ('GHC.Base.Just "tValue")
                                'GHC.Generics.NoSourceUnpackedness
                                'GHC.Generics.NoSourceStrictness
                                'GHC.Generics.DecidedLazy)
                             (GHC.Generics.Rec0 GHC.Base.String)
                             a1) ->
                 GHC.Base.++
                   @ Data.Bson.Field
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              Crawler.$fToBSONToken4 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (case GHC.Magic.runRW#
                                    @ 'GHC.Types.PtrRepLifted
                                    @ Data.Text.Internal.Text
                                    (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case GHC.Prim.newByteArray#
                                            @ GHC.Prim.RealWorld
                                            8#
                                            s1 of ds2 { (#,#) ipv7 ipv8 ->
                                     Data.Bson.$wouter
                                       (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv8)
                                       Data.Bson.$fValChar2
                                       ww
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tName")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                                       0#
                                       ipv7 }) of ds2 { (#,#) ipv7 ipv8 ->
                             ipv8 })) } })
                      (GHC.Types.[] @ Data.Bson.Field))
                   (GHC.Types.:
                      @ Data.Bson.Field
                      (case GHC.Magic.runRW#
                              @ 'GHC.Types.PtrRepLifted
                              @ Data.Text.Internal.Text
                              Crawler.$fToBSONToken3 of ds1 { (#,#) ipv ipv1 ->
                       case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                       Data.Bson.:=
                         dt1
                         (Data.Bson.String
                            (case GHC.Magic.runRW#
                                    @ 'GHC.Types.PtrRepLifted
                                    @ Data.Text.Internal.Text
                                    (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case GHC.Prim.newByteArray#
                                            @ GHC.Prim.RealWorld
                                            8#
                                            s1 of ds2 { (#,#) ipv7 ipv8 ->
                                     Data.Bson.$wouter
                                       (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv8)
                                       Data.Bson.$fValChar2
                                       ww1
                                         `cast`
                                       (Trans
                                            (GHC.Generics.N:M1[0]
                                                 <GHC.Generics.S>_P
                                                 <'GHC.Generics.MetaSel
                                                    ('GHC.Base.Just "tValue")
                                                    'GHC.Generics.NoSourceUnpackedness
                                                    'GHC.Generics.NoSourceStrictness
                                                    'GHC.Generics.DecidedLazy>_P
                                                 <GHC.Generics.K1
                                                    GHC.Generics.R [GHC.Types.Char]>_R <a1>_N)
                                            (GHC.Generics.N:K1[0]
                                                 <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P))
                                       0#
                                       ipv7 }) of ds2 { (#,#) ipv7 ipv8 ->
                             ipv8 })) } })
                      (GHC.Types.[] @ Data.Bson.Field))) -}
32ae1f2665a1d8aa46a246cb211f8c32
  $w$dGToJSON ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Crawler.$wouter
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Crawler.$fToJSONCrawl4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
2eec8db9bedab888d0ecb1580cedb794
  $w$dGToJSON1 ::
    GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1
    -> (# Data.Text.Internal.Text #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Generics.K1 GHC.Generics.R [GHC.Types.Char] a1) ->
                 case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                8#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         Crawler.$wouter1
                           (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                           Crawler.$fToJSONCrawl4
                           w `cast`
                           (GHC.Generics.N:K1[0]
                                <GHC.Generics.R>_P <[GHC.Types.Char]>_R <a1>_P)
                           0#
                           ipv }) of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt1 { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 (# dt1 #) } }) -}
82550914cd40c02e15d1b5d6137864ff
  $w$sgo10 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
    -> Data.Map.Base.Map Data.Text.Internal.Text a1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
6ad72ec09e3c39b57a9d200fe3ce35ed
  $wcrawlEngine ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U(U(U))><L,U(U,U,U)><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Crawler.LookupMap)
                   (ww :: Data.Text.Internal.Text)
                   (ww1 :: GHC.Base.Maybe GitHub.Auth.Auth)
                   (ww2 :: GHC.Prim.Int#)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Crawler.$wcrawlUserToRepos
                        w
                        ww1
                        ww
                        ww2
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 let {
                   c :: GHC.Base.String
                   = case ww of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                     let {
                       end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                     } in
                     letrec {
                       $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                         {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                       = \ (ww3 :: GHC.Prim.Int#) ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.>=# ww3 end) of wild1 {
                           GHC.Types.False
                           -> case GHC.Prim.indexWord16Array# dt ww3 of r# { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.geWord# r# 55296##) of wild2 {
                                GHC.Types.False
                                -> GHC.Types.:
                                     @ GHC.Types.Char
                                     (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                     ($wunfold (GHC.Prim.+# ww3 1#))
                                GHC.Types.True
                                -> case GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.leWord# r# 56319##) of wild3 {
                                     GHC.Types.False
                                     -> GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                          ($wunfold (GHC.Prim.+# ww3 1#))
                                     GHC.Types.True
                                     -> case GHC.Prim.indexWord16Array#
                                               dt
                                               (GHC.Prim.+# ww3 1#) of r#1 { DEFAULT ->
                                        GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C#
                                             (GHC.Prim.chr#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.uncheckedIShiftL#
                                                         (GHC.Prim.-#
                                                            (GHC.Prim.word2Int# r#)
                                                            55296#)
                                                         10#)
                                                      (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                                   65536#)))
                                          ($wunfold (GHC.Prim.+# ww3 2#)) } } } }
                           GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                     } in
                     $wunfold dt1 }
                 } in
                 case Crawler.crawlEngine9 c ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { Crawler.Crawl ds ds3 ->
                 case ds3 of wild1 {
                   GHC.Types.False
                   -> case Common.logBoolAction1
                             GHC.Types.False
                             Crawler.crawlEngine7
                             Crawler.crawlEngine8
                             (GHC.Types.[] @ GHC.Types.Char)
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      Common.logTrailing1 ipv4 }
                   GHC.Types.True
                   -> case Crawler.$wupsertCrawl
                             c
                             GHC.Types.False
                             ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                      case Common.logBoolAction1
                             GHC.Types.True
                             Crawler.crawlEngine7
                             Crawler.crawlEngine8
                             (GHC.Types.[] @ GHC.Types.Char)
                             ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                      Common.logTrailing1 ipv6 } } } } } }) -}
f63fb95ca2f97af4346280a7da7cd5c9
  $wcrawlRepoToContributors ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> GHC.Types.Int
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GitHub.Data.Name.Name GitHub.Data.Definitions.Owner
    -> GitHub.Data.Name.Name GitHub.Data.Repos.Repo
    -> GHC.Base.Maybe GitHub.Data.Repos.Language
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 10,
     Strictness: <L,U(U(U))><S,U><L,U(U)><L,U><L,U><L,U><L,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Crawler.LookupMap)
                   (w1 :: GHC.Base.Maybe GitHub.Auth.Auth)
                   (w2 :: GHC.Types.Int)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GitHub.Data.Name.Name GitHub.Data.Definitions.Owner)
                   (ww4 :: GitHub.Data.Name.Name GitHub.Data.Repos.Repo)
                   (ww5 :: GHC.Base.Maybe GitHub.Data.Repos.Language)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GitHub.Endpoints.Repos.contributors'1
                        w1
                        ww3
                        ww4
                        w3 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left err
                   -> case Common.logError1
                             Crawler.crawlEngine7
                             (GitHub.Data.Definitions.$fExceptionError_$cshow err)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2, GHC.Tuple.() #) }
                   Data.Either.Right coUsers'
                   -> let {
                        $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case coUsers' of v2 { Data.Vector.Vector ipv2 ipv3 ipv4 ->
                          letrec {
                            $wfoldrM_loop :: GHC.Types.SPEC
                                             -> GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                              {- Arity: 3, Strictness: <S,1*U><S,U><S,U>, Inline: [0] -}
                            = \ (w5 :: GHC.Types.SPEC)
                                (ww6 :: GHC.Prim.Int#)
                                (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                              case w5 of ds5 { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# ww6 ipv3) of wild1 {
                                GHC.Types.False
                                -> case w2 of wild2 { GHC.Types.I# x ->
                                   case GHC.Prim.indexArray#
                                          @ GitHub.Data.Repos.Contributor
                                          ipv4
                                          (GHC.Prim.+# ipv2 ww6) of ds2 { Unit# ipv5 ->
                                   case Crawler.$wcrawlUserToRepos
                                          w
                                          w1
                                          (case ipv5 of wild3 {
                                             GitHub.Data.Repos.KnownContributor dt avatarUrl name url dt1 _gravatarid
                                             -> name
                                                  `cast`
                                                (GitHub.Data.Name.N:Name[0]
                                                     <GitHub.Data.Definitions.User>_P)
                                             GitHub.Data.Repos.AnonymousContributor dt ds4
                                             -> case Data.Maybe.fromJust1
                                                ret_ty Data.Text.Internal.Text
                                                of {} })
                                          (GHC.Prim.-# x 1#)
                                          w6 of ds4 { (#,#) ipv6 ipv7 ->
                                   $wfoldrM_loop GHC.Types.SPEC (GHC.Prim.+# ww6 1#) ipv6 } } }
                                GHC.Types.True -> (# w6, GHC.Tuple.() #) } }
                          } in
                          $wfoldrM_loop GHC.Types.SPEC 0# w4 }
                      } in
                      case ww5 of wild1 {
                        GHC.Base.Nothing
                        -> case Common.logAction1
                                  Crawler.crawlEngine7
                                  Crawler.crawlRepoToContributors2
                                  (GHC.Types.[] @ GHC.Types.Char)
                                  ipv of ds2 { (#,#) ipv2 ipv3 ->
                           $w$j ipv2 }
                        GHC.Base.Just lang
                        -> case coUsers' of v2 { Data.Vector.Vector ipv2 ipv3 ipv4 ->
                           let {
                             ds :: Data.Text.Internal.Text = Data.Text.Internal.Text ww ww1 ww2
                           } in
                           letrec {
                             $wfoldrM_loop :: GHC.Types.SPEC
                                              -> GHC.Prim.Int#
                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                              -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                               {- Arity: 3, Strictness: <S,1*U><S,U><S,U>, Inline: [0] -}
                             = \ (w4 :: GHC.Types.SPEC)
                                 (ww6 :: GHC.Prim.Int#)
                                 (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                               case w4 of ds5 { DEFAULT ->
                               case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.>=# ww6 ipv3) of wild2 {
                                 GHC.Types.False
                                 -> case GHC.Prim.indexArray#
                                           @ GitHub.Data.Repos.Contributor
                                           ipv4
                                           (GHC.Prim.+# ipv2 ww6) of ds2 { Unit# ipv5 ->
                                    case Crawler.crawlOnContributor1
                                           w
                                           w1
                                           ds
                                           lang `cast` (GitHub.Data.Repos.N:Language[0])
                                           ipv5
                                           w5 of ds4 { (#,#) ipv6 ipv7 ->
                                    $wfoldrM_loop GHC.Types.SPEC (GHC.Prim.+# ww6 1#) ipv6 } }
                                 GHC.Types.True -> (# w5, GHC.Tuple.() #) } }
                           } in
                           case $wfoldrM_loop
                                  GHC.Types.SPEC
                                  0#
                                  ipv of ds2 { (#,#) ipv5 ipv6 ->
                           $w$j ipv5 } } } } }) -}
b7ffd5f0bf492083f44f6435cc5eed0b
  $wcrawlUserToRepos ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U(U(U))><L,U><L,U(U,U,U)><S,U><S,U>,
     Inline: [0] -}
57c312c26745a103e6418dacea62f9ab
  $wgo ::
    [[Data.Bson.Field]] -> (# GHC.Base.String, GHC.Types.Bool #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
7a175bd6f84b6f27bf651080f1f7b68a
  $winitCrawler ::
    GHC.Base.String
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr Common.Response #)
  {- Arity: 3, Strictness: <L,U><L,U(U)><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Int)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Common.logAction1
                        Crawler.crawlEngine7
                        Crawler.crawlerApp52
                        Crawler.crawlerApp51
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Crawler.$wupsertCrawl
                        ww
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.atomically#
                        @ Crawler.LookupMap
                        Crawler.crawlerApp50
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case Crawler.$wstartCrawl
                        ww
                        ww1
                        ipv5
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6, Crawler.crawlerApp45 #) } } } }) -}
33cdeb8b17037739869833bd3c4c84c0
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
fecfec0c14dfe1f9dde7cf955fc43c5c
  $wouter1 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
9dc4ff74fc741e2c8427e5e121323bdd
  $wouter2 ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
3fae4d27406138bcb853f0336a71e896
  $wpoly_go10 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Map.Base.Map Data.Text.Internal.Text a
    -> GHC.Base.Maybe a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,1*U>,
     Inline: [0] -}
9e854330aa21016c5f4a5ee2160adbe2
  $wstartCrawl ::
    GHC.Base.String
    -> GHC.Types.Int
    -> Crawler.LookupMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,U><L,U(U)><L,U(U(U))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Int)
                   (w :: Crawler.LookupMap)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Crawler.crawlerApp48 ww w1 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.fork#
                        @ (GHC.Types.IO ())
                        (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.catch#
                           @ ()
                           @ GHC.Exception.SomeException
                           (\ (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case ww1 of ww2 { GHC.Types.I# ww3 ->
                            Crawler.$wcrawlEngine
                              w
                              (case GHC.Magic.runRW#
                                      @ 'GHC.Types.PtrRepLifted
                                      @ Data.Text.Internal.Text
                                      (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                       case GHC.Prim.newByteArray#
                                              @ GHC.Prim.RealWorld
                                              8#
                                              s1 of ds2 { (#,#) ipv2 ipv3 ->
                                       Crawler.$wouter2
                                         (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv3)
                                         Crawler.$fToJSONCrawl4
                                         ww
                                         0#
                                         ipv2 }) of ds2 { (#,#) ipv2 ipv3 ->
                               ipv3 })
                              (case GHC.Base.eqString
                                      ipv1
                                      (GHC.Types.[] @ GHC.Types.Char) of wild {
                                 GHC.Types.False
                                 -> GHC.Base.Just
                                      @ GitHub.Auth.Auth
                                      (GitHub.Auth.OAuth (Data.ByteString.Internal.packChars ipv1))
                                 GHC.Types.True -> GHC.Base.Nothing @ GitHub.Auth.Auth })
                              ww3
                              w2 })
                           GHC.Conc.Sync.childHandler1
                           eta)
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <()>_R))
                        ipv of ds { (#,#) ipv2 ipv3 ->
                 (# ipv2, GHC.Tuple.() #) } }) -}
469685691c76b032219510f2565f190b
  $wupsertCrawl ::
    GHC.Base.String
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Types.Bool)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Common.logDatabase1
                        Crawler.crawlEngine7
                        Crawler.crawlEngine6
                        Crawler.crawlEngine5
                        ww
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww2 { GHC.Types.D# ww3 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww3
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ((Crawler.crawlEngine4
                          Crawler.crawlEngine3
                          (GHC.Types.:
                             @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                [Database.MongoDB.Internal.Protocol.UpdateOption])
                             (GHC.Types.:
                                @ Data.Bson.Field
                                (case Crawler.crawlEngine2 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                 Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList ww) })
                                (GHC.Types.[] @ Data.Bson.Field),
                              Data.Bson.Generic.$w$cgenericToBSON1
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "cName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "cStatus")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Types.Bool))
                                @ ('GHC.Generics.MetaCons
                                     "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                Crawler.$fToBSONCrawl2
                                  `cast`
                                (Sym (Data.Bson.Generic.N:GToBSON[0]
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "cName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "cStatus")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 GHC.Types.Bool)>_N))
                                Crawler.$fToBSONCrawl_$s$fConstructorMetaMetaCons
                                @ GHC.Prim.Any
                                1#
                                (GHC.Generics.:*:
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "cName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "cStatus")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Types.Bool))
                                   @ GHC.Prim.Any
                                   ww
                                     `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <GHC.Base.String>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "cName")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                   ww1
                                     `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <GHC.Types.Bool>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "cStatus")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.Types.Bool>_R) <GHC.Prim.Any>_N)))
                                  `cast`
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "cName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "cStatus")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Types.Bool)>_R) <GHC.Prim.Any>_N),
                              Database.MongoDB.Query.repsert1)
                             (GHC.Types.[]
                                @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                   [Database.MongoDB.Internal.Protocol.UpdateOption]))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.UpdateResult>_N)
                         (Database.MongoDB.Query.MongoContext
                            ipv5
                            Database.MongoDB.Query.master
                            MongoDbConnector.connectToDatabase2))
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.UpdateResult>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6, GHC.Tuple.() #) } } } } } }) -}
58f184683337a19d4e67d90c09d2cda5
  data Crawl
    = Crawl {cName :: GHC.Base.String, cStatus :: GHC.Types.Bool}
273edb93519108dcaa87757332cfd3b8
  data CrawlInfo
    = CrawlInfo {cUserName :: Data.Text.Internal.Text,
                 cAuthToken :: GHC.Base.Maybe GitHub.Auth.Auth,
                 cHops :: GHC.Types.Int}
c7ace10c0e80d03c814e1fc424f6b354
  data LookupMap
    = LookupMap {entries :: GHC.Conc.Sync.TVar
                              (Data.Map.Base.Map Data.Text.Internal.Text GHC.Base.String)}
58f184683337a19d4e67d90c09d2cda5
  axiom Rep_Crawl::
      GHC.Generics.Rep Crawler.Crawl
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Crawl"
               "Crawler"
               "Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Crawl" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "cName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "cStatus")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Types.Bool)))
f9a5e05ec141028f3fc91a7fa106892f
  axiom Rep_Token::
      GHC.Generics.Rep Crawler.Token
        = GHC.Generics.D1
            ('GHC.Generics.MetaData
               "Token"
               "Crawler"
               "Apastron-0.1.0.0-6p4Hh7PW7PxHJPhuB7hN0A"
               'GHC.Types.False)
            (GHC.Generics.C1
               ('GHC.Generics.MetaCons
                  "Token" 'GHC.Generics.PrefixI 'GHC.Types.True)
               (GHC.Generics.S1
                  ('GHC.Generics.MetaSel
                     ('GHC.Base.Just "tName")
                     'GHC.Generics.NoSourceUnpackedness
                     'GHC.Generics.NoSourceStrictness
                     'GHC.Generics.DecidedLazy)
                  (GHC.Generics.Rec0 GHC.Base.String)
                GHC.Generics.:*: GHC.Generics.S1
                                   ('GHC.Generics.MetaSel
                                      ('GHC.Base.Just "tValue")
                                      'GHC.Generics.NoSourceUnpackedness
                                      'GHC.Generics.NoSourceStrictness
                                      'GHC.Generics.DecidedLazy)
                                   (GHC.Generics.Rec0 GHC.Base.String)))
f9a5e05ec141028f3fc91a7fa106892f
  data Token
    = Token {tName :: GHC.Base.String, tValue :: GHC.Base.String}
ef76ecfe94405a1efd5487e25b205095
  addLookup ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GHC.Base.String
    -> GHC.Conc.Sync.STM ()
  {- Arity: 4,
     Strictness: <S(S(S)),1*U(1*U(U))><L,1*U(U,U,U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.addLookup1
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
7cf6b466e36be4ce7e6e6a0ec5f18904
  addLookup1 ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(S(S)),1*U(1*U(U))><L,1*U(U,U,U)><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (ds :: Crawler.LookupMap)
                   (a :: Data.Text.Internal.Text)
                   (eta :: GHC.Base.String)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Crawler.LookupMap ds1 ->
                 case ds1 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map Data.Text.Internal.Text GHC.Base.String)
                        tvar#
                        eta1 of ds2 { (#,#) ipv ipv1 ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map Data.Text.Internal.Text GHC.Base.String)
                        tvar#
                        (Crawler.$sinsert_$sgo10 @ [GHC.Types.Char] a eta ipv1)
                        ipv of s2# { DEFAULT ->
                 (# s2#, GHC.Tuple.() #) } } } }) -}
b1746dab6012aeba4dbad538d6d561a5
  cAuthToken :: Crawler.CrawlInfo -> GHC.Base.Maybe GitHub.Auth.Auth
  RecSel Left Crawler.CrawlInfo
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Crawler.CrawlInfo) ->
                 case ds of wild { Crawler.CrawlInfo ds1 ds2 ds3 -> ds2 }) -}
df429e206dd0b36625e3f8faf13e4be5
  cHops :: Crawler.CrawlInfo -> GHC.Types.Int
  RecSel Left Crawler.CrawlInfo
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Crawler.CrawlInfo) ->
                 case ds of wild { Crawler.CrawlInfo ds1 ds2 ds3 -> ds3 }) -}
1eb6f2132d1b297a52fb7af348771c23
  cName :: Crawler.Crawl -> GHC.Base.String
  RecSel Left Crawler.Crawl
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Crawler.Crawl) ->
                 case ds of wild { Crawler.Crawl ds1 ds2 -> ds1 }) -}
bd415cc3ed9b7a0445142f1f9bbb6e3a
  cStatus :: Crawler.Crawl -> GHC.Types.Bool
  RecSel Left Crawler.Crawl
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Crawler.Crawl) ->
                 case ds of wild { Crawler.Crawl ds1 ds2 -> ds2 }) -}
3900de4e4292bd6b53dd49957d72a2a8
  cUserName :: Crawler.CrawlInfo -> Data.Text.Internal.Text
  RecSel Left Crawler.CrawlInfo
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Crawler.CrawlInfo) ->
                 case ds of wild { Crawler.CrawlInfo ds1 ds2 ds3 -> ds1 }) -}
05ddead8cefdc36751b11e534b741ff0
  crawlContributorToUser ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> GHC.Types.Int
    -> GitHub.Data.Repos.Contributor
    -> GHC.Types.IO ()
  {- Arity: 5, Strictness: <L,U(U(U))><L,U><S(S),1*U(U)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlContributorToUser1
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <GHC.Base.Maybe GitHub.Auth.Auth>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GitHub.Data.Repos.Contributor>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
6a19ea218cf637bdd7c73271593d766a
  crawlContributorToUser1 ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> GHC.Types.Int
    -> GitHub.Data.Repos.Contributor
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U(U(U))><L,U><S(S),1*U(U)><L,1*U><S,U>,
     Unfolding: InlineRule (5, True, False)
                (\ (lm :: Crawler.LookupMap)
                   (a :: GHC.Base.Maybe GitHub.Auth.Auth)
                   (hops :: GHC.Types.Int)
                   (c :: GitHub.Data.Repos.Contributor)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case hops of wild { GHC.Types.I# x ->
                 Crawler.crawlContributorToUser2
                   lm
                   a
                   (case c of wild1 {
                      GitHub.Data.Repos.KnownContributor dt avatarUrl name url dt1 _gravatarid
                      -> name
                           `cast`
                         (GitHub.Data.Name.N:Name[0] <GitHub.Data.Definitions.User>_P)
                      GitHub.Data.Repos.AnonymousContributor dt ds1
                      -> case Data.Maybe.fromJust1
                         ret_ty Data.Text.Internal.Text
                         of {} })
                   (GHC.Types.I# (GHC.Prim.-# x 1#))
                   eta }) -}
e20874c5e5cf9178d6699f79b61352b3
  crawlContributorToUser2 ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> Data.Text.Internal.Text
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U))><L,U><L,U(U,U,U)><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Crawler.LookupMap)
                   (w1 :: GHC.Base.Maybe GitHub.Auth.Auth)
                   (w2 :: Data.Text.Internal.Text)
                   (w3 :: GHC.Types.Int)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w3 of ww { GHC.Types.I# ww1 ->
                 Crawler.$wcrawlUserToRepos w w1 w2 ww1 w4 }) -}
94cc8df04b9e60817808a4c9e2957e6b
  crawlEngine ::
    Crawler.LookupMap -> Crawler.CrawlInfo -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <L,U(U(U))><S(LLS(S)),1*U(U(U,U,U),U,1*U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlEngine1
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <Crawler.CrawlInfo>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ef4729f20bc94825bfc6700911dc6224
  crawlEngine1 ::
    Crawler.LookupMap
    -> Crawler.CrawlInfo
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <L,U(U(U))><S(LLS(S)),1*U(U(U,U,U),U,1*U(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Crawler.LookupMap)
                   (w1 :: Crawler.CrawlInfo)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Crawler.CrawlInfo ww1 ww2 ww3 ->
                 case ww3 of ww4 { GHC.Types.I# ww5 ->
                 Crawler.$wcrawlEngine w ww1 ww2 ww5 w2 } }) -}
5f2d88571cdc5171aa771203a431a72c
  crawlEngine10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "find"#) -}
eb5dbdda9f256081df5fb98965a2eb2b
  crawlEngine2 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "cName"#) -}
41629b609597853d42ac18e5fb29b2cf
  crawlEngine3 :: Database.MongoDB.Query.Collection
  {- Unfolding: (Data.Text.Show.unpackCString# "UserCrawlDb"#) -}
f4cd257300d9ab17584fe266ad4df3c1
  crawlEngine4 ::
    Database.MongoDB.Query.Collection
    -> [(Database.MongoDB.Query.Selector, Data.Bson.Document,
         [Database.MongoDB.Internal.Protocol.UpdateOption])]
    -> Database.MongoDB.Query.Action
         GHC.Types.IO Database.MongoDB.Query.UpdateResult
  {- Unfolding: (Database.MongoDB.Query.update'
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   GHC.Types.True) -}
614b6077727f8906497c0dffb40104dd
  crawlEngine5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "upsert"#) -}
f4330fa70b02527243afdd3ed7b35626
  crawlEngine6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UserCrawlDb"#) -}
2cfed85f6473f91f63c9e51bd3b6e4f2
  crawlEngine7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Crawler"#) -}
95e940891742db8ee8837b67f286737f
  crawlEngine8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Stopped"#) -}
b004853ef43dca6c2ae6e5ebd8fd7fb9
  crawlEngine9 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Crawler.Crawl #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (u :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Common.logDatabase1
                        Crawler.crawlEngine7
                        Crawler.crawlEngine6
                        Crawler.crawlEngine10
                        u
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case (Database.MongoDB.Query.$wfind
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (GHC.Types.[] @ Database.MongoDB.Internal.Protocol.QueryOption)
                         (Database.MongoDB.Query.Select
                            (GHC.Types.:
                               @ Data.Bson.Field
                               (case Crawler.crawlEngine2 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList u) })
                               (GHC.Types.[] @ Data.Bson.Field))
                            Crawler.crawlEngine3)
                         (GHC.Types.[] @ Data.Bson.Field)
                         Database.MongoDB.Query.$fSelectQuery1
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         GHC.Types.False
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((MongoDbConnector.drainCursor_drainCursor'
                          ipv7
                          (GHC.Types.[] @ Data.Bson.Document))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <[Data.Bson.Document]>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Data.Bson.Document]>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 (# ipv8,
                    case Crawler.$wgo ipv9 of ww2 { (#,#) ww3 ww4 ->
                    Crawler.Crawl ww3 ww4 } #) } } } } } } }) -}
e8ebd5b630c60bed54b3b9f632739f38
  crawlOnContributor ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GitHub.Data.Repos.Contributor
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <L,U(U(U))><S,1*U><L,U(U,U,U)><L,U(U,U,U)><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlOnContributor1
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <GHC.Base.Maybe GitHub.Auth.Auth>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <GitHub.Data.Repos.Contributor>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
1f7894cbee0eddf15580ba9f3000063b
  crawlOnContributor1 ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GitHub.Data.Repos.Contributor
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(U(U))><S,1*U><L,U(U,U,U)><L,U(U,U,U)><S,1*U><S,U>,
     Unfolding: (\ (lm :: Crawler.LookupMap)
                   (a :: GHC.Base.Maybe GitHub.Auth.Auth)
                   (repo :: Data.Text.Internal.Text)
                   (lang :: Data.Text.Internal.Text)
                   (contributor :: GitHub.Data.Repos.Contributor)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case contributor of wild {
                   GitHub.Data.Repos.KnownContributor dt ds ds1 ds2 dt1 ds3
                   -> case GitHub.Endpoints.Users.userInfoFor'1
                             a
                             ds1
                             eta of ds4 { (#,#) ipv ipv1 ->
                      let {
                        $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                        = \ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case Boltery.boltCreateFavourite14
                                 `cast`
                               (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                                 w of ds5 { (#,#) ipv2 ipv3 ->
                          case ((Boltery.boltCreateFavourite13
                                   Boltery.boltCypherUserLanguageLink
                                   (Boltery.$sfromList
                                      @ Database.Bolt.Value.Type.Value
                                      (GHC.Types.:
                                         @ (Data.Text.Internal.Text, Database.Bolt.Value.Type.Value)
                                         (Boltery.boltParamsUser12,
                                          Database.Bolt.Value.Type.T
                                            ds1
                                              `cast`
                                            (GitHub.Data.Name.N:Name[0]
                                                 <GitHub.Data.Definitions.User>_P))
                                         (GHC.Types.:
                                            @ (Data.Text.Internal.Text,
                                               Database.Bolt.Value.Type.Value)
                                            (Boltery.boltParamsLanguage1,
                                             Database.Bolt.Value.Type.T lang)
                                            (GHC.Types.[]
                                               @ (Data.Text.Internal.Text,
                                                  Database.Bolt.Value.Type.Value))))))
                                  `cast`
                                (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Database.Bolt.Connection.Type.Pipe>_R
                                     <GHC.Types.IO>_R
                                     <[Database.Bolt.Record.Record]>_N)
                                  ipv3)
                                 `cast`
                               (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                                 ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                          case ipv3 of wild1 { Database.Bolt.Connection.Type.Pipe ds7 ds8 ->
                          case ds7 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                          case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                          case Network.Socket.$wclose
                                 ww1
                                 ww7
                                 ipv4 of ds9 { (#,#) ipv6 ipv7 ->
                          case Boltery.boltCreateFavourite14
                                 `cast`
                               (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                                 ipv6 of ds10 { (#,#) ipv8 ipv9 ->
                          case ((Boltery.boltCreateFavourite13
                                   Boltery.boltCypherUserRepoCollabLink
                                   (Boltery.boltParamsUserRepoCollabLink
                                      ds1
                                        `cast`
                                      (GitHub.Data.Name.N:Name[0] <GitHub.Data.Definitions.User>_P)
                                      repo
                                      (GHC.Types.I# dt)))
                                  `cast`
                                (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <Database.Bolt.Connection.Type.Pipe>_R
                                     <GHC.Types.IO>_R
                                     <[Database.Bolt.Record.Record]>_N)
                                  ipv9)
                                 `cast`
                               (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                                 ipv8 of ds11 { (#,#) ipv10 ipv11 ->
                          case ipv9 of wild2 { Database.Bolt.Connection.Type.Pipe ds12 ds13 ->
                          case ds12 of ww11 { Network.Socket.Types.MkSocket ww12 ww13 ww14 ww15 ww16 ->
                          case ww16 of ww17 { GHC.MVar.MVar ww18 ->
                          case Network.Socket.$wclose
                                 ww12
                                 ww18
                                 ipv10 of ds14 { (#,#) ipv12 ipv13 ->
                          case Crawler.crawlOnContributor9
                                 (case ipv5 of wild3 {
                                    [] -> GHC.Types.True : ds15 ds16 -> GHC.Types.False })
                                 ds1
                                   `cast`
                                 (GitHub.Data.Name.N:Name[0] <GitHub.Data.Definitions.User>_P)
                                 lang
                                 ipv12 of ds15 { (#,#) ipv14 ipv15 ->
                          Crawler.crawlOnContributor9
                            (case ipv11 of wild3 {
                               [] -> GHC.Types.True : ds16 ds17 -> GHC.Types.False })
                            ds1
                              `cast`
                            (GitHub.Data.Name.N:Name[0] <GitHub.Data.Definitions.User>_P)
                            repo
                            ipv14 } } } } } } } } } } } } }
                      } in
                      case ipv1 of wild1 {
                        Data.Either.Left err
                        -> case Common.logError1
                                  Crawler.crawlEngine7
                                  (GitHub.Data.Definitions.$fExceptionError_$cshow err)
                                  ipv of ds5 { (#,#) ipv2 ipv3 ->
                           $w$j ipv2 }
                        Data.Either.Right user
                        -> case Crawler.crawlOnContributor3
                                  lm
                                  user
                                  ipv of ds5 { (#,#) ipv2 ipv3 ->
                           $w$j ipv2 } } }
                   GitHub.Data.Repos.AnonymousContributor ipv ipv1
                   -> case Crawler.crawlOnContributor2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {} }) -}
245e29209ebc1b8fea9a3d4e78458203
  crawlOnContributor10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Stored Link"#) -}
d6e486a78baee6ca1b3448f60a0f8a3c
  crawlOnContributor2 :: GHC.Types.IO ()
  {- Strictness: x -}
09a4c7560aaaa95731a4307cb31e3607
  crawlOnContributor3 ::
    Crawler.LookupMap
    -> GitHub.Data.Definitions.User
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <L,U(U(U))><L,U(U,U(U,U,U),U,A,A,U,A,U,U,A,A,U,U,U,U,U,U,A)><S,U>,
     Unfolding: (\ (lm :: Crawler.LookupMap)
                   (user :: GitHub.Data.Definitions.User)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   name :: Data.Text.Internal.Text
                   = case user of wild { GitHub.Data.Definitions.User dt ds1 ds2 ds3 ds4 dt1 ds5 dt2 dt3 ds6 ds7 ds8 dt4 ds9 ds10 ds11 ds12 ds13 ->
                     ds1
                       `cast`
                     (GitHub.Data.Name.N:Name[0] <GitHub.Data.Definitions.User>_P) }
                 } in
                 case Common.logAction1
                        Crawler.crawlEngine7
                        Crawler.crawlOnContributor8
                        (Data.Text.Show.$fShowText_$cshow name)
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.atomically#
                        @ (GHC.Base.Maybe GHC.Base.String)
                        (Crawler.crawlOnContributor7 lm name)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> case Boltery.boltCreateFavourite14
                             `cast`
                           (GHC.Types.N:IO[0] <Database.Bolt.Connection.Type.Pipe>_R)
                             ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                      case ((Boltery.boltCreateFavourite13
                               Boltery.boltCypherUser
                               (Boltery.boltParamsUser user))
                              `cast`
                            (Control.Monad.Trans.Reader.N:ReaderT[0]
                                 <*>_N
                                 <Database.Bolt.Connection.Type.Pipe>_R
                                 <GHC.Types.IO>_R
                                 <[Database.Bolt.Record.Record]>_N)
                              ipv5)
                             `cast`
                           (GHC.Types.N:IO[0] <[Database.Bolt.Record.Record]>_R)
                             ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                      case ipv5 of wild1 { Database.Bolt.Connection.Type.Pipe ds5 ds6 ->
                      case ds5 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                      case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                      case Network.Socket.$wclose
                             ww1
                             ww7
                             ipv6 of ds7 { (#,#) ipv8 ipv9 ->
                      case Common.logBoolAction1
                             (case ipv7 of wild2 {
                                [] -> GHC.Types.True : ds8 ds9 -> GHC.Types.False })
                             Crawler.crawlEngine7
                             Crawler.crawlOnContributor6
                             (Data.Text.Show.$fShowText_$cshow name)
                             ipv8 of ds8 { (#,#) ipv10 ipv11 ->
                      GHC.Prim.atomically#
                        @ ()
                        (Crawler.addLookup1 lm name Crawler.crawlOnContributor5)
                        ipv10 } } } } } } }
                   GHC.Base.Just u
                   -> Common.logAction1
                        Crawler.crawlEngine7
                        Crawler.crawlOnContributor4
                        (Data.Text.Show.$fShowText_$cshow name)
                        ipv2 } } }) -}
7d39bdf67c1242751c81ddaf7e9b8625
  crawlOnContributor4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Stored:True"#) -}
3f7e1b998a2417801cec4e7895b9a094
  crawlOnContributor5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "User"#) -}
48145aec974349bb253d95af7a6adb0d
  crawlOnContributor6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Stored"#) -}
0f3ca1b660d5477a44836d8879041419
  crawlOnContributor7 ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe GHC.Base.String #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S(S)),1*U(1*U(U))><L,1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Crawler.LookupMap)
                   (t :: Data.Text.Internal.Text)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds of wild { Crawler.LookupMap ds1 ->
                 case ds1 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Data.Map.Base.Map Data.Text.Internal.Text GHC.Base.String)
                        tvar#
                        eta of ds2 { (#,#) ipv ipv1 ->
                 (# ipv, Crawler.$slookup1 @ [GHC.Types.Char] t ipv1 #) } } }) -}
25c3a19ace9e1f40f3e329ceef368cb5
  crawlOnContributor8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UserName"#) -}
90cc2ef51e3bcaf7cb45b6e1e3c5f99c
  crawlOnContributor9 ::
    GHC.Types.Bool
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U><L,1*U(U,U,U)><L,1*U(U,U,U)><S,U>,
     Unfolding: (\ (r :: GHC.Types.Bool)
                   (a :: Data.Text.Internal.Text)
                   (b :: Data.Text.Internal.Text)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Common.logBoolAction1
                   r
                   Crawler.crawlEngine7
                   Crawler.crawlOnContributor10
                   (case Data.Text.Show.$w$cshow a of ww { (#,#) ww1 ww2 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (GHC.Types.: @ GHC.Types.Char ww1 ww2)
                      (GHC.CString.unpackAppendCString#
                         ":"#
                         (case Data.Text.Show.$w$cshow b of ww4 { (#,#) ww5 ww6 ->
                          GHC.Types.: @ GHC.Types.Char ww5 ww6 })) })
                   eta) -}
38eceb441aba0faaa50632dfe7c38a45
  crawlOnLanguage ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GitHub.Data.Repos.Language
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,U(U(U))><L,U(U,U,U)><L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlOnLanguage1
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <GitHub.Data.Repos.Language>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a5d26df2abea4c9edba6eec5af0d2432
  crawlOnLanguage1 ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GitHub.Data.Repos.Language
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U(U(U))><L,U(U,U,U)><L,U(U,U,U)><S,U> -}
4914afe75f61d7c831d831f3231320be
  crawlOnRepo ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GitHub.Data.Repos.Repo
    -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <L,U(U(U))><L,U(U,U,U)><L,U(A,U,U,U(U,U,U),A,U,A,A,A,U,A,U,U,U,U(U,U,A,A,A),U,A,A,U,U,U,U,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlOnRepo1
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <GitHub.Data.Repos.Repo>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
9f64ea94984cf27278bc10886b1a2374
  crawlOnRepo1 ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GitHub.Data.Repos.Repo
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <L,U(U(U))><L,U(U,U,U)><L,U(A,U,U,U(U,U,U),A,U,A,A,A,U,A,U,U,U,U(U,U,A,A,A),U,A,A,U,U,U,U,A,A,A,A,A,A,A)><S,U> -}
c9b3607b5133f02855a2de780b5150d7
  crawlOnUser ::
    Crawler.LookupMap
    -> GitHub.Data.Definitions.User -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <L,U(U(U))><L,U(U,U(U,U,U),U,A,A,U,A,U,U,A,A,U,U,U,U,U,U,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlOnContributor3
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <GitHub.Data.Definitions.User>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
4a2bf2f9469c5ee942d2e0b3559276a6
  crawlRepoToContributors ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> GHC.Types.Int
    -> GitHub.Data.Repos.Repo
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U(U))><S,U><L,U(U)><S(LLLSLLLLLLLLLLSSSLLLLLLLLLLLL),1*U(A,A,A,U(U,U,U),A,A,A,A,A,A,A,A,A,A,U(A,U,A,A,A),U,U,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlRepoToContributors1
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <GHC.Base.Maybe GitHub.Auth.Auth>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GitHub.Data.Repos.Repo>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
0976af97637e95e5570155c9673612ad
  crawlRepoToContributors1 ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> GHC.Types.Int
    -> GitHub.Data.Repos.Repo
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U(U))><S,U><L,U(U)><S(LLLSLLLLLLLLLLSSSLLLLLLLLLLLL),1*U(A,A,A,U(U,U,U),A,A,A,A,A,A,A,A,A,A,U(A,U,A,A,A),U,U,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Crawler.LookupMap)
                   (w1 :: GHC.Base.Maybe GitHub.Auth.Auth)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GitHub.Data.Repos.Repo)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w3 of ww { GitHub.Data.Repos.Repo ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ->
                 case ww4
                        `cast`
                      (GitHub.Data.URL.N:URL[0]) of ww30 { Data.Text.Internal.Text ww31 ww32 ww33 ->
                 case ww15 of ww34 { GitHub.Data.Definitions.SimpleOwner ww35 ww36 ww37 ww38 ww39 ->
                 Crawler.$wcrawlRepoToContributors
                   w
                   w1
                   w2
                   ww31
                   ww32
                   ww33
                   ww36
                   ww16
                   ww17
                   w4 } } }) -}
16eaa18e9cadc972dba87410ba1ad28e
  crawlRepoToContributors2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "End"#) -}
f103bdc9f5efab3895403ba9066c523a
  crawlRepoToLanguage ::
    Crawler.LookupMap -> GitHub.Data.Repos.Repo -> GHC.Types.IO ()
  {- Arity: 3,
     Strictness: <L,U(U(U))><S(LLLSLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,U(U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,U,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlRepoToLanguage1
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <GitHub.Data.Repos.Repo>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ccb31e4c3ab40053620e650f67bef92f
  crawlRepoToLanguage1 ::
    Crawler.LookupMap
    -> GitHub.Data.Repos.Repo
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3,
     Strictness: <L,U(U(U))><S(LLLSLLLLLLLLLLLLSLLLLLLLLLLLL),1*U(A,A,A,U(U,U,U),A,A,A,A,A,A,A,A,A,A,A,A,U,A,A,A,A,A,A,A,A,A,A,A,A)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (lm :: Crawler.LookupMap)
                   (r :: GitHub.Data.Repos.Repo)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case r of wild { GitHub.Data.Repos.Repo ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 dt ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 dt1 ->
                 case ds16 of wild1 {
                   GHC.Base.Nothing -> (# eta, GHC.Tuple.() #)
                   GHC.Base.Just lang
                   -> Crawler.crawlOnLanguage1
                        lm
                        ds3 `cast` (GitHub.Data.URL.N:URL[0])
                        lang
                        eta } }) -}
1ff1c8ab11a8460b25ad16654dc8baad
  crawlUserToRepos ::
    Crawler.LookupMap
    -> GHC.Base.Maybe GitHub.Auth.Auth
    -> Data.Text.Internal.Text
    -> GHC.Types.Int
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U(U))><L,U><L,U(U,U,U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlContributorToUser2
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <GHC.Base.Maybe GitHub.Auth.Auth>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
669679a1b5f0d6372bac85ed502fa6d4
  crawlerApp :: Network.Wai.Application
  {- Arity: 2,
     Unfolding: (Servant.Server.Internal.RoutingApplication.toApplication
                   Crawler.crawlerApp1) -}
c6541ae70dcffb7ab2a10fad8c3b4ec3
  crawlerApp1 ::
    Network.Wai.Internal.Request
    -> (Servant.Server.Internal.RoutingApplication.RouteResult
          Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Network.Wai.Internal.Request)
                   (eta1 :: Servant.Server.Internal.RoutingApplication.RouteResult
                              Network.Wai.Internal.Response
                            -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)[OneShot] ->
                 Servant.Server.Internal.Router.runRouterEnv
                   @ ()
                   Crawler.crawlerApp_r
                   GHC.Tuple.()
                   eta
                   eta1) -}
8a901e87f50d484f12c3f0eb82f70837
  crawlerApp10 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      (Data.Text.Internal.Text, ())
      (Servant.Server.Internal.Server
         (Servant.API.Capture.Capture "t" GHC.Base.String
          Servant.API.Sub.:> Servant.API.Verbs.Get
                               '[Servant.API.ContentTypes.JSON] Common.Response))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.addCapture
                   @ ()
                   @ [GHC.Types.Char]
                   @ (Servant.Server.Internal.Server
                        (Servant.API.Capture.Capture "t" GHC.Base.String
                         Servant.API.Sub.:> Servant.API.Verbs.Get
                                              '[Servant.API.ContentTypes.JSON] Common.Response))
                   @ Data.Text.Internal.Text
                   Crawler.crawlerApp11
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Trans
                           (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                     <*>_N
                                     <"token">_N
                                     <Servant.API.Capture.Capture "u" GHC.Base.String
                                      Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                            "t" GHC.Base.String
                                                          Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                               '[Servant.API.ContentTypes.JSON]
                                                                               Common.Response)>_N
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Server.Internal.ServantErr.ServantErr
                                        GHC.Types.IO>_N))
                           (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                     <*>_N
                                     <"u">_N
                                     <[GHC.Types.Char]>_N
                                     <Servant.API.Capture.Capture "t" GHC.Base.String
                                      Servant.API.Sub.:> Servant.API.Verbs.Get
                                                           '[Servant.API.ContentTypes.JSON]
                                                           Common.Response>_N
                                     <Control.Monad.Trans.Except.ExceptT
                                        Servant.Server.Internal.ServantErr.ServantErr
                                        GHC.Types.IO>_N))))_R
                   Crawler.crawlerApp9) -}
cbf204ad3fc304dd9a0df8cb40281fb8
  crawlerApp11 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("token"
          Servant.API.Sub.:> (Servant.API.Capture.Capture "u" GHC.Base.String
                              Servant.API.Sub.:> (Servant.API.Capture.Capture "t" GHC.Base.String
                                                  Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                       '[Servant.API.ContentTypes.JSON]
                                                                       Common.Response))))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("token"
                         Servant.API.Sub.:> (Servant.API.Capture.Capture "u" GHC.Base.String
                                             Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                   "t" GHC.Base.String
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      Common.Response))))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Crawler.crawlerApp12) -}
5f3c5bce210d8ee22040cd2330aa277d
  crawlerApp12 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("token"
             Servant.API.Sub.:> (Servant.API.Capture.Capture "u" GHC.Base.String
                                 Servant.API.Sub.:> (Servant.API.Capture.Capture "t" GHC.Base.String
                                                     Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                          '[Servant.API.ContentTypes.JSON]
                                                                          Common.Response))))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Crawler.crawlerApp13) -}
f15a192be430c4305f49f396b83df2a3
  crawlerApp13 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("token"
          Servant.API.Sub.:> (Servant.API.Capture.Capture "u" GHC.Base.String
                              Servant.API.Sub.:> (Servant.API.Capture.Capture "t" GHC.Base.String
                                                  Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                       '[Servant.API.ContentTypes.JSON]
                                                                       Common.Response))))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("token"
                         Servant.API.Sub.:> (Servant.API.Capture.Capture "u" GHC.Base.String
                                             Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                   "t" GHC.Base.String
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      Common.Response))))
                   Crawler.crawlerApp14
                     `cast`
                   (Trans
                        (<[GHC.Types.Char]>_R
                         ->_R Trans
                                  (<[GHC.Types.Char]>_R
                                   ->_R Trans
                                            (Sym (GHC.Types.N:IO[0]
                                                      <Data.Either.Either
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         Common.Response>_R))
                                            (Trans
                                                 (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                           <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                           <GHC.Types.IO>_R
                                                           <Common.Response>_N))
                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                <Network.HTTP.Types.Method.StdMethod>_N
                                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                                <Common.Response>_N
                                                                <'Network.HTTP.Types.Method.GET>_N
                                                                <200>_N
                                                                <Control.Monad.Trans.Except.ExceptT
                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                   GHC.Types.IO>_N)))))
                                  (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                                 <*>_N
                                                 <"t">_N
                                                 <[GHC.Types.Char]>_N
                                                 <Servant.API.Verbs.Verb
                                                    'Network.HTTP.Types.Method.GET
                                                    200
                                                    '[Servant.API.ContentTypes.JSON]
                                                    Common.Response>_N
                                                 <Control.Monad.Trans.Except.ExceptT
                                                    Servant.Server.Internal.ServantErr.ServantErr
                                                    GHC.Types.IO>_N))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                            <*>_N
                                            <"u">_N
                                            <[GHC.Types.Char]>_N
                                            <Servant.API.Capture.Capture "t" GHC.Base.String
                                             Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  Common.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"token">_N
                                            <Servant.API.Capture.Capture "u" GHC.Base.String
                                             Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                   "t" GHC.Base.String
                                                                 Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                      Common.Response)>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
38a7fd7896a9537dd064a9f24430cdf8
  crawlerApp14 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr Common.Response #)
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: (\ (u :: GHC.Base.String)
                   (t :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Common.logDatabase1
                        Crawler.crawlEngine7
                        Crawler.crawlerApp20
                        Crawler.crawlEngine5
                        (GHC.Base.++
                           @ GHC.Types.Char
                           u
                           (GHC.CString.unpackAppendCString# ":"# t))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ((Crawler.crawlEngine4
                          Crawler.crawlerApp19
                          (GHC.Types.:
                             @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                [Database.MongoDB.Internal.Protocol.UpdateOption])
                             (GHC.Types.:
                                @ Data.Bson.Field
                                (case Crawler.crawlerApp18 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                 Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList u) })
                                (GHC.Types.[] @ Data.Bson.Field),
                              Data.Bson.Generic.$w$cgenericToBSON1
                                @ (GHC.Generics.S1
                                     ('GHC.Generics.MetaSel
                                        ('GHC.Base.Just "tName")
                                        'GHC.Generics.NoSourceUnpackedness
                                        'GHC.Generics.NoSourceStrictness
                                        'GHC.Generics.DecidedLazy)
                                     (GHC.Generics.Rec0 GHC.Base.String)
                                   GHC.Generics.:*: GHC.Generics.S1
                                                      ('GHC.Generics.MetaSel
                                                         ('GHC.Base.Just "tValue")
                                                         'GHC.Generics.NoSourceUnpackedness
                                                         'GHC.Generics.NoSourceStrictness
                                                         'GHC.Generics.DecidedLazy)
                                                      (GHC.Generics.Rec0 GHC.Base.String))
                                @ ('GHC.Generics.MetaCons
                                     "Token" 'GHC.Generics.PrefixI 'GHC.Types.True)
                                Crawler.$fToBSONToken2
                                  `cast`
                                (Sym (Data.Bson.Generic.N:GToBSON[0]
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.Rec0 GHC.Base.String)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "tValue")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.Rec0
                                                                 GHC.Base.String)>_N))
                                Crawler.$fToBSONToken_$s$fConstructorMetaMetaCons
                                @ GHC.Prim.Any
                                1#
                                (GHC.Generics.:*:
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "tName")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                   @ (GHC.Generics.M1
                                        GHC.Generics.S
                                        ('GHC.Generics.MetaSel
                                           ('GHC.Base.Just "tValue")
                                           'GHC.Generics.NoSourceUnpackedness
                                           'GHC.Generics.NoSourceStrictness
                                           'GHC.Generics.DecidedLazy)
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                                   @ GHC.Prim.Any
                                   u `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <GHC.Base.String>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "tName")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.Base.String>_R) <GHC.Prim.Any>_N))
                                   t `cast`
                                   (Trans
                                        (Sym (GHC.Generics.N:K1[0]
                                                  <GHC.Generics.R>_P
                                                  <GHC.Base.String>_R
                                                  <GHC.Prim.Any>_P))
                                        (Sym (GHC.Generics.N:M1[0]
                                                  <GHC.Generics.S>_P
                                                  <'GHC.Generics.MetaSel
                                                     ('GHC.Base.Just "tValue")
                                                     'GHC.Generics.NoSourceUnpackedness
                                                     'GHC.Generics.NoSourceStrictness
                                                     'GHC.Generics.DecidedLazy>_P
                                                  <GHC.Generics.K1
                                                     GHC.Generics.R
                                                     GHC.Base.String>_R) <GHC.Prim.Any>_N)))
                                  `cast`
                                (Sym (GHC.Generics.N:M1[0]
                                          <GHC.Generics.C>_P
                                          <'GHC.Generics.MetaCons
                                             "Token" 'GHC.Generics.PrefixI 'GHC.Types.True>_P
                                          <GHC.Generics.M1
                                             GHC.Generics.S
                                             ('GHC.Generics.MetaSel
                                                ('GHC.Base.Just "tName")
                                                'GHC.Generics.NoSourceUnpackedness
                                                'GHC.Generics.NoSourceStrictness
                                                'GHC.Generics.DecidedLazy)
                                             (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                           GHC.Generics.:*: GHC.Generics.M1
                                                              GHC.Generics.S
                                                              ('GHC.Generics.MetaSel
                                                                 ('GHC.Base.Just "tValue")
                                                                 'GHC.Generics.NoSourceUnpackedness
                                                                 'GHC.Generics.NoSourceStrictness
                                                                 'GHC.Generics.DecidedLazy)
                                                              (GHC.Generics.K1
                                                                 GHC.Generics.R
                                                                 GHC.Base.String)>_R) <GHC.Prim.Any>_N),
                              Database.MongoDB.Query.repsert1)
                             (GHC.Types.[]
                                @ (Database.MongoDB.Query.Selector, Data.Bson.Document,
                                   [Database.MongoDB.Internal.Protocol.UpdateOption]))))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <Database.MongoDB.Query.UpdateResult>_N)
                         (Database.MongoDB.Query.MongoContext
                            ipv5
                            Database.MongoDB.Query.master
                            MongoDbConnector.connectToDatabase2))
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.UpdateResult>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 (# ipv6, Crawler.crawlerApp15 #) } } } } } }) -}
797a3f8fc1325e4a65dd09e4fee46015
  crawlerApp15 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr Common.Response
  {- Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ Common.Response
                   Crawler.crawlerApp16) -}
bfd4984f96fe2948ad5635b78830bd60
  crawlerApp16 :: Common.Response
  {- Strictness: m,
     Unfolding: (Common.Response Crawler.crawlerApp17) -}
080c0ea91f2c530117e3c448e15605d8
  crawlerApp17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Token Stored"#) -}
a103cfc605f848073f2b122ad0c8f9c7
  crawlerApp18 :: Data.Bson.Label
  {- Unfolding: (Data.Text.Show.unpackCString# "tName"#) -}
1766d79a41ef186faa6cf8576f64e526
  crawlerApp19 :: Database.MongoDB.Query.Collection
  {- Unfolding: (Data.Text.Show.unpackCString# "TokenCrawlDb"#) -}
625794a6cdaa18fe2b41010abaf9f108
  crawlerApp2 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Crawler.crawlerApp25
                   Crawler.crawlerApp3) -}
54dd80316daa5976c4a3f73d584263ec
  crawlerApp20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TokenCrawlDb"#) -}
972fcd9f6fac90f3bd9da2c87397c4bf
  crawlerApp21 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      (Data.Text.Internal.Text, (Data.Text.Internal.Text, ()))
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            Common.Response))
    -> Servant.Server.Internal.Router.Router
         (Data.Text.Internal.Text, (Data.Text.Internal.Text, ()))
  {- Unfolding: (Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ Common.Response
                   @ 'Network.HTTP.Types.Method.GET
                   @ 200
                   @ '[]
                   Crawler.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodGET_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.GET>_N))
                   Crawler.crawlerApp22
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ (Data.Text.Internal.Text, (Data.Text.Internal.Text, ()))
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           Common.Response))) -}
0acdc176c68d41092a8a3e162b32c20e
  crawlerApp22 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (200) -}
e0e5ec81786e6cfc928a7a4187ad1df4
  crawlerApp23 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Crawler.crawlerApp24
                   0#
                   ipv }) -}
00eca0c173b879ae747fdfd23e2ae791
  crawlerApp24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "token"#) -}
67811234c11abd49ec6d959ff50fc3f1
  crawlerApp25 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Crawler.crawlerApp26
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
d2bc2674980daed310b51e2788195ac2
  crawlerApp26 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Crawler.crawlerApp36 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Crawler.crawlerApp27
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
8c06e17a8f1f7160d6163371b656368c
  crawlerApp27 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ Common.User
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        Common.Response)
                   @ '[]
                   Crawler.crawlerApp35
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <Common.User>_N))
                   Crawler.crawlerApp34
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                Common.Response>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] Common.User
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              Common.Response))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Crawler.crawlerApp28
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"kill">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] Common.User
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      Common.Response>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
d92889cf96fab1f3c6dcf0a7577dae7c
  crawlerApp28 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("kill"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] Common.User
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   Common.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("kill"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] Common.User
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  Common.Response)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Crawler.crawlerApp29) -}
687c0811e61dc6132c5b7305de6b09da
  crawlerApp29 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("kill"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] Common.User
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      Common.Response)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Crawler.crawlerApp30) -}
ac1ee0680b1b8fbf60ba4ce9d256a5ea
  crawlerApp3 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Crawler.crawlerApp4
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
5d32689533c83edc20807d95834d8eff
  crawlerApp30 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("kill"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] Common.User
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   Common.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("kill"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] Common.User
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  Common.Response)))
                   Crawler.crawlerApp31
                     `cast`
                   (Trans
                        (<Common.User>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               Common.Response>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <Common.Response>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <Common.Response>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <Common.User>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               Common.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"kill">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] Common.User
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  Common.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
eba8c338f2a5860ed8e96cc9fd889818
  crawlerApp31 ::
    Common.User
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr Common.Response #)
  {- Arity: 2, Strictness: <L,1*U(1*U,A,A)><S,U>,
     Unfolding: (\ (u :: Common.User)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   c :: GHC.Base.String
                   = case u of wild { Common.User ds1 ds2 ds3 -> ds1 }
                 } in
                 case Crawler.crawlEngine9 c s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Crawler.Crawl ds ds2 ->
                 case ds2 of wild1 {
                   GHC.Types.False -> (# ipv, Crawler.crawlerApp32 #)
                   GHC.Types.True
                   -> case Crawler.$wupsertCrawl
                             c
                             GHC.Types.False
                             ipv of ds3 { (#,#) ipv2 ipv3 ->
                      (# ipv2, Crawler.crawlerApp32 #) } } } }) -}
d58dc7a0814e97057047d391a4d30323
  crawlerApp32 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr Common.Response
  {- Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ Common.Response
                   Crawler.crawlerApp33) -}
5ec28d48e4bb81ae2142fa4037628379
  crawlerApp33 :: Common.Response
  {- Strictness: m,
     Unfolding: (Common.Response Crawler.crawlEngine8) -}
36873ccaf9c27d2a7ca7bf7d21589b5a
  crawlerApp34 ::
    Data.Proxy.Proxy
      (Servant.API.Verbs.Verb
         'Network.HTTP.Types.Method.POST
         200
         '[Servant.API.ContentTypes.JSON]
         Common.Response)
    -> Servant.Server.Internal.Context.Context '[]
    -> Servant.Server.Internal.RoutingApplication.Delayed
         env
         (Servant.Server.Internal.Server
            (Servant.API.Verbs.Verb
               'Network.HTTP.Types.Method.POST
               200
               '[Servant.API.ContentTypes.JSON]
               Common.Response))
    -> Servant.Server.Internal.Router.Router env
  {- Arity: 2, Strictness: <S,1*H><L,A>,
     Unfolding: InlineRule (2, True, False)
                (\ @ env
                   (w3 :: Data.Proxy.Proxy
                            (Servant.API.Verbs.Verb
                               'Network.HTTP.Types.Method.POST
                               200
                               '[Servant.API.ContentTypes.JSON]
                               Common.Response))
                   (w4 :: Servant.Server.Internal.Context.Context '[]) ->
                 case w3 of w5 { Data.Proxy.Proxy ->
                 Servant.Server.Internal.$w$croute8
                   @ Network.HTTP.Types.Method.StdMethod
                   @ '[Servant.API.ContentTypes.JSON]
                   @ Common.Response
                   @ 'Network.HTTP.Types.Method.POST
                   @ 200
                   @ '[]
                   Crawler.$s$fAllCTRender:a
                   Servant.API.Verbs.$fReflectMethodStdMethodPOST_$creflectMethod
                     `cast`
                   (Sym (Servant.API.Verbs.N:ReflectMethod[0]
                             <Network.HTTP.Types.Method.StdMethod>_N
                             <'Network.HTTP.Types.Method.POST>_N))
                   Crawler.crawlerApp22
                     `cast`
                   (Trans
                        (Sym (GHC.TypeLits.N:SNat[0] <200>_P))
                        (Sym (GHC.TypeLits.N:KnownNat[0]) <200>_N))
                   @ env
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.POST
                           200
                           '[Servant.API.ContentTypes.JSON]
                           Common.Response)) }) -}
cfc63b66167818273d70087294eefff5
  crawlerApp35 ::
    Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON]
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Data.ByteString.Lazy.Internal.ByteString
    -> GHC.Base.Maybe (Data.Either.Either GHC.Base.String Common.User)
  {- Arity: 3, Strictness: <L,A><L,1*U><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.Proxy.Proxy '[Servant.API.ContentTypes.JSON])
                   (w2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (w3 :: Data.ByteString.Lazy.Internal.ByteString) ->
                 Servant.API.ContentTypes.$w$chandleCTypeH
                   @ '[Servant.API.ContentTypes.JSON]
                   @ Common.User
                   Crawler.$s$fAllMimeUnrender:a
                   w2
                   w3) -}
96bd3208b86adc87afcb9cbd7ae4dba4
  crawlerApp36 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Crawler.crawlerApp37
                   0#
                   ipv }) -}
9a42e4b854aaff4eebc2cbb40e25bed6
  crawlerApp37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "kill"#) -}
260e26527761085cd24f32bf8838c366
  crawlerApp38 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.StaticRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Crawler.crawlerApp39
                   (GHC.Types.[]
                      @ (()
                         -> Servant.Server.Internal.RoutingApplication.RoutingApplication))) -}
753496e208ca9edc8a3f5af1088b5a7b
  crawlerApp39 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Crawler.crawlerApp53 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Crawler.crawlerApp40
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
8d74a68daa9433ad8af5b98954902268
  crawlerApp4 ::
    Data.Map.Base.Map
      Data.Text.Internal.Text
      (Servant.Server.Internal.Router.Router'
         () Servant.Server.Internal.RoutingApplication.RoutingApplication)
  {- Unfolding: (case GHC.Magic.runRW#
                        @ 'GHC.Types.PtrRepLifted
                        @ Data.Text.Internal.Text
                        Crawler.crawlerApp23 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of dt { Data.Text.Internal.Text ipv2 ipv3 ipv4 ->
                 Data.Map.Base.Bin
                   @ Data.Text.Internal.Text
                   @ (Servant.Server.Internal.Router.Router'
                        () Servant.Server.Internal.RoutingApplication.RoutingApplication)
                   1#
                   dt
                   Crawler.crawlerApp5
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           () Servant.Server.Internal.RoutingApplication.RoutingApplication))
                   (Data.Map.Base.Tip
                      @ Data.Text.Internal.Text
                      @ (Servant.Server.Internal.Router.Router'
                           ()
                           Servant.Server.Internal.RoutingApplication.RoutingApplication)) } }) -}
386c10ce7eb8ad5c2487113440004577
  crawlerApp40 :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.$w$croute2
                   @ *
                   @ '[Servant.API.ContentTypes.JSON]
                   @ Common.User
                   @ (Servant.API.Verbs.Verb
                        'Network.HTTP.Types.Method.POST
                        200
                        '[Servant.API.ContentTypes.JSON]
                        Common.Response)
                   @ '[]
                   Crawler.crawlerApp35
                     `cast`
                   (Sym (Servant.API.ContentTypes.N:AllCTUnrender[0]
                             <'[Servant.API.ContentTypes.JSON]>_N <Common.User>_N))
                   Crawler.crawlerApp34
                     `cast`
                   (Sym (Servant.Server.Internal.N:HasServer[0]
                             <*>_N
                             <Servant.API.Verbs.Verb
                                'Network.HTTP.Types.Method.POST
                                200
                                '[Servant.API.ContentTypes.JSON]
                                Common.Response>_N
                             <'[]>_N))
                   @ ()
                   (Data.Proxy.Proxy
                      @ *
                      @ (Servant.API.ReqBody.ReqBody
                           '[Servant.API.ContentTypes.JSON] Common.User
                         Servant.API.Sub.:> Servant.API.Verbs.Verb
                                              'Network.HTTP.Types.Method.POST
                                              200
                                              '[Servant.API.ContentTypes.JSON]
                                              Common.Response))
                   Servant.Server.Internal.Context.$WEmptyContext
                   Crawler.crawlerApp41
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <()>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                <*>_N
                                <"init">_N
                                <Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] Common.User
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      Common.Response>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R) -}
497ad73560af8536da6c718947d689da
  crawlerApp41 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      ()
      (Servant.Server.Internal.Server
         ("init"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] Common.User
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   Common.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Delayed
                   @ ()
                   @ (Servant.Server.Internal.Server
                        ("init"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] Common.User
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  Common.Response)))
                   @ ()
                   @ ()
                   @ ()
                   (Servant.Server.Internal.RoutingApplication.emptyDelayed2 @ ())
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Network.Wai.Internal.Request>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            <Servant.Server.Internal.RoutingApplication.RouteResult
                                               ()>_R))
                             (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                       <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Servant.Server.Internal.RoutingApplication.emptyDelayed1
                     `cast`
                   (Trans
                        (<Network.Wai.Internal.Request>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Servant.Server.Internal.RoutingApplication.RouteResult
                                          ()>_R))
                        (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                  <()>_R)))
                   Crawler.crawlerApp42) -}
6552da56d70b7098479c98faa29f06eb
  crawlerApp42 ::
    ()
    -> ()
    -> ()
    -> Network.Wai.Internal.Request
    -> Servant.Server.Internal.RoutingApplication.RouteResult
         (Servant.Server.Internal.Server
            ("init"
             Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                   '[Servant.API.ContentTypes.JSON] Common.User
                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                      '[Servant.API.ContentTypes.JSON]
                                                      Common.Response)))
  {- Arity: 4,
     Unfolding: (\ (c :: ())
                   (a1 :: ())
                   (b1 :: ())
                   (req :: Network.Wai.Internal.Request) ->
                 Crawler.crawlerApp43) -}
1850f4b141a514adba749557f2acf8ee
  crawlerApp43 ::
    Servant.Server.Internal.RoutingApplication.RouteResult
      (Servant.Server.Internal.Server
         ("init"
          Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                '[Servant.API.ContentTypes.JSON] Common.User
                              Servant.API.Sub.:> Servant.API.Verbs.Post
                                                   '[Servant.API.ContentTypes.JSON]
                                                   Common.Response)))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.Route
                   @ (Servant.Server.Internal.Server
                        ("init"
                         Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] Common.User
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  Common.Response)))
                   Crawler.crawlerApp44
                     `cast`
                   (Trans
                        (<Common.User>_R
                         ->_R Trans
                                  (Sym (GHC.Types.N:IO[0]
                                            <Data.Either.Either
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               Common.Response>_R))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                 <Servant.Server.Internal.ServantErr.ServantErr>_N
                                                 <GHC.Types.IO>_R
                                                 <Common.Response>_N))
                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                      <Network.HTTP.Types.Method.StdMethod>_N
                                                      <'[Servant.API.ContentTypes.JSON]>_N
                                                      <Common.Response>_N
                                                      <'Network.HTTP.Types.Method.POST>_N
                                                      <200>_N
                                                      <Control.Monad.Trans.Except.ExceptT
                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                         GHC.Types.IO>_N)))))
                        (Trans
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                            <*>_N
                                            <'[Servant.API.ContentTypes.JSON]>_N
                                            <Common.User>_N
                                            <Servant.API.Verbs.Verb
                                               'Network.HTTP.Types.Method.POST
                                               200
                                               '[Servant.API.ContentTypes.JSON]
                                               Common.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))
                             (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                            <*>_N
                                            <"init">_N
                                            <Servant.API.ReqBody.ReqBody
                                               '[Servant.API.ContentTypes.JSON] Common.User
                                             Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                  '[Servant.API.ContentTypes.JSON]
                                                                  Common.Response>_N
                                            <Control.Monad.Trans.Except.ExceptT
                                               Servant.Server.Internal.ServantErr.ServantErr
                                               GHC.Types.IO>_N)))))) -}
73dcd917f6ee31a61d1a200817559063
  crawlerApp44 ::
    Common.User
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Servant.Server.Internal.ServantErr.ServantErr Common.Response #)
  {- Arity: 2, Strictness: <S,1*U(U,A,U(U))><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Common.User)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Common.User ww1 ww2 ww3 ->
                 Crawler.$winitCrawler ww1 ww3 w1 }) -}
bd80beb2ac39e483ab976286488fd507
  crawlerApp45 ::
    Data.Either.Either
      Servant.Server.Internal.ServantErr.ServantErr Common.Response
  {- Unfolding: (Data.Either.Right
                   @ Servant.Server.Internal.ServantErr.ServantErr
                   @ Common.Response
                   Crawler.crawlerApp46) -}
8751b0507a4e0c1b95bdaa5ed87ded19
  crawlerApp46 :: Common.Response
  {- Strictness: m,
     Unfolding: (Common.Response Crawler.crawlerApp47) -}
92e37efc8f69b09fd15b04a60abdbab1
  crawlerApp47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Started"#) -}
22a28a332b8db779eb6e7b47ecfeb03f
  crawlerApp48 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (u :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Common.logDatabase1
                        Crawler.crawlEngine7
                        Crawler.crawlerApp20
                        Crawler.crawlEngine10
                        u
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Database.MongoDB.Connection.globalConnectTimeout
                        `cast`
                      (GHC.IORef.N:IORef[0] <Database.MongoDB.Connection.Secs>_N) of wild { GHC.STRef.STRef var# ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld
                        @ Database.MongoDB.Connection.Secs
                        var#
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of ww { GHC.Types.D# ww1 ->
                 case Database.MongoDB.Connection.$wconnect'
                        ww1
                        MongoDbConnector.connectToDatabase3
                        Database.MongoDB.Connection.defaultPort
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   r1 :: Database.MongoDB.Query.MongoContext {- Strictness: m -}
                   = Database.MongoDB.Query.MongoContext
                       ipv5
                       Database.MongoDB.Query.master
                       MongoDbConnector.connectToDatabase2
                 } in
                 case (Database.MongoDB.Query.$wfind
                         @ GHC.Types.IO
                         Control.Monad.IO.Class.$fMonadIOIO
                         Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                         (GHC.Types.[] @ Database.MongoDB.Internal.Protocol.QueryOption)
                         (Database.MongoDB.Query.Select
                            (GHC.Types.:
                               @ Data.Bson.Field
                               (case Crawler.crawlerApp18 of dt { Data.Text.Internal.Text ipv6 ipv7 ipv8 ->
                                Data.Bson.:= dt (Data.Bson.$fValChar_$cvalList u) })
                               (GHC.Types.[] @ Data.Bson.Field))
                            Crawler.crawlerApp19)
                         (GHC.Types.[] @ Data.Bson.Field)
                         Database.MongoDB.Query.$fSelectQuery1
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         GHC.Types.False
                         Database.MongoDB.Query.$fSelectQuery1
                         (GHC.Types.[] @ Data.Bson.Field)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <Database.MongoDB.Query.Cursor>_R)
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case ((MongoDbConnector.drainCursor_drainCursor'
                          ipv7
                          (GHC.Types.[] @ Data.Bson.Document))
                         `cast`
                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                            <*>_N
                            <Database.MongoDB.Query.MongoContext>_R
                            <GHC.Types.IO>_R
                            <[Data.Bson.Document]>_N)
                         r1)
                        `cast`
                      (GHC.Types.N:IO[0] <[Data.Bson.Document]>_R)
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case Data.Maybe.mapMaybe
                        @ [Data.Bson.Field]
                        @ Crawler.Token
                        Crawler.$fFromBSONToken_$cfromBSON
                        ipv9 of wild1 {
                   []
                   -> case Common.logError1
                             Crawler.crawlEngine7
                             Crawler.crawlerApp49
                             ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                      (# ipv10, GHC.Types.[] @ GHC.Types.Char #) }
                   : ds6 ds7
                   -> (# ipv8,
                         case ds6 of wild2 { Crawler.Token ds ds8 ->
                         ds8 } #) } } } } } } } }) -}
4f015c3048f36da5aedcf267f492c2d3
  crawlerApp49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "No Token Found..."#) -}
428c4b64a92ab7a4297dfaac7c218254
  crawlerApp5 ::
    Servant.Server.Internal.Router.Router'
      () Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.CaptureRouter
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Crawler.crawlerApp6) -}
ee104c60e441d22b0dfa2c0995b86fc2
  crawlerApp50 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Crawler.LookupMap #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map Data.Text.Internal.Text GHC.Base.String)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ Data.Text.Internal.Text @ GHC.Base.String)
                        eta of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    Crawler.LookupMap
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map Data.Text.Internal.Text GHC.Base.String)
                         ipv1) #) }) -}
6e6b0bd8436c54142dfe78b7c37501ce
  crawlerApp51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Creating Crawler Request"#) -}
32c2d5067432c85ee9df7865027dfa01
  crawlerApp52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Request"#) -}
91005ac24d367e8a0add6c9af913331f
  crawlerApp53 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ (s1 :: GHC.Prim.State#
                            GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newByteArray#
                        @ GHC.Prim.RealWorld
                        8#
                        s1 of ds1 { (#,#) ipv ipv1 ->
                 Servant.Server.Internal.$wouter
                   (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                   Servant.Server.Internal.$fHasServerTYPE:>context20
                   Crawler.crawlerApp54
                   0#
                   ipv }) -}
1c2aca088231e43aef9f108a0c0386c0
  crawlerApp54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "init"#) -}
22dead772b9eef386c2c1fb661720985
  crawlerApp6 ::
    Servant.Server.Internal.Router.Router'
      (Data.Text.Internal.Text, ())
      Servant.Server.Internal.RoutingApplication.RoutingApplication
  {- Unfolding: (Servant.Server.Internal.Router.CaptureRouter
                   @ (Data.Text.Internal.Text, ())
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Crawler.crawlerApp7) -}
5a8ece182617afa1822adbaee8117c7c
  crawlerApp7 ::
    Servant.Server.Internal.Router.Router
      (Data.Text.Internal.Text, (Data.Text.Internal.Text, ()))
  {- Unfolding: (Crawler.crawlerApp21 Crawler.crawlerApp8) -}
ce1aeb8ed9f2294d4133935aeb27921c
  crawlerApp8 ::
    Servant.Server.Internal.RoutingApplication.Delayed
      (Data.Text.Internal.Text, (Data.Text.Internal.Text, ()))
      (Servant.Server.Internal.Server
         (Servant.API.Verbs.Verb
            'Network.HTTP.Types.Method.GET
            200
            '[Servant.API.ContentTypes.JSON]
            Common.Response))
  {- Unfolding: (Servant.Server.Internal.RoutingApplication.addCapture
                   @ (Data.Text.Internal.Text, ())
                   @ [GHC.Types.Char]
                   @ (Servant.Server.Internal.Server
                        (Servant.API.Verbs.Verb
                           'Network.HTTP.Types.Method.GET
                           200
                           '[Servant.API.ContentTypes.JSON]
                           Common.Response))
                   @ Data.Text.Internal.Text
                   Crawler.crawlerApp10
                     `cast`
                   (Servant.Server.Internal.RoutingApplication.Delayed
                      <(Data.Text.Internal.Text, ())>_R
                      (Sub (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                <*>_N
                                <"t">_N
                                <[GHC.Types.Char]>_N
                                <Servant.API.Verbs.Verb
                                   'Network.HTTP.Types.Method.GET
                                   200
                                   '[Servant.API.ContentTypes.JSON]
                                   Common.Response>_N
                                <Control.Monad.Trans.Except.ExceptT
                                   Servant.Server.Internal.ServantErr.ServantErr
                                   GHC.Types.IO>_N)))_R
                   Crawler.crawlerApp9) -}
44ba3d19b8af23cb6515dd5546d89209
  crawlerApp9 ::
    Data.Text.Internal.Text
    -> Servant.Server.Internal.RoutingApplication.DelayedIO
         [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (txt :: Data.Text.Internal.Text) ->
                 case Web.Internal.HttpApiData.$w$cparseUrlPiece3
                        txt of ww { Unit# ww1 ->
                 (Servant.Server.Internal.RoutingApplication.$fApplicativeDelayedIO5
                    @ [GHC.Types.Char]
                    ww1)
                   `cast`
                 (Trans
                      (<Network.Wai.Internal.Request>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Servant.Server.Internal.RoutingApplication.RouteResult
                                        [GHC.Types.Char]>_R))
                      (Sym (Servant.Server.Internal.RoutingApplication.N:DelayedIO[0]
                                <[GHC.Types.Char]>_R))) }) -}
893523cee7446110995bc247509d82c0
  crawlerApp_r :: Servant.Server.Internal.Router.Router ()
  {- Unfolding: (Servant.Server.Internal.Router.choice
                   @ ()
                   @ Servant.Server.Internal.RoutingApplication.RoutingApplication
                   Crawler.crawlerApp38
                   Crawler.crawlerApp2) -}
a91c60590a578e40979996c94be055f9
  crawlerServer ::
    Servant.Server.Internal.Server CommonApi.CrawlerApi
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlerServer1
                  `cast`
                (Trans
                     (Trans
                          (<Common.User>_R
                           ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                              <Network.HTTP.Types.Method.StdMethod>_N
                                              <'[Servant.API.ContentTypes.JSON]>_N
                                              <Common.Response>_N
                                              <'Network.HTTP.Types.Method.POST>_N
                                              <200>_N
                                              <Control.Monad.Trans.Except.ExceptT
                                                 Servant.Server.Internal.ServantErr.ServantErr
                                                 GHC.Types.IO>_N)))
                          (Trans
                               (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                              <*>_N
                                              <'[Servant.API.ContentTypes.JSON]>_N
                                              <Common.User>_N
                                              <Servant.API.Verbs.Verb
                                                 'Network.HTTP.Types.Method.POST
                                                 200
                                                 '[Servant.API.ContentTypes.JSON]
                                                 Common.Response>_N
                                              <Control.Monad.Trans.Except.ExceptT
                                                 Servant.Server.Internal.ServantErr.ServantErr
                                                 GHC.Types.IO>_N)))
                               (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                              <*>_N
                                              <"init">_N
                                              <Servant.API.ReqBody.ReqBody
                                                 '[Servant.API.ContentTypes.JSON] Common.User
                                               Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                    '[Servant.API.ContentTypes.JSON]
                                                                    Common.Response>_N
                                              <Control.Monad.Trans.Except.ExceptT
                                                 Servant.Server.Internal.ServantErr.ServantErr
                                                 GHC.Types.IO>_N))))
                      Servant.API.Alternative.:<|> Trans
                                                       (Trans
                                                            (<Common.User>_R
                                                             ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                <Network.HTTP.Types.Method.StdMethod>_N
                                                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                                                <Common.Response>_N
                                                                                <'Network.HTTP.Types.Method.POST>_N
                                                                                <200>_N
                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                                   GHC.Types.IO>_N)))
                                                            (Trans
                                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m5[0]
                                                                                <*>_N
                                                                                <'[Servant.API.ContentTypes.JSON]>_N
                                                                                <Common.User>_N
                                                                                <Servant.API.Verbs.Verb
                                                                                   'Network.HTTP.Types.Method.POST
                                                                                   200
                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                   Common.Response>_N
                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                                   GHC.Types.IO>_N)))
                                                                 (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                <*>_N
                                                                                <"kill">_N
                                                                                <Servant.API.ReqBody.ReqBody
                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                   Common.User
                                                                                 Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                      '[Servant.API.ContentTypes.JSON]
                                                                                                      Common.Response>_N
                                                                                <Control.Monad.Trans.Except.ExceptT
                                                                                   Servant.Server.Internal.ServantErr.ServantErr
                                                                                   GHC.Types.IO>_N))))
                                                        Servant.API.Alternative.:<|> Trans
                                                                                         (<[GHC.Types.Char]>_R
                                                                                          ->_R Trans
                                                                                                   (<[GHC.Types.Char]>_R
                                                                                                    ->_R Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPEVerbm0[0]
                                                                                                                       <Network.HTTP.Types.Method.StdMethod>_N
                                                                                                                       <'[Servant.API.ContentTypes.JSON]>_N
                                                                                                                       <Common.Response>_N
                                                                                                                       <'Network.HTTP.Types.Method.GET>_N
                                                                                                                       <200>_N
                                                                                                                       <Control.Monad.Trans.Except.ExceptT
                                                                                                                          Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                          GHC.Types.IO>_N)))
                                                                                                   (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                                                                                                  <*>_N
                                                                                                                  <"t">_N
                                                                                                                  <[GHC.Types.Char]>_N
                                                                                                                  <Servant.API.Verbs.Verb
                                                                                                                     'Network.HTTP.Types.Method.GET
                                                                                                                     200
                                                                                                                     '[Servant.API.ContentTypes.JSON]
                                                                                                                     Common.Response>_N
                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                     Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                     GHC.Types.IO>_N))))
                                                                                         (Trans
                                                                                              (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m11[0]
                                                                                                             <*>_N
                                                                                                             <"u">_N
                                                                                                             <[GHC.Types.Char]>_N
                                                                                                             <Servant.API.Capture.Capture
                                                                                                                "t"
                                                                                                                GHC.Base.String
                                                                                                              Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                                                   '[Servant.API.ContentTypes.JSON]
                                                                                                                                   Common.Response>_N
                                                                                                             <Control.Monad.Trans.Except.ExceptT
                                                                                                                Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                GHC.Types.IO>_N)))
                                                                                              (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:>m4[0]
                                                                                                             <*>_N
                                                                                                             <"token">_N
                                                                                                             <Servant.API.Capture.Capture
                                                                                                                "u"
                                                                                                                GHC.Base.String
                                                                                                              Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                                                                                    "t"
                                                                                                                                    GHC.Base.String
                                                                                                                                  Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                                                                       '[Servant.API.ContentTypes.JSON]
                                                                                                                                                       Common.Response)>_N
                                                                                                             <Control.Monad.Trans.Except.ExceptT
                                                                                                                Servant.Server.Internal.ServantErr.ServantErr
                                                                                                                GHC.Types.IO>_N)))))_R
                                                       (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                                                      <"kill"
                                                                       Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                                                             '[Servant.API.ContentTypes.JSON]
                                                                                             Common.User
                                                                                           Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                                                                '[Servant.API.ContentTypes.JSON]
                                                                                                                Common.Response)>_N
                                                                      <"token"
                                                                       Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                                             "u"
                                                                                             GHC.Base.String
                                                                                           Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                                                                 "t"
                                                                                                                 GHC.Base.String
                                                                                                               Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                                                    '[Servant.API.ContentTypes.JSON]
                                                                                                                                    Common.Response))>_N
                                                                      <Control.Monad.Trans.Except.ExceptT
                                                                         Servant.Server.Internal.ServantErr.ServantErr
                                                                         GHC.Types.IO>_N))))_R
                     (Sub (Sym (Servant.Server.Internal.D:R:ServerTTYPE:<|>m[0]
                                    <"init"
                                     Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                           '[Servant.API.ContentTypes.JSON]
                                                           Common.User
                                                         Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                              '[Servant.API.ContentTypes.JSON]
                                                                              Common.Response)>_N
                                    <("kill"
                                      Servant.API.Sub.:> (Servant.API.ReqBody.ReqBody
                                                            '[Servant.API.ContentTypes.JSON]
                                                            Common.User
                                                          Servant.API.Sub.:> Servant.API.Verbs.Post
                                                                               '[Servant.API.ContentTypes.JSON]
                                                                               Common.Response))
                                     Servant.API.Alternative.:<|> ("token"
                                                                   Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                                         "u"
                                                                                         GHC.Base.String
                                                                                       Servant.API.Sub.:> (Servant.API.Capture.Capture
                                                                                                             "t"
                                                                                                             GHC.Base.String
                                                                                                           Servant.API.Sub.:> Servant.API.Verbs.Get
                                                                                                                                '[Servant.API.ContentTypes.JSON]
                                                                                                                                Common.Response)))>_N
                                    <Control.Monad.Trans.Except.ExceptT
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       GHC.Types.IO>_N)))) -}
08829584fba61a0ee8d30a78237b29e8
  crawlerServer1 ::
    (Common.User -> CommonApi.ApiHandler Common.Response)
    Servant.API.Alternative.:<|> ((Common.User
                                   -> CommonApi.ApiHandler Common.Response)
                                  Servant.API.Alternative.:<|> (GHC.Base.String
                                                                -> GHC.Base.String
                                                                -> CommonApi.ApiHandler
                                                                     Common.Response))
  {- Strictness: m,
     Unfolding: (Servant.API.Alternative.:<|>
                   @ (Common.User -> CommonApi.ApiHandler Common.Response)
                   @ ((Common.User -> CommonApi.ApiHandler Common.Response)
                      Servant.API.Alternative.:<|> (GHC.Base.String
                                                    -> GHC.Base.String
                                                    -> CommonApi.ApiHandler Common.Response))
                   Crawler.crawlerApp44
                     `cast`
                   (<Common.User>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          Common.Response>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <Common.Response>_N)))
                   Crawler.crawlerServer2) -}
773f8fe916c62b38753642ab35d285ad
  crawlerServer2 ::
    (Common.User -> CommonApi.ApiHandler Common.Response)
    Servant.API.Alternative.:<|> (GHC.Base.String
                                  -> GHC.Base.String -> CommonApi.ApiHandler Common.Response)
  {- Strictness: m,
     Unfolding: (Servant.API.Alternative.:<|>
                   @ (Common.User -> CommonApi.ApiHandler Common.Response)
                   @ (GHC.Base.String
                      -> GHC.Base.String -> CommonApi.ApiHandler Common.Response)
                   Crawler.crawlerApp31
                     `cast`
                   (<Common.User>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          Common.Response>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <Common.Response>_N)))
                   Crawler.crawlerApp14
                     `cast`
                   (<GHC.Base.String>_R
                    ->_R <GHC.Base.String>_R
                    ->_R Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <Data.Either.Either
                                          Servant.Server.Internal.ServantErr.ServantErr
                                          Common.Response>_R))
                             (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                       <Servant.Server.Internal.ServantErr.ServantErr>_N
                                       <GHC.Types.IO>_R
                                       <Common.Response>_N)))) -}
4ad5ede475a2cee4fa21ca9adcc80d21
  entries ::
    Crawler.LookupMap
    -> GHC.Conc.Sync.TVar
         (Data.Map.Base.Map Data.Text.Internal.Text GHC.Base.String)
  RecSel Left Crawler.LookupMap
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Crawler.LookupMap) ->
                 case ds of wild { Crawler.LookupMap ds1 -> ds1 }) -}
1ca5d6df5a74fbfe168f391e0567e417
  findCrawl :: GHC.Base.String -> GHC.Types.IO Crawler.Crawl
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlEngine9
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Crawler.Crawl>_R)) -}
12bd532cce1247fae4fa7e64c4ddc308
  findLookup ::
    Crawler.LookupMap
    -> Data.Text.Internal.Text
    -> GHC.Conc.Sync.STM (GHC.Base.Maybe GHC.Base.String)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S(S)),1*U(1*U(U))><L,1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlOnContributor7
                  `cast`
                (<Crawler.LookupMap>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0]
                               <GHC.Base.Maybe GHC.Base.String>_R)) -}
42b4a57cfd67adafa3a06dfedf88935c
  findToken :: GHC.Base.String -> GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlerApp48
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
c70a4361b3e924e20ba0ae7e898fded6
  initCrawler :: Common.User -> CommonApi.ApiHandler Common.Response
  {- Arity: 2, Strictness: <S,1*U(U,A,U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlerApp44
                  `cast`
                (<Common.User>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       Common.Response>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <Common.Response>_N))) -}
220365efe4b58029849d0be610194908
  killCrawler :: Common.User -> CommonApi.ApiHandler Common.Response
  {- Arity: 2, Strictness: <L,1*U(1*U,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlerApp31
                  `cast`
                (<Common.User>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       Common.Response>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <Common.Response>_N))) -}
58ebb0e2ced7f3d29d8097ec2448a7a4
  logLinkAction ::
    GHC.Types.Bool
    -> Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*U><L,1*U(U,U,U)><L,1*U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlOnContributor9
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
606a94166913eaa4c5594defb93195b3
  mkCrawler :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.mkCrawler1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
030532251578434d0894940852c62781
  mkCrawler1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Common.logHeading1
                        Crawler.crawlEngine7
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Common.logAction1
                        Crawler.crawlEngine7
                        Crawler.mkCrawler6
                        Crawler.mkCrawler4
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 Network.Wai.Handler.Warp.Run.$wrunSettings
                   Crawler.mkCrawler2
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Crawler.crawlerApp
                   ipv2 } }) -}
384c214f6a067184131712b192178fa6
  mkCrawler2 :: Network.Wai.Handler.Warp.Types.Port
  {- Unfolding: (case Text.Read.readEither6
                        @ GHC.Types.Int
                        Crawler.mkCrawler3 of wild {
                   [] -> Common.getIdentityPort2
                   : x ds
                   -> case ds of wild1 {
                        [] -> x : ipv ipv1 -> Common.getIdentityPort1 } }) -}
146feb0c31ed3c5a626303a2c3a2b593
  mkCrawler3 :: [(GHC.Types.Int, GHC.Base.String)]
  {- Unfolding: (Text.ParserCombinators.ReadP.run
                   @ GHC.Types.Int
                   Common.getIdentityPort3
                   CommonApi.crawlerIdentity1) -}
ad264bc7dd8c442a60bb6e7939fb13fa
  mkCrawler4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "on: "#
                   Crawler.mkCrawler5) -}
3d4de41e372b0266ed963dd674ed52f2
  mkCrawler5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   CommonApi.crawlerIdentity2
                   (GHC.CString.unpackAppendCString#
                      "_"#
                      CommonApi.crawlerIdentity1)) -}
5e6c258780acef0663114ca250615617
  mkCrawler6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Starting"#) -}
cb90c39647efd3a6c772df2111292aac
  newLookupMap :: GHC.Types.IO Crawler.LookupMap
  {- Arity: 1, HasNoCafRefs,
     Unfolding: InlineRule (0, True, True)
                Crawler.newLookupMap1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <Crawler.LookupMap>_R)) -}
22eee837930c0b9164d27826bf88abea
  newLookupMap1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Crawler.LookupMap #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (GHC.Prim.atomically#
                   @ Crawler.LookupMap
                   Crawler.crawlerApp50) -}
fcec6e43ca80aa9cb8fc6caeae52b1c4
  startCrawl ::
    Crawler.Crawl
    -> Common.User -> Crawler.LookupMap -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S,1*U(U,A)><S,1*U(A,A,U(U))><L,U(U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.startCrawl1
                  `cast`
                (<Crawler.Crawl>_R
                 ->_R <Common.User>_R
                 ->_R <Crawler.LookupMap>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
4c6b26ede8f4a3aee29ace91ced02d97
  startCrawl1 ::
    Crawler.Crawl
    -> Common.User
    -> Crawler.LookupMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S,1*U(U,A)><S,1*U(A,A,U(U))><L,U(U(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Crawler.Crawl)
                   (w1 :: Common.User)
                   (w2 :: Crawler.LookupMap)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Crawler.Crawl ww1 ww2 ->
                 case w1 of ww3 { Common.User ww4 ww5 ww6 ->
                 Crawler.$wstartCrawl ww1 ww6 w2 w3 } }) -}
62ac7cb50ffc3604b2f606d025ca2a29
  storeToken ::
    GHC.Base.String
    -> GHC.Base.String -> CommonApi.ApiHandler Common.Response
  {- Arity: 3, Strictness: <L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.crawlerApp14
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Trans
                          (Sym (GHC.Types.N:IO[0]
                                    <Data.Either.Either
                                       Servant.Server.Internal.ServantErr.ServantErr
                                       Common.Response>_R))
                          (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                    <Servant.Server.Internal.ServantErr.ServantErr>_N
                                    <GHC.Types.IO>_R
                                    <Common.Response>_N))) -}
9aab71cb62d89c70cb956aa7e349822f
  tName :: Crawler.Token -> GHC.Base.String
  RecSel Left Crawler.Token
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Crawler.Token) ->
                 case ds of wild { Crawler.Token ds1 ds2 -> ds1 }) -}
845a94cc11363564983c1b991a8df4ba
  tValue :: Crawler.Token -> GHC.Base.String
  RecSel Left Crawler.Token
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Crawler.Token) ->
                 case ds of wild { Crawler.Token ds1 ds2 -> ds2 }) -}
fabe67053543ae2b9edc67046eee616b
  upsertCrawl :: Crawler.Crawl -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.upsertCrawl1
                  `cast`
                (<Crawler.Crawl>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ddd1b37d4fdc5c5e7546e21a920ab950
  upsertCrawl1 ::
    Crawler.Crawl
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Crawler.Crawl)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Crawler.Crawl ww1 ww2 ->
                 Crawler.$wupsertCrawl ww1 ww2 w1 }) -}
bb0474be9c2dbe0b60302b2416998a14
  upsertCrawlWhenTrue ::
    GHC.Base.String -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Crawler.upsertCrawlWhenTrue1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
a039ffb74117eadd1f7c676c219d7bd7
  upsertCrawlWhenTrue1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (c :: GHC.Base.String)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Crawler.crawlEngine9 c s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Crawler.Crawl ds ds2 ->
                 case ds2 of wild1 {
                   GHC.Types.False -> (# ipv, GHC.Types.False #)
                   GHC.Types.True
                   -> case Crawler.$wupsertCrawl
                             c
                             GHC.Types.False
                             ipv of ds3 { (#,#) ipv2 ipv3 ->
                      (# ipv2, GHC.Types.True #) } } } }) -}
instance GHC.Classes.Eq [Crawler.Crawl] = Crawler.$fEqCrawl
instance GHC.Classes.Eq [Crawler.Token] = Crawler.$fEqToken
instance Data.Bson.Generic.FromBSON [GHC.Types.Bool]
  = Crawler.$fFromBSONBool
instance Data.Bson.Generic.FromBSON [Crawler.Crawl]
  = Crawler.$fFromBSONCrawl
instance Data.Bson.Generic.FromBSON [Crawler.Token]
  = Crawler.$fFromBSONToken
instance Data.Aeson.Types.FromJSON.FromJSON [Crawler.Crawl]
  = Crawler.$fFromJSONCrawl
instance Data.Aeson.Types.FromJSON.FromJSON [Crawler.Token]
  = Crawler.$fFromJSONToken
instance GHC.Generics.Generic [Crawler.Crawl]
  = Crawler.$fGenericCrawl
instance GHC.Generics.Generic [Crawler.Token]
  = Crawler.$fGenericToken
instance GHC.Show.Show [Crawler.Crawl] = Crawler.$fShowCrawl
instance GHC.Show.Show [Crawler.Token] = Crawler.$fShowToken
instance Data.Bson.Generic.ToBSON [GHC.Types.Bool]
  = Crawler.$fToBSONBool
instance Data.Bson.Generic.ToBSON [Crawler.Crawl]
  = Crawler.$fToBSONCrawl
instance Data.Bson.Generic.ToBSON [Crawler.Token]
  = Crawler.$fToBSONToken
instance Data.Aeson.Types.ToJSON.ToJSON [Crawler.Crawl]
  = Crawler.$fToJSONCrawl
instance Data.Aeson.Types.ToJSON.ToJSON [Crawler.Token]
  = Crawler.$fToJSONToken
family instance GHC.Generics.Rep [Crawler.Token]
  = Crawler.Rep_Token
family instance GHC.Generics.Rep [Crawler.Crawl]
  = Crawler.Rep_Crawl
"SPEC/Crawler $dmtoBSON @ Bool" [ALWAYS] forall ($dToBSON :: Data.Bson.Generic.ToBSON
                                                               GHC.Types.Bool)
                                                ($dGeneric :: GHC.Generics.Generic GHC.Types.Bool)
                                                ($dGConstructorCount :: Data.Bson.Generic.GConstructorCount
                                                                          (GHC.Generics.Rep
                                                                             GHC.Types.Bool))
                                                ($dGToBSON :: Data.Bson.Generic.GToBSON
                                                                (GHC.Generics.Rep GHC.Types.Bool))
  Data.Bson.Generic.$dmtoBSON @ GHC.Types.Bool
                              $dToBSON
                              $dGeneric
                              $dGConstructorCount
                              $dGToBSON
  = Crawler.$fToBSONBool_$s$dmtoBSON
"SPEC/Crawler $fAllCTRender:a @ JSON @ '[] @ Response" [ALWAYS] forall ($dAccept :: Servant.API.ContentTypes.Accept
                                                                                      Servant.API.ContentTypes.JSON)
                                                                       ($dAllMime :: Servant.API.ContentTypes.AllMime
                                                                                       '[])
                                                                       ($dAllMimeRender :: Servant.API.ContentTypes.AllMimeRender
                                                                                             '[Servant.API.ContentTypes.JSON]
                                                                                             Common.Response)
  Servant.API.ContentTypes.$fAllCTRender:a @ Servant.API.ContentTypes.JSON
                                           @ '[]
                                           @ Common.Response
                                           $dAccept
                                           $dAllMime
                                           $dAllMimeRender
  = Crawler.$s$fAllCTRender:a
"SPEC/Crawler $fAllMimeRender:a0 @ JSON @ Response" [ALWAYS] forall ($dMimeRender :: Servant.API.ContentTypes.MimeRender
                                                                                       Servant.API.ContentTypes.JSON
                                                                                       Common.Response)
  Servant.API.ContentTypes.$fAllMimeRender:a0 @ Servant.API.ContentTypes.JSON
                                              @ Common.Response
                                              $dMimeRender
  = Crawler.$s$fAllCTRender:a_$s$fAllMimeRender:a0
"SPEC/Crawler $fAllMimeUnrender:a @ JSON @ User @ '[]" [ALWAYS] forall ($dMimeUnrender :: Servant.API.ContentTypes.MimeUnrender
                                                                                            Servant.API.ContentTypes.JSON
                                                                                            Common.User)
                                                                       ($dAllMimeUnrender :: Servant.API.ContentTypes.AllMimeUnrender
                                                                                               '[]
                                                                                               Common.User)
  Servant.API.ContentTypes.$fAllMimeUnrender:a @ Servant.API.ContentTypes.JSON
                                               @ Common.User
                                               @ '[]
                                               $dMimeUnrender
                                               $dAllMimeUnrender
  = Crawler.$s$fAllMimeUnrender:a
"SPEC/Crawler $fConstructorMetaMetaCons @ "Crawl" @ 'PrefixI @ 'True" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Crawl")
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.True)
  GHC.Generics.$fConstructorMetaMetaCons @ "Crawl"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.True
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Crawler.$fToBSONCrawl_$s$fConstructorMetaMetaCons
"SPEC/Crawler $fConstructorMetaMetaCons @ "False" @ 'PrefixI @ 'False" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                           "False")
                                                                                       ($dSingI :: GHC.Generics.SingI
                                                                                                     'GHC.Generics.PrefixI)
                                                                                       ($dSingI1 :: GHC.Generics.SingI
                                                                                                      'GHC.Types.False)
  GHC.Generics.$fConstructorMetaMetaCons @ "False"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Crawler.$fToBSONBool_$s$fConstructorMetaMetaCons1
"SPEC/Crawler $fConstructorMetaMetaCons @ "Token" @ 'PrefixI @ 'True" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "Token")
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.True)
  GHC.Generics.$fConstructorMetaMetaCons @ "Token"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.True
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Crawler.$fToBSONToken_$s$fConstructorMetaMetaCons
"SPEC/Crawler $fConstructorMetaMetaCons @ "True" @ 'PrefixI @ 'False" [ALWAYS] forall ($dKnownSymbol :: GHC.TypeLits.KnownSymbol
                                                                                                          "True")
                                                                                      ($dSingI :: GHC.Generics.SingI
                                                                                                    'GHC.Generics.PrefixI)
                                                                                      ($dSingI1 :: GHC.Generics.SingI
                                                                                                     'GHC.Types.False)
  GHC.Generics.$fConstructorMetaMetaCons @ "True"
                                         @ 'GHC.Generics.PrefixI
                                         @ 'GHC.Types.False
                                         $dKnownSymbol
                                         $dSingI
                                         $dSingI1
  = Crawler.$fToBSONBool_$s$fConstructorMetaMetaCons
"SPEC/Crawler $fMimeRenderTYPEJSONa @ Response" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                               Common.Response)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa @ Common.Response
                                                 $dToJSON
  = Crawler.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa
"SPEC/Crawler $fMimeRenderTYPEJSONa_$cmimeRender @ Response" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                                            Common.Response)
  Servant.API.ContentTypes.$fMimeRenderTYPEJSONa_$cmimeRender @ Common.Response
                                                              $dToJSON
  = Crawler.$s$fAllCTRender:a_$s$fMimeRenderTYPEJSONa_$cmimeRender
"SPEC/Crawler $fMimeUnrenderTYPEJSONa @ User" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                               Common.User)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa @ Common.User
                                                   $dFromJSON
  = Crawler.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa
"SPEC/Crawler $fMimeUnrenderTYPEJSONa_$cmimeUnrender @ User" [ALWAYS] forall ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON
                                                                                              Common.User)
  Servant.API.ContentTypes.$fMimeUnrenderTYPEJSONa_$cmimeUnrender @ Common.User
                                                                  $dFromJSON
  = Crawler.$s$fAllMimeUnrender:a_$s$fMimeUnrenderTYPEJSONa_$cmimeUnrender
"SPEC/Crawler $fSelectorMetaMetaSel @ ('Just
                                        "cName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                             "cName"))
                                                                                                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                            ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                            ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "cName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel1
"SPEC/Crawler $fSelectorMetaMetaSel @ ('Just
                                        "cStatus") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                            ('GHC.Base.Just
                                                                                                                                                                                               "cStatus"))
                                                                                                                                                                              ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                              ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                              ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                             'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "cStatus")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel
"SPEC/Crawler $fSelectorMetaMetaSel @ ('Just
                                        "tName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                          ('GHC.Base.Just
                                                                                                                                                                                             "tName"))
                                                                                                                                                                            ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                           'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                            ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                           'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                            ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                           'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "tName")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel1
"SPEC/Crawler $fSelectorMetaMetaSel @ ('Just
                                        "tValue") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                           ('GHC.Base.Just
                                                                                                                                                                                              "tValue"))
                                                                                                                                                                             ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                             ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                             ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                            'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel @ ('GHC.Base.Just "tValue")
                                     @ 'GHC.Generics.NoSourceUnpackedness
                                     @ 'GHC.Generics.NoSourceStrictness
                                     @ 'GHC.Generics.DecidedLazy
                                     $dSingI
                                     $dSingI1
                                     $dSingI2
                                     $dSingI3
  = Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel
"SPEC/Crawler $fSelectorMetaMetaSel_$cselName @ ('Just
                                                  "cName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                                 "cName"))
                                                                                                                                                                                                ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "cName")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Crawler $fSelectorMetaMetaSel_$cselName @ ('Just
                                                  "cStatus") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                                ('GHC.Base.Just
                                                                                                                                                                                                                   "cStatus"))
                                                                                                                                                                                                  ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                  ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                  ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                 'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "cStatus")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Crawler.$fFromBSONCrawl_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Crawler $fSelectorMetaMetaSel_$cselName @ ('Just
                                                  "tName") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                              ('GHC.Base.Just
                                                                                                                                                                                                                 "tName"))
                                                                                                                                                                                                ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                               'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                               'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                               'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "tName")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel_$cselName1
"SPEC/Crawler $fSelectorMetaMetaSel_$cselName @ ('Just
                                                  "tValue") @ 'NoSourceUnpackedness @ 'NoSourceStrictness @ 'DecidedLazy" [ALWAYS] forall ($dSingI :: GHC.Generics.SingI
                                                                                                                                                                                                               ('GHC.Base.Just
                                                                                                                                                                                                                  "tValue"))
                                                                                                                                                                                                 ($dSingI1 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceUnpackedness)
                                                                                                                                                                                                 ($dSingI2 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.NoSourceStrictness)
                                                                                                                                                                                                 ($dSingI3 :: GHC.Generics.SingI
                                                                                                                                                                                                                'GHC.Generics.DecidedLazy)
  GHC.Generics.$fSelectorMetaMetaSel_$cselName @ ('GHC.Base.Just
                                                    "tValue")
                                               @ 'GHC.Generics.NoSourceUnpackedness
                                               @ 'GHC.Generics.NoSourceStrictness
                                               @ 'GHC.Generics.DecidedLazy
                                               $dSingI
                                               $dSingI1
                                               $dSingI2
                                               $dSingI3
  = Crawler.$fFromBSONToken_$s$fSelectorMetaMetaSel_$cselName
"SPEC/Crawler constructorCount @ Bool" [ALWAYS] forall ($dGeneric :: GHC.Generics.Generic
                                                                       GHC.Types.Bool)
                                                       ($dGConstructorCount :: Data.Bson.Generic.GConstructorCount
                                                                                 (GHC.Generics.Rep
                                                                                    GHC.Types.Bool))
  Data.Bson.Generic.constructorCount @ GHC.Types.Bool
                                     $dGeneric
                                     $dGConstructorCount
  = Crawler.$fToBSONBool_$sconstructorCount
"SPEC/Crawler encode @ Response" [ALWAYS] forall ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON
                                                                Common.Response)
  Data.Aeson.encode @ Common.Response $dToJSON
  = Crawler.$s$fAllCTRender:a_$sencode
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

